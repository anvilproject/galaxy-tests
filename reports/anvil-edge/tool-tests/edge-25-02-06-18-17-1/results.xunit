<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="83"
           errors="12"
           failures="29"
           skip="0">
    
    <testcase classname="anndata_import (Test #1)" name="0" time="56.40882921218872">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "a9560e9f5fed1eb2",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/94/configs/tmpaye3a5ul\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/94/configs/tmpaye3a5ul\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-06T18:56:05.359034",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-45qsb",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "9f996ecb59be4c14",  "inputs": {   "hd5_format|in|input": {    "id": "a9560e9f5fed1eb2",    "src": "hda",    "uuid": "91a3171e-5e5c-46e7-88d6-9ae2880cc0d7"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738868187.0000000",    "title": "Job End Time",    "value": "2025-02-06 18:56:27"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738868185.0000000",    "title": "Job Start Time",    "value": "2025-02-06 18:56:25"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "d374f588d8518e82",    "src": "hda",    "uuid": "798a1647-2d23-4f73-81f2-22259521f7b9"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 116, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/9/1/a/dataset_91a3171e-5e5c-46e7-88d6-9ae2880cc0d7.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/9/1/a/dataset_91a3171e-5e5c-46e7-88d6-9ae2880cc0d7.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-06T18:56:42.494558",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 56.40882921218872, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/9/1/a/dataset_91a3171e-5e5c-46e7-88d6-9ae2880cc0d7.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #1)" name="0" time="33.48690414428711">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "3a9b89790d685d34",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/109/configs/tmp79pp877s\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/109/configs/tmp79pp877s\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-06T18:59:45.619969",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-7j6mz",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "45c65331e3c166c8",  "inputs": {   "hd5_format|in|input": {    "id": "3a9b89790d685d34",    "src": "hda",    "uuid": "79c3938c-c62f-48a2-a7a0-b697ca2df3d4"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738868388.0000000",    "title": "Job End Time",    "value": "2025-02-06 18:59:48"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738868387.0000000",    "title": "Job Start Time",    "value": "2025-02-06 18:59:47"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "3080ac5ec599d953",    "src": "hda",    "uuid": "92eb88ee-7a0f-45bb-83cd-190dc8438859"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 131, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/7/9/c/dataset_79c3938c-c62f-48a2-a7a0-b697ca2df3d4.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/7/9/c/dataset_79c3938c-c62f-48a2-a7a0-b697ca2df3d4.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-06T18:59:59.743567",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 33.48690414428711, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/7/9/c/dataset_79c3938c-c62f-48a2-a7a0-b697ca2df3d4.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="34.760244369506836">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "dfb0f0247a753041",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/96/configs/tmpm1yqmb83\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/96/configs/tmpm1yqmb83\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-06T18:57:03.746509",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-9x4h6",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "29673979124ab09d",  "inputs": {   "hd5_format|in|input": {    "id": "dfb0f0247a753041",    "src": "hda",    "uuid": "64c59edc-2723-4ee6-914c-297cb94b0238"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738868226.0000000",    "title": "Job End Time",    "value": "2025-02-06 18:57:06"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738868225.0000000",    "title": "Job Start Time",    "value": "2025-02-06 18:57:05"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "8fa684af32a6f7db",    "src": "hda",    "uuid": "766e000b-c024-48b6-9711-29d6ff234650"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 118, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/6/4/c/dataset_64c59edc-2723-4ee6-914c-297cb94b0238.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/6/4/c/dataset_64c59edc-2723-4ee6-914c-297cb94b0238.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-06T18:57:17.457282",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmpreiii33qimport.csv.h5ad v. /tmp/tmptru7kiubimport.csv.h5ad )\nFiles /tmp/tmpreiii33qimport.csv.h5ad=29512b but /tmp/tmptru7kiubimport.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 34.760244369506836, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/6/4/c/dataset_64c59edc-2723-4ee6-914c-297cb94b0238.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="32.227094650268555">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "6a5a5fadbd781165",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/111/configs/tmp_ufqbz5y\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/111/configs/tmp_ufqbz5y\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:00:18.189142",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-gdn8l",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "d30477e1cdea3742",  "inputs": {   "hd5_format|in|input": {    "id": "6a5a5fadbd781165",    "src": "hda",    "uuid": "e865ff8e-063a-47d4-8bb1-ff417a0b5b58"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738868421.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:00:21"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738868420.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:00:20"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "f9956c23f81d1895",    "src": "hda",    "uuid": "6b335a3f-7b41-4278-bb88-f4417d672b1a"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 133, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/e/8/6/dataset_e865ff8e-063a-47d4-8bb1-ff417a0b5b58.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/e/8/6/dataset_e865ff8e-063a-47d4-8bb1-ff417a0b5b58.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-06T19:00:32.192745",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmp9holk7yfimport.csv.h5ad v. /tmp/tmp37w_y_k2import.csv.h5ad )\nFiles /tmp/tmp9holk7yfimport.csv.h5ad=29512b but /tmp/tmp37w_y_k2import.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 32.227094650268555, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/e/8/6/dataset_e865ff8e-063a-47d4-8bb1-ff417a0b5b58.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="10.904224872589111">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 10.904224872589111, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="34.549187898635864">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "f18772893609da94",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/113/configs/tmppdlbn6kw\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/113/configs/tmppdlbn6kw\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:00:51.786187",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-srvq8",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "bf17d131a8c371b7",  "inputs": {   "hd5_format|in|input": {    "id": "f18772893609da94",    "src": "hda",    "uuid": "c66641dd-d21c-4b9d-b177-4a3f7ca0d34a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738868455.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:00:55"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738868453.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:00:53"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "5d489a3da18aca75",    "src": "hda",    "uuid": "52a912c9-e0ce-4cf3-a02f-80d6b8ba45fa"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 135, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/c/6/6/dataset_c66641dd-d21c-4b9d-b177-4a3f7ca0d34a.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/c/6/6/dataset_c66641dd-d21c-4b9d-b177-4a3f7ca0d34a.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-06T19:01:06.837234",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 34.549187898635864, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/c/6/6/dataset_c66641dd-d21c-4b9d-b177-4a3f7ca0d34a.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="27.357076406478882">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "2b1c2dccf5261ba7",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/99/configs/tmpvyp0_r_0\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/99/configs/tmpvyp0_r_0\u0027    \u0026\u0026 rm -rf mtx",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-02-06T18:57:48.467503",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-jxkwc",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "95a02b5fd119054a",  "inputs": {   "hd5_format|in|matrix": {    "id": "2b1c2dccf5261ba7",    "src": "hda",    "uuid": "01f75612-ad7e-48a2-9811-f7666c48f0b5"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "f923661319951725",    "src": "hda",    "uuid": "cc8f1297-ca68-41ff-9b29-6b8b7be859ac"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 121, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "error",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/0/1/f/dataset_01f75612-ad7e-48a2-9811-f7666c48f0b5.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/0/1/f/dataset_01f75612-ad7e-48a2-9811-f7666c48f0b5.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-06T18:57:55.708384",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 3, "time_seconds": 27.357076406478882, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/0/1/f/dataset_01f75612-ad7e-48a2-9811-f7666c48f0b5.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="34.52447009086609">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "40a7079927a32b0d",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/115/configs/tmp5injs89h\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/115/configs/tmp5injs89h\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:01:26.039560",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-rxnrd",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "17cd3826d6cee01b",  "inputs": {   "hd5_format|in|matrix": {    "id": "40a7079927a32b0d",    "src": "hda",    "uuid": "250ab884-eb13-4757-aea9-435b56defa89"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738868490.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:01:30"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738868488.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:01:28"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "73617bd646695595",    "src": "hda",    "uuid": "1bcb5055-7e46-4ad2-89d4-e33aa0389b7e"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 137, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/2/5/0/dataset_250ab884-eb13-4757-aea9-435b56defa89.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/2/5/0/dataset_250ab884-eb13-4757-aea9-435b56defa89.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-06T19:01:41.395277",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 34.52447009086609, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/2/5/0/dataset_250ab884-eb13-4757-aea9-435b56defa89.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="34.53952765464783">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "00ac81196eb32887",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/e/4/f/dataset_e4fc4b66-a969-4bb6-a992-7f30c5f4ea4b.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/101/configs/tmpon4qefeq\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/101/configs/tmpon4qefeq\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-06T18:58:16.158996",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-cd8zw",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "d73aa3f752438ac1",  "inputs": {   "hd5_format|in|input": {    "id": "00ac81196eb32887",    "src": "hda",    "uuid": "e4fc4b66-a969-4bb6-a992-7f30c5f4ea4b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738868299.0000000",    "title": "Job End Time",    "value": "2025-02-06 18:58:19"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738868297.0000000",    "title": "Job Start Time",    "value": "2025-02-06 18:58:17"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "72391168ed32ebdb",    "src": "hda",    "uuid": "1b33936d-e989-44c8-967a-b82992482d7a"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 123, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-06T18:58:30.407153",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 34.53952765464783, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="35.74054956436157">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "a4e4696128341787",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/2/0/b/dataset_20b52b0c-f52f-46f4-881c-eb6795fa6ce5.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/117/configs/tmp3t89hj8b\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/117/configs/tmp3t89hj8b\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:02:02.075724",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-r9dsj",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "d374f588d8518e82",  "inputs": {   "hd5_format|in|input": {    "id": "a4e4696128341787",    "src": "hda",    "uuid": "20b52b0c-f52f-46f4-881c-eb6795fa6ce5"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738868525.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:02:05"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738868523.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:02:03"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "37b1168030a7cb1b",    "src": "hda",    "uuid": "b58ae81a-e79a-4caa-9901-d533c04d3c3d"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 139, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-06T19:02:17.054198",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 35.74054956436157, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="43.85143256187439">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|coldata": {   "id": "f97a40b6b9eddadf",   "src": "hda"  },  "hd5_format|filetype": "loom",  "hd5_format|mainmatrix": {   "id": "17f6d59d2345ad9e",   "src": "hda"  },  "hd5_format|other_files": {   "id": "a68ac77d547af755",   "src": "hda"  },  "hd5_format|rowdata": {   "id": "1f4b95f380e3ee7a",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/fb9e030ffae4/anndata_import/tsv_to_loompy.py\u0027 -c \u0027/galaxy/server/database/objects/f/d/d/dataset_fddb248d-25be-492c-9c63-900d17d1fdbf.dat\u0027 -r \u0027/galaxy/server/database/objects/e/a/3/dataset_ea37954a-9822-4fbd-9967-94db221fc180.dat\u0027 -f \u0027/galaxy/server/database/objects/6/6/0/dataset_660d4e2b-4b1d-4842-bd83-cf8549133b9b.dat\u0027 \u0027/galaxy/server/database/objects/3/0/b/dataset_30bbe480-4328-4da0-9832-7fc1a0ff4a44.dat\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-06T18:59:00.489074",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-9927f",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "bc9aef361a6bc3ab",  "inputs": {   "hd5_format|coldata": {    "id": "f97a40b6b9eddadf",    "src": "hda",    "uuid": "fddb248d-25be-492c-9c63-900d17d1fdbf"   },   "hd5_format|mainmatrix": {    "id": "17f6d59d2345ad9e",    "src": "hda",    "uuid": "660d4e2b-4b1d-4842-bd83-cf8549133b9b"   },   "hd5_format|other_files": {    "id": "a68ac77d547af755",    "src": "hda",    "uuid": "30bbe480-4328-4da0-9832-7fc1a0ff4a44"   },   "hd5_format|other_files1": {    "id": "a68ac77d547af755",    "src": "hda",    "uuid": "30bbe480-4328-4da0-9832-7fc1a0ff4a44"   },   "hd5_format|rowdata": {    "id": "1f4b95f380e3ee7a",    "src": "hda",    "uuid": "ea37954a-9822-4fbd-9967-94db221fc180"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738868344.0000000",    "title": "Job End Time",    "value": "2025-02-06 18:59:04"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738868342.0000000",    "title": "Job Start Time",    "value": "2025-02-06 18:59:02"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "loomdata": {    "id": "29b30ae92e4db044",    "src": "hda",    "uuid": "be767cf8-4944-4de2-ae73-8d9f2e7bf454"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 1, \"coldata\": {\"values\": [{\"id\": 127, \"src\": \"hda\"}]}, \"filetype\": \"loom\", \"mainmatrix\": {\"values\": [{\"id\": 125, \"src\": \"hda\"}]}, \"other_files\": {\"values\": [{\"id\": 126, \"src\": \"hda\"}]}, \"rowdata\": {\"values\": [{\"id\": 128, \"src\": \"hda\"}]}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-02-06T18:59:14.218485",  "user_email": "tests@fake.org" }, "output_problems": [  "Output loomdata:  different than expected, difference (using sim_size):\n( /tmp/tmpp673cqjlconverted.loom.test v. /tmp/tmp5q8ypnvjconverted.loom.test )\nFiles /tmp/tmpp673cqjlconverted.loom.test=41883b but /tmp/tmp5q8ypnvjconverted.loom.test=28145b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 43.85143256187439, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="44.796703815460205">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|coldata": {   "id": "f636aaa7946eb4fa",   "src": "hda"  },  "hd5_format|filetype": "loom",  "hd5_format|mainmatrix": {   "id": "ce2aa4997bd3b12d",   "src": "hda"  },  "hd5_format|other_files": {   "id": "eb8008665914a8c1",   "src": "hda"  },  "hd5_format|rowdata": {   "id": "6ce3b4c7a407fc8b",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/fb9e030ffae4/anndata_import/tsv_to_loompy.py\u0027 -c \u0027/galaxy/server/database/objects/a/a/e/dataset_aae5fafb-6f82-4a4a-9266-2648b8dd47b5.dat\u0027 -r \u0027/galaxy/server/database/objects/d/b/6/dataset_db68369d-a62d-46cd-a6fb-6f4ceece9bda.dat\u0027 -f \u0027/galaxy/server/database/objects/f/0/4/dataset_f0476181-882c-409c-9c71-ef8423dc3518.dat\u0027 \u0027/galaxy/server/database/objects/4/3/e/dataset_43ea21dc-755d-4024-8bf6-638116a1d63c.dat\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:02:47.220252",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-nbctx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "f923661319951725",  "inputs": {   "hd5_format|coldata": {    "id": "f636aaa7946eb4fa",    "src": "hda",    "uuid": "aae5fafb-6f82-4a4a-9266-2648b8dd47b5"   },   "hd5_format|mainmatrix": {    "id": "ce2aa4997bd3b12d",    "src": "hda",    "uuid": "f0476181-882c-409c-9c71-ef8423dc3518"   },   "hd5_format|other_files": {    "id": "eb8008665914a8c1",    "src": "hda",    "uuid": "43ea21dc-755d-4024-8bf6-638116a1d63c"   },   "hd5_format|other_files1": {    "id": "eb8008665914a8c1",    "src": "hda",    "uuid": "43ea21dc-755d-4024-8bf6-638116a1d63c"   },   "hd5_format|rowdata": {    "id": "6ce3b4c7a407fc8b",    "src": "hda",    "uuid": "db68369d-a62d-46cd-a6fb-6f4ceece9bda"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738868570.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:02:50"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738868569.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:02:49"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "loomdata": {    "id": "7091ecd1e6867f01",    "src": "hda",    "uuid": "6859ca43-1046-405f-983f-9f619bd0ba3f"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 1, \"coldata\": {\"values\": [{\"id\": 143, \"src\": \"hda\"}]}, \"filetype\": \"loom\", \"mainmatrix\": {\"values\": [{\"id\": 141, \"src\": \"hda\"}]}, \"other_files\": {\"values\": [{\"id\": 142, \"src\": \"hda\"}]}, \"rowdata\": {\"values\": [{\"id\": 144, \"src\": \"hda\"}]}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-02-06T19:03:01.944384",  "user_email": "tests@fake.org" }, "output_problems": [  "Output loomdata:  different than expected, difference (using sim_size):\n( /tmp/tmpik8jqw28converted.loom.test v. /tmp/tmpwdd5m3p4converted.loom.test )\nFiles /tmp/tmpik8jqw28converted.loom.test=41883b but /tmp/tmpwdd5m3p4converted.loom.test=28145b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 44.796703815460205, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="11.006806135177612">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 11.006806135177612, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="35.74447321891785">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/9/2/b/dataset_92b74539-32fe-4cbc-901c-42f0ae195a54.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_fixploidy (Test #1)" name="0" time="39.10548377037048">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "d3aaaa993dbd53f0",   "src": "hda"  },  "output_type": "v",  "sec_plugin|ploidy_file": {   "id": "de2f747ef30ff6c4",   "src": "hda"  },  "sec_plugin|sex": {   "id": "0f6f24fcc2445a1d",   "src": "hda"  } }, "job": {  "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed \u0027s,bin/bcftools,libexec/bcftools,\u0027`;     bgzip -c \u0027/galaxy/server/database/objects/4/2/1/dataset_421380d1-185f-470e-9749-f4042f38c908.dat\u0027 \u003e input.vcf.gz \u0026\u0026 bcftools index input.vcf.gz \u0026\u0026            bcftools plugin fixploidy                 --output-type \u0027v\u0027   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz   --  --ploidy \"/galaxy/server/database/objects/2/3/3/dataset_233c3680-ab83-460d-8659-362d7b7a064b.dat\"  --sex \"/galaxy/server/database/objects/1/8/e/dataset_18ea429d-0098-40dc-8a55-da02fe811fd0.dat\" --tags \"GT\" \u003e \u0027/galaxy/server/database/objects/e/c/4/dataset_ec476e0b-037e-4286-b1e2-1b9f6cda8688.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-02-06T19:19:17.970185",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-fnvjr",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "f4d7563832330cc9",  "inputs": {   "input_file": {    "id": "d3aaaa993dbd53f0",    "src": "hda",    "uuid": "421380d1-185f-470e-9749-f4042f38c908"   },   "sec_plugin|ploidy_file": {    "id": "de2f747ef30ff6c4",    "src": "hda",    "uuid": "233c3680-ab83-460d-8659-362d7b7a064b"   },   "sec_plugin|sex": {    "id": "0f6f24fcc2445a1d",    "src": "hda",    "uuid": "18ea429d-0098-40dc-8a55-da02fe811fd0"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "196ead4b908061e6",    "src": "hda",    "uuid": "ec476e0b-037e-4286-b1e2-1b9f6cda8688"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "output_type": "\"v\"",   "sec_plugin": "{\"ploidy_file\": {\"values\": [{\"id\": 217, \"src\": \"hda\"}]}, \"sex\": {\"values\": [{\"id\": 218, \"src\": \"hda\"}]}, \"tags\": \"GT\"}",   "sec_restrict": "{\"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_fixploidy/bcftools_plugin_fixploidy/1.15.1+galaxy4",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-02-06T19:19:31.670089",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_fixploidy/bcftools_plugin_fixploidy/1.15.1+galaxy4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_fixploidy/bcftools_plugin_fixploidy/1.15.1+galaxy4, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 39.10548377037048, "tool_id": "bcftools_plugin_fixploidy", "tool_version": "1.15.1+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #1)" name="0" time="66.10622668266296">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #3)" name="2" time="68.87715721130371">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Parsing bcftools stats output: /galaxy/server/database/objects/b/b/f/dataset_bbf72990-489b-4b46-ace8-2f0bd0062000.datPlotting graphs: python3 plot.pyCreating PDF: tectonic summary.tex >plot-vcfstats.log 2>&1Finished: plot_tmp//summary.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #4)" name="3" time="38.47598433494568">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #5)" name="4" time="38.29788160324097">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #1)" name="0" time="40.72100567817688">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #2)" name="1" time="34.43707823753357">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #1)" name="0" time="11.578264236450195">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.578264236450195, "tool_id": "deeptools_plot_correlation", "tool_version": "3.5.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #2)" name="1" time="85.12058353424072">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "corData": {   "id": "9ec2c47bedea1261",   "src": "hda"  },  "outFileFormat": "png",  "plotting_type|plotTitle": "Test Plot",  "plotting_type|whatToPlot": "scatterplot",  "removeOutliers": true }, "job": {  "command_line": "plotCorrelation --corData \u0027/galaxy/server/database/objects/e/e/7/dataset_ee749c6e-c3a2-45ee-a3a7-04b7447656b8.dat\u0027 --plotFile \u0027/galaxy/server/database/objects/7/c/1/dataset_7c1ae105-7d75-4320-aee3-e7c0185601a4.dat\u0027 --corMethod \u0027spearman\u0027 --whatToPlot \u0027scatterplot\u0027 --plotTitle \u0027Test Plot\u0027   --plotFileFormat \u0027png\u0027 --removeOutliers",  "command_version": "plotCorrelation 3.5.4",  "copied_from_job_id": null,  "create_time": "2025-02-06T18:36:32.699606",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-bthw2",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "f8f8d19ecdaeb81d",  "inputs": {   "corData": {    "id": "9ec2c47bedea1261",    "src": "hda",    "uuid": "ee749c6e-c3a2-45ee-a3a7-04b7447656b8"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738867043.0000000",    "title": "Job End Time",    "value": "2025-02-06 18:37:23"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738867039.0000000",    "title": "Job Start Time",    "value": "2025-02-06 18:37:19"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "21474.0000000",    "title": "Memory Allocated (MB)",    "value": "21474"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outFileName": {    "id": "f8f8d19ecdaeb81d",    "src": "hda",    "uuid": "7c1ae105-7d75-4320-aee3-e7c0185601a4"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "corMethod": "\"spearman\"",   "dbkey": "\"?\"",   "outFileCorMatrix": "false",   "outFileFormat": "\"png\"",   "plotting_type": "{\"__current_case__\": 1, \"log1p\": false, \"plotTitle\": \"Test Plot\", \"whatToPlot\": \"scatterplot\", \"xrange_conditional\": {\"__current_case__\": 1, \"xrange_select\": \"no\"}, \"yrange_conditional\": {\"__current_case__\": 1, \"yrange_select\": \"no\"}}",   "removeOutliers": "true",   "skipZeros": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_correlation/deeptools_plot_correlation/3.5.4+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-02-06T18:37:37.869475",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outFileName:  different than expected, difference (using sim_size):\n( /tmp/tmpt890lyz2plotCorrelation_result2.png v. /tmp/tmptdclhsypplotCorrelation_result2.png )\nFiles /tmp/tmpt890lyz2plotCorrelation_result2.png=11943b but /tmp/tmptdclhsypplotCorrelation_result2.png=12341b - compare by size (delta=300) failed" ], "status": "failure", "test_index": 1, "time_seconds": 85.12058353424072, "tool_id": "deeptools_plot_correlation", "tool_version": "3.5.4+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #1)" name="0" time="37.32388758659363">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #2)" name="1" time="13.841111898422241">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 13.841111898422241, "tool_id": "flash", "tool_version": "1.2.11.4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="flash (Test #3)" name="2" time="18.674947261810303">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 18.674947261810303, "tool_id": "flash", "tool_version": "1.2.11.4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="flash (Test #4)" name="3" time="11.14628291130066">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 11.14628291130066, "tool_id": "flash", "tool_version": "1.2.11.4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="flash (Test #5)" name="4" time="10.670076131820679">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 10.670076131820679, "tool_id": "flash", "tool_version": "1.2.11.4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #1)" name="0" time="46.52223587036133">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "9ddbb382ccaa75d1",   "src": "hda"  },  "reference_source|ref": {   "id": "71fc38023e14654d",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/6/9/9/dataset_6997be20-b311-4855-a35a-2ed0fda39740.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/0/a/3/dataset_0a3f75b2-d317-4a68-b1fe-358fc714cfbf.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/c/7/5/metadata_c75833a7-6c2f-4958-a026-cf35ba11941e.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:15:43.053061",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-stlcr",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "c5fabfca19383f7a",  "inputs": {   "reads": {    "id": "9ddbb382ccaa75d1",    "src": "hda",    "uuid": "0a3f75b2-d317-4a68-b1fe-358fc714cfbf"   },   "reference_source|ref": {    "id": "71fc38023e14654d",    "src": "hda",    "uuid": "6997be20-b311-4855-a35a-2ed0fda39740"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738869355.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:15:55"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738869351.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:15:51"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "bcb3dd2cdb8b983a",    "src": "hda",    "uuid": "88ca7736-84cb-47c1-82ac-f522b77fac02"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 201, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-02-06 19:15:51,969]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-02-06 19:15:51,992]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-02-06 19:15:55,140]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelxs_z8a6v/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-02-06 19:15:51,969]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-02-06 19:15:51,992]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-02-06 19:15:55,140]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelxs_z8a6v/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-02-06T19:16:08.623643",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmp0fwxzjpscall-out1.vcf v. /tmp/tmp9wcjwzducall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250206\n+##source=lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelxs_z8a6v/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelxs_z8a6v/concat.vcf.gz /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelxs_z8a6v/0.vcf.gz /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelxs_z8a6v/1.vcf.gz /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelxs_z8a6v/2.vcf.gz /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelxs_z8a6v/3.vcf.gz /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelxs_z8a6v/4.vcf.gz; Date=Thu Feb  6 19:15:54 2025\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 0, "time_seconds": 46.52223587036133, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-02-06 19:15:51,969]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bamINFO [2025-02-06 19:15:51,992]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-02-06 19:15:55,140]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_parallelxs_z8a6v/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #2)" name="1" time="42.86212682723999">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "reads": {   "id": "413d64e8a7bdfde5",   "src": "hda"  },  "reference_source|ref": {   "id": "80671d558d5f42c4",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/3/9/f/dataset_39f46396-0c78-4d23-996e-1eb350c2a9c3.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/e/4/6/dataset_e46fb7f8-e23e-4a1e-8ab7-79b40eb23b7d.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/b/4/1/metadata_b41c9284-1f5d-4bc3-b813-e70177a193cc.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:16:33.016417",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-48zpb",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "90a3c8d5965becce",  "inputs": {   "reads": {    "id": "413d64e8a7bdfde5",    "src": "hda",    "uuid": "e46fb7f8-e23e-4a1e-8ab7-79b40eb23b7d"   },   "reference_source|ref": {    "id": "80671d558d5f42c4",    "src": "hda",    "uuid": "39f46396-0c78-4d23-996e-1eb350c2a9c3"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738869399.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:16:39"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738869395.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:16:35"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "987adb9ad7888278",    "src": "hda",    "uuid": "da514d72-4e4d-4ec8-94af-256894237535"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 0, \"src_qual\": \"\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 204, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-02-06 19:16:35,668]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-02-06 19:16:35,896]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-02-06 19:16:39,338]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_paralleluf3aeu18/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-02-06 19:16:35,668]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-02-06 19:16:35,896]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-02-06 19:16:39,338]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_paralleluf3aeu18/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-02-06T19:16:51.501649",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpiviqcm8dcall-out1.vcf v. /tmp/tmphgoewnrpcall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250206\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_paralleluf3aeu18/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_paralleluf3aeu18/concat.vcf.gz /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_paralleluf3aeu18/0.vcf.gz /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_paralleluf3aeu18/1.vcf.gz /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_paralleluf3aeu18/2.vcf.gz /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_paralleluf3aeu18/3.vcf.gz /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_paralleluf3aeu18/4.vcf.gz; Date=Thu Feb  6 19:16:39 2025\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 1, "time_seconds": 42.86212682723999, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-02-06 19:16:35,668]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2025-02-06 19:16:35,896]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-02-06 19:16:39,338]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_paralleluf3aeu18/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #3)" name="2" time="43.812878131866455">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "call_control|source_qual|use_src_qual|def_nm_q": "40",  "call_control|source_qual|use_src_qual|ign_vcf": {   "id": "12eb71dc81b1bdb0",   "src": "hda"  },  "call_control|source_qual|use_src_qual|src_qual": "--src-qual",  "reads": {   "id": "e042249079845cae",   "src": "hda"  },  "reference_source|ref": {   "id": "e957612b91e9c504",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/3/f/7/dataset_3f7b3fb0-4dd2-414c-bf33-74557e74fd54.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/d/7/f/dataset_d7f19a57-af0d-4c73-abda-bb016f4a97ca.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/0/b/3/metadata_0b369169-e76e-4845-ad91-092850152ee7.dat\u0027 reads.bam.bai \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/f/5/d/dataset_f5d7555d-d186-466b-9633-e6a002842d3b.dat\u0027 ign0.vcf \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --src-qual --ign-vcf \u0027ign0.vcf\u0027 --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:17:17.884736",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-cvmcf",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "5c89fdf772c5e77e",  "inputs": {   "call_control|source_qual|use_src_qual|ign_vcf": {    "id": "12eb71dc81b1bdb0",    "src": "hda",    "uuid": "f5d7555d-d186-466b-9633-e6a002842d3b"   },   "call_control|source_qual|use_src_qual|ign_vcf1": {    "id": "12eb71dc81b1bdb0",    "src": "hda",    "uuid": "f5d7555d-d186-466b-9633-e6a002842d3b"   },   "reads": {    "id": "e042249079845cae",    "src": "hda",    "uuid": "d7f19a57-af0d-4c73-abda-bb016f4a97ca"   },   "reference_source|ref": {    "id": "e957612b91e9c504",    "src": "hda",    "uuid": "3f7b3fb0-4dd2-414c-bf33-74557e74fd54"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738869443.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:17:23"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738869439.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:17:19"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "a606ba30326e7a12",    "src": "hda",    "uuid": "d73802d9-01bb-439a-b504-3a886d2cf333"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 1, \"def_nm_q\": \"40\", \"ign_vcf\": {\"values\": [{\"id\": 208, \"src\": \"hda\"}]}, \"src_qual\": \"--src-qual\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 207, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-02-06 19:17:19,823]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-02-06 19:17:19,851]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-02-06 19:17:23,598]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallelx_59lfbk/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-02-06 19:17:19,823]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-02-06 19:17:19,851]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-02-06 19:17:23,598]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallelx_59lfbk/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-02-06T19:17:35.550322",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpqobi9kf3call-out1.vcf v. /tmp/tmpl1we0k90call-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250206\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallelx_59lfbk/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallelx_59lfbk/concat.vcf.gz /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallelx_59lfbk/0.vcf.gz /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallelx_59lfbk/1.vcf.gz /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallelx_59lfbk/2.vcf.gz /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallelx_59lfbk/3.vcf.gz /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallelx_59lfbk/4.vcf.gz; Date=Thu Feb  6 19:17:23 2025\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 2, "time_seconds": 43.812878131866455, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-02-06 19:17:19,823]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2025-02-06 19:17:19,851]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-02-06 19:17:23,598]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallelx_59lfbk/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #4)" name="3" time="37.736868143081665">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "2e57027820ed1b11",   "src": "hda"  },  "reference_source|ref": {   "id": "7aa257e1dc3e1080",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/4/1/0/dataset_4104dea7-c054-4e98-a0fe-c7eafc204078.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/3/e/8/dataset_3e8f4f60-f7fe-46da-83da-a716a2769dba.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/f/c/9/metadata_fc960ed1-18f9-4c87-a7c5-4957f41354d0.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:17:57.257479",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-p8258",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "69eba418509ffda7",  "inputs": {   "reads": {    "id": "2e57027820ed1b11",    "src": "hda",    "uuid": "3e8f4f60-f7fe-46da-83da-a716a2769dba"   },   "reference_source|ref": {    "id": "7aa257e1dc3e1080",    "src": "hda",    "uuid": "4104dea7-c054-4e98-a0fe-c7eafc204078"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738869481.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:18:01"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738869478.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:17:58"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "d7292ca54d37a55b",    "src": "hda",    "uuid": "8f52b7a1-a370-4322-8e1c-77c8bd1282a6"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 211, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-02-06 19:17:59,358]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-02-06 19:17:59,385]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-02-06 19:18:01,901]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-02-06 19:17:59,358]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-02-06 19:17:59,385]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-02-06 19:18:01,901]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2025-02-06T19:18:13.272188",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpo1cntj37call-out2.vcf v. /tmp/tmp351iqjkccall-out2.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallelg3dmyvln/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250206\n+##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/169/tmp/lofreq2_call_paralleli_bvoq_s/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,6 +10,9 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/169/tmp/lofreq2_call_paralleli_bvoq_s/concat.vcf.gz /galaxy/server/database/jobs_directory/000/169/tmp/lofreq2_call_paralleli_bvoq_s/0.vcf.gz /galaxy/server/database/jobs_directory/000/169/tmp/lofreq2_call_paralleli_bvoq_s/1.vcf.gz /galaxy/server/database/jobs_directory/000/169/tmp/lofreq2_call_paralleli_bvoq_s/2.vcf.gz /galaxy/server/database/jobs_directory/000/169/tmp/lofreq2_call_paralleli_bvoq_s/3.vcf.gz /galaxy/server/database/jobs_directory/000/169/tmp/lofreq2_call_paralleli_bvoq_s/4.vcf.gz; Date=Thu Feb  6 19:18:01 2025\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t815\t.\tA\tG\t0\t.\tDP=665;AF=0.003008;SB=6;DP4=333,311,0,2\n pBR322\t861\t.\tA\tC\t0\t.\tDP=946;AF=0.002114;SB=3;DP4=447,497,0,2\n@@ -17,11 +21,11 @@\n pBR322\t1068\t.\tT\tG\t0\t.\tDP=1774;AF=0.000564;SB=3;DP4=853,920,1,0\n pBR322\t1084\t.\tG\tT\t0\t.\tDP=1789;AF=0.000559;SB=3;DP4=875,913,1,0\n pBR322\t1113\t.\tT\tA\t0\t.\tDP=1784;AF=0.000561;SB=0;DP4=885,898,0,1\n-pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n pBR322\t1193\t.\tG\tA\t0\t.\tDP=1698;AF=0.000589;SB=3;DP4=865,832,0,1\n pBR322\t1218\t.\tA\tC\t0\t.\tDP=1708;AF=0.000585;SB=3;DP4=875,831,0,1\n pBR322\t1230\t.\tT\tC\t0\t.\tDP=1759;AF=0.000569;SB=3;DP4=907,850,0,1\n pBR322\t1256\t.\tA\tG\t0\t.\tDP=1746;AF=0.000573;SB=0;DP4=902,842,1,0\n pBR322\t1498\t.\tC\tG\t0\t.\tDP=1195;AF=0.000837;SB=3;DP4=588,606,1,0\n pBR322\t1503\t.\tT\tG\t0\t.\tDP=1156;AF=0.000865;SB=3;DP4=563,592,1,0\n-pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.000880;SB=0;DP4=560,576,0,1\n+pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.00088;SB=0;DP4=560,576,0,1\n" ], "status": "failure", "test_index": 3, "time_seconds": 37.736868143081665, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-02-06 19:17:59,358]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2025-02-06 19:17:59,385]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-02-06 19:18:01,901]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #5)" name="4" time="38.50387215614319">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "cb7389644d60d051",   "src": "hda"  },  "reference_source|ref": {   "id": "3573e24d47da158a",   "src": "hda"  },  "reference_source|ref_selector": "history",  "variant_types": "--call-indels --only-indels" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/b/a/3/dataset_ba372a9d-41a8-4a54-a74a-336a020405c2.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/9/7/f/dataset_97f85a0e-4416-4b63-af21-255df7a52ed0.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/e/3/8/metadata_e38e93ad-6c1b-4086-905e-a5856778b163.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf --call-indels --only-indels    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:18:35.167078",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-6r5bb",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "f7784befe4ca567e",  "inputs": {   "reads": {    "id": "cb7389644d60d051",    "src": "hda",    "uuid": "97f85a0e-4416-4b63-af21-255df7a52ed0"   },   "reference_source|ref": {    "id": "3573e24d47da158a",    "src": "hda",    "uuid": "ba372a9d-41a8-4a54-a74a-336a020405c2"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738869520.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:18:40"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738869516.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:18:36"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "ffb20a2015f738f7",    "src": "hda",    "uuid": "3cdba68e-bd00-4d12-b4e5-717016a75ddc"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 214, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"--call-indels --only-indels\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-02-06 19:18:37,284]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-02-06 19:18:37,393]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2025-02-06 19:18:40,896]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-02-06 19:18:37,284]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-02-06 19:18:37,393]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2025-02-06 19:18:40,896]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2025-02-06T19:18:51.741179",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmppjn4occhindel-call-out.vcf v. /tmp/tmpb6yrfxu8indel-call-out.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/31/working/pp-tmp/lofreq2_call_parallel4gfado3q/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250206\n+##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/172/tmp/lofreq2_call_parallelvoqup7jj/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,13 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/172/tmp/lofreq2_call_parallelvoqup7jj/concat.vcf.gz /galaxy/server/database/jobs_directory/000/172/tmp/lofreq2_call_parallelvoqup7jj/0.vcf.gz /galaxy/server/database/jobs_directory/000/172/tmp/lofreq2_call_parallelvoqup7jj/1.vcf.gz /galaxy/server/database/jobs_directory/000/172/tmp/lofreq2_call_parallelvoqup7jj/2.vcf.gz /galaxy/server/database/jobs_directory/000/172/tmp/lofreq2_call_parallelvoqup7jj/3.vcf.gz /galaxy/server/database/jobs_directory/000/172/tmp/lofreq2_call_parallelvoqup7jj/4.vcf.gz; Date=Thu Feb  6 19:18:40 2025\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t725\t.\tG\tGN\t0\t.\tDP=46;AF=0.021739;SB=0;DP4=22,23,0,1;INDEL;HRUN=1\n pBR322\t746\t.\tA\tAN\t0\t.\tDP=225;AF=0.004444;SB=3;DP4=116,108,0,1;INDEL;HRUN=1\n pBR322\t747\t.\tT\tTN\t0\t.\tDP=230;AF=0.004348;SB=3;DP4=118,111,0,1;INDEL;HRUN=1\n pBR322\t751\t.\tG\tGN\t0\t.\tDP=255;AF=0.003922;SB=3;DP4=128,126,0,1;INDEL;HRUN=1\n-pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.001650;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n+pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.00165;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n pBR322\t943\t.\tC\tCCG\t0\t.\tDP=1465;AF=0.000683;SB=0;DP4=709,755,0,1;INDEL;HRUN=1\n-pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.000570;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n+pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.00057;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n pBR322\t1271\t.\tA\tAN\t0\t.\tDP=1743;AF=0.000574;SB=0;DP4=890,855,1,0;INDEL;HRUN=2\n pBR322\t1376\t.\tA\tANN\t0\t.\tDP=1691;AF=0.000591;SB=3;DP4=849,843,0,1;INDEL;HRUN=1\n" ], "status": "failure", "test_index": 4, "time_seconds": 38.50387215614319, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-02-06 19:18:37,284]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2025-02-06 19:18:37,393]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 0Number of indel tests performed: 9INFO [2025-02-06 19:18:40,896]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #1)" name="0" time="76.09765219688416">
        
            
            <system-out><![CDATA[
            [18:43:40 - DataStre] Loaded sample register.[18:43:40 - DataStre] Loaded sample register.[18:43:40 - DataIndx] Loaded 1/2 (50.00%) sample files.[18:43:40 - DataIndx] Loaded 2/2 (100.00%) sample files.[18:43:40 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:43:40 - Variants] Processing NC_045512.2:0-.[18:43:40 - TrimOlap] NC_045512.2:30.0-2939.0 is contained within NC_045512.2:30.0-2939.0, skipping.
            ]]></system-out>
            <system-err><![CDATA[
            [18:43:42 - Annotate] Getting chrom coordinates[18:43:42 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:43:42 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #2)" name="1" time="45.029921531677246">
        
            
            <system-out><![CDATA[
            [18:44:33 - DataStre] Loaded sample register.[18:44:33 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:44:33 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:44:33 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            [18:44:36 - Annotate] Getting chrom coordinates[18:44:36 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:44:36 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #3)" name="2" time="36.60541534423828">
        
            
            <system-out><![CDATA[
            [18:45:12 - DataStre] Loaded sample register.[18:45:12 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:45:12 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:45:12 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_times (Test #1)" name="0" time="56.26663136482239">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="71.1801130771637">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="41.583977460861206">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="36.86733531951904">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="37.807929039001465">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="37.59665083885193">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="38.92387080192566">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="31.427917957305908">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "inputrds": {   "id": "cf81abe6550de478",   "src": "hda"  },  "trjfid|basic|cellsfromz": "2,1,4",  "trjfid|basic|doit": "yes",  "trjfid|basic|som|doit": "yes",  "trjfid|basic|som|use|def": "no" }, "job": {  "command_line": "Rscript \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspecttrajectory/a6821f856a1e/raceid_inspecttrajectory/scripts/trajectoryinspect.R\u0027 \u0027/galaxy/server/database/jobs_directory/000/132/configs/tmpgn5z6r4d\u0027 2\u003e \u0027/galaxy/server/database/objects/3/1/f/dataset_31fb10e7-8fb7-4103-b85f-3e4efe290986.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-02-06T19:06:25.441654",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-6dtnj",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "3080ac5ec599d953",  "inputs": {   "inputrds": {    "id": "cf81abe6550de478",    "src": "hda",    "uuid": "2f6c3282-9346-43eb-8352-ed78015025b2"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "outlog": {    "id": "d5fa49aedb607abf",    "src": "hda",    "uuid": "31fb10e7-8fb7-4103-b85f-3e4efe290986"   },   "outpdf": {    "id": "c5fabfca19383f7a",    "src": "hda",    "uuid": "6b01d577-2f48-4fa8-a0a6-d97782660408"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "trjfid": "{\"basic\": {\"__current_case__\": 1, \"cellsfromz\": \"2,1,4\", \"doit\": \"yes\", \"som\": {\"__current_case__\": 1, \"doit\": \"yes\", \"title\": \"Title\", \"use\": {\"__current_case__\": 1, \"alpha\": \"0.5\", \"cluster\": false, \"def\": \"no\"}, \"use_genes\": {\"__current_case__\": 0, \"typer\": \"genelist\", \"use_genes\": \"\"}, \"use_types\": \"\\\\\\\\_\\\\\\\\d+\"}, \"use\": {\"__current_case__\": 0, \"def\": \"yes\"}}}",   "trjsid": "{\"basic\": {\"__current_case__\": 0, \"doit\": \"no\"}}"  },  "state": "error",  "stderr": "",  "stdout": "[1] 1\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\nNULL\nNULL\nNULL\nnull device \n          1 \n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspecttrajectory/raceid_inspecttrajectory/0.2.3+galaxy3",  "tool_stderr": "",  "tool_stdout": "[1] 1\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\nNULL\nNULL\nNULL\nnull device \n          1 \n",  "update_time": "2025-02-06T19:06:36.027094",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspecttrajectory/raceid_inspecttrajectory/0.2.3+galaxy3, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspecttrajectory/raceid_inspecttrajectory/0.2.3+galaxy3, exit_code: None, stderr: ." ], "status": "failure", "test_index": 3, "time_seconds": 31.427917957305908, "tool_id": "raceid_inspecttrajectory", "tool_version": "0.2.3+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="40.89505052566528">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="35.25150442123413">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "inputrds": {   "id": "afcb4f17a54b4ab0",   "src": "hda"  },  "trjfid|basic|cellsfromz": "3,9,2",  "trjfid|basic|doit": "yes",  "trjfid|basic|som|doit": "yes",  "trjfid|basic|som|use_genes|typer": "genelist",  "trjfid|basic|som|use_genes|use_genes": "Clca4,Mki67,Defa24,Ybx1,Vasp,Apoa1",  "trjfid|basic|use|def": "no",  "trjfid|basic|use|filterset_minexpr": "1",  "trjfid|basic|use|filterset_minnumber": "2",  "trjfid|basic|use|plotheat_ygrid": true,  "trjfid|basic|use|procsom_corthr": "0.5",  "trjfid|basic|use|procsom_minsom": "5",  "trjsid|basic|br": "6,5,3",  "trjsid|basic|doit": "yes",  "trjsid|basic|i": "5",  "trjsid|basic|use|def": "no",  "trjsid|basic|use|ndiffgenes": "14",  "trjsid|basic|use|zscore": true }, "job": {  "command_line": "Rscript \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspecttrajectory/a6821f856a1e/raceid_inspecttrajectory/scripts/trajectoryinspect.R\u0027 \u0027/galaxy/server/database/jobs_directory/000/134/configs/tmpcsregzhy\u0027 2\u003e \u0027/galaxy/server/database/objects/4/f/8/dataset_4f8c9cab-a2dd-48ea-9fa1-e43acb292a83.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-02-06T19:06:55.320443",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-w8cf5",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "f9956c23f81d1895",  "inputs": {   "inputrds": {    "id": "afcb4f17a54b4ab0",    "src": "hda",    "uuid": "632a3033-fd52-48a1-a2da-7b689b66c3b9"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "outdiffgenes": {    "id": "1a9646216c94f343",    "src": "hda",    "uuid": "8363a4d5-bdd7-409a-b0eb-c06ace911ee0"   },   "outlog": {    "id": "b76591e4b72ee170",    "src": "hda",    "uuid": "4f8c9cab-a2dd-48ea-9fa1-e43acb292a83"   },   "outpdf": {    "id": "90a3c8d5965becce",    "src": "hda",    "uuid": "af17edb9-9b24-4861-89ec-b661a3d773ed"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "trjfid": "{\"basic\": {\"__current_case__\": 1, \"cellsfromz\": \"3,9,2\", \"doit\": \"yes\", \"som\": {\"__current_case__\": 1, \"doit\": \"yes\", \"title\": \"Title\", \"use\": {\"__current_case__\": 0, \"def\": \"yes\"}, \"use_genes\": {\"__current_case__\": 0, \"typer\": \"genelist\", \"use_genes\": \"Clca4,Mki67,Defa24,Ybx1,Vasp,Apoa1\"}, \"use_types\": \"\\\\\\\\_\\\\\\\\d+\"}, \"use\": {\"__current_case__\": 1, \"def\": \"no\", \"filterset_minexpr\": \"1\", \"filterset_minnumber\": \"2\", \"getsom_alpha\": \"0.5\", \"getsom_nb\": \"1000\", \"plotheat_xgrid\": false, \"plotheat_xlab\": false, \"plotheat_ygrid\": true, \"procsom_corthr\": \"0.5\", \"procsom_minsom\": \"5\"}}}",   "trjsid": "{\"basic\": {\"__current_case__\": 1, \"br\": \"6,5,3\", \"doit\": \"yes\", \"i\": \"5\", \"use\": {\"__current_case__\": 1, \"def\": \"no\", \"ndiffgenes\": \"14\", \"zscore\": true}}}"  },  "state": "error",  "stderr": "",  "stdout": "NULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\nNULL\nNULL\nNULL\nnull device \n          1 \n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspecttrajectory/raceid_inspecttrajectory/0.2.3+galaxy3",  "tool_stderr": "",  "tool_stdout": "NULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\nNULL\nNULL\nNULL\nnull device \n          1 \n",  "update_time": "2025-02-06T19:07:10.877672",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspecttrajectory/raceid_inspecttrajectory/0.2.3+galaxy3, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspecttrajectory/raceid_inspecttrajectory/0.2.3+galaxy3, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspecttrajectory/raceid_inspecttrajectory/0.2.3+galaxy3, exit_code: None, stderr: ." ], "status": "failure", "test_index": 4, "time_seconds": 35.25150442123413, "tool_id": "raceid_inspecttrajectory", "tool_version": "0.2.3+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="45.0995512008667">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #1)" name="0" time="21.21802544593811">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 21.21802544593811, "tool_id": "sailfish", "tool_version": "0.10.1.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="sailfish (Test #2)" name="1" time="54.736299991607666">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00115576sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 3.973e-05sWriting sequence data to file . . . doneElapsed time: 5.849e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00016076sdoneElapsed time: 0.0161076sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00148731sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { /dev/fd/63 }# [ mates2 ] => { /dev/fd/62 }# [ libType ] => { IU }# [ output ] => { ./results }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-02-06 18:47:24.562] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-02-06 18:47:24.632] [stderrLog] [info] Loading Position Hash[2025-02-06 18:47:24.632] [stderrLog] [info] Loading Suffix Array [2025-02-06 18:47:24.633] [stderrLog] [info] Loading Transcript Info [2025-02-06 18:47:24.634] [stderrLog] [info] Loading Rank-Select Bit Array[2025-02-06 18:47:24.634] [stderrLog] [info] There were 15 set bits in the bit array[2025-02-06 18:47:24.634] [stderrLog] [info] Computing transcript lengths[2025-02-06 18:47:24.634] [stderrLog] [info] Waiting to finish loading hash[2025-02-06 18:47:24.634] [stderrLog] [info] Done loading index[2025-02-06 18:47:24.631] [jointLog] [info] Loading Quasi index[2025-02-06 18:47:24.634] [jointLog] [info] done[2025-02-06 18:47:24.654] [jointLog] [info] Gathered fragment lengths from all threads[2025-02-06 18:47:24.654] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-02-06 18:47:24.654] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-02-06 18:47:24.663] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-02-06 18:47:24.663] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-02-06 18:47:24.663] [jointLog] [info] Starting optimizer:[2025-02-06 18:47:24.664] [jointLog] [info] Optimizing over 21 equivalence classes[2025-02-06 18:47:24.664] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-02-06 18:47:24.664] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687[2025-02-06 18:47:24.664] [jointLog] [info] Finished optimizer[2025-02-06 18:47:24.664] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #3)" name="2" time="39.64856266975403">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00130359sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 4.805e-05sWriting sequence data to file . . . doneElapsed time: 8.829e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00015719sdoneElapsed time: 0.00317056sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00135181sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-02-06 18:48:06.605] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi index[2025-02-06 18:48:06.677] [stderrLog] [info] Loading Position Hash[2025-02-06 18:48:06.677] [stderrLog] [info] Loading Suffix Array [2025-02-06 18:48:06.678] [stderrLog] [info] Loading Transcript Info [2025-02-06 18:48:06.679] [stderrLog] [info] Loading Rank-Select Bit Array[2025-02-06 18:48:06.679] [stderrLog] [info] There were 15 set bits in the bit array[2025-02-06 18:48:06.679] [stderrLog] [info] Computing transcript lengths[2025-02-06 18:48:06.679] [stderrLog] [info] Waiting to finish loading hash[2025-02-06 18:48:06.679] [stderrLog] [info] Done loading indexIndex contained 15 targetsLoaded targets[2025-02-06 18:48:06.675] [jointLog] [info] Loading Quasi index[2025-02-06 18:48:06.679] [jointLog] [info] done[2025-02-06 18:48:06.700] [jointLog] [info] Gathered fragment lengths from all threads[2025-02-06 18:48:06.700] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-02-06 18:48:06.701] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-02-06 18:48:06.708] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-02-06 18:48:06.708] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-02-06 18:48:06.708] [jointLog] [info] Starting optimizer:[2025-02-06 18:48:06.708] [jointLog] [info] Optimizing over 21 equivalence classes[2025-02-06 18:48:06.708] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-02-06 18:48:06.709] [jointLog] [info] iteration 50, recomputing effective lengths[2025-02-06 18:48:06.710] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2025-02-06 18:48:06.710] [jointLog] [info] Finished optimizer[2025-02-06 18:48:06.710] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #4)" name="3" time="37.71217489242554">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "biasCorrect": true,  "geneMap": {   "id": "38fdcf733eb6cf02",   "src": "hda"  },  "refTranscriptSource|TranscriptSource": "history",  "refTranscriptSource|ownFile": {   "id": "bd8c1660c1edbdef",   "src": "hda"  },  "single_or_paired|input_mate1": {   "id": "87e4b8f7480a5087",   "src": "hda"  },  "single_or_paired|input_mate2": {   "id": "0b46ad9b9eb9e4f3",   "src": "hda"  },  "single_or_paired|single_or_paired_opts": "paired" }, "job": {  "command_line": "sailfish index --transcripts /galaxy/server/database/objects/1/2/4/dataset_124e0102-e120-43e5-99f7-9f82adcd7899.dat --kmerSize 21 --out ./index_dir --threads \"${GALAXY_SLOTS:-4}\" \u0026\u0026 ln -s /galaxy/server/database/objects/4/0/e/dataset_40ed2e75-38a8-44e4-b7e9-109a04996ba1.dat ./mate1.fastq \u0026\u0026 ln -s /galaxy/server/database/objects/8/c/3/dataset_8c3e5902-3da9-46a5-9a02-4ae6076f2e23.dat ./mate2.fastq \u0026\u0026 ln -s \"/galaxy/server/database/objects/d/4/d/dataset_d4d94ed8-1b00-4c1f-acd5-7790cf44f0ad.dat\" ./geneMap.tabular \u0026\u0026 sailfish quant --index ./index_dir --mates1 ./mate1.fastq --mates2 ./mate2.fastq --libType \"IU\" --output ./results --biasCorrect  --threads \"${GALAXY_SLOTS:-4}\"  --gcSizeSamp 1 --gcSpeedSamp 1 --fldMean 200 --fldSD 80 --maxReadOcc 200 --geneMap ./geneMap.tabular      --maxFragLen 1000 --txpAggregationKey \u0027gene_id\u0027    --numBiasSamples 1000000 --numFragSamples 10000 --numGibbsSamples 0 --numBootstraps 0",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-02-06T18:48:48.724941",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-2kd5q",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "bb5c90ffe2d9f266",  "inputs": {   "geneMap": {    "id": "38fdcf733eb6cf02",    "src": "hda",    "uuid": "d4d94ed8-1b00-4c1f-acd5-7790cf44f0ad"   },   "refTranscriptSource|ownFile": {    "id": "bd8c1660c1edbdef",    "src": "hda",    "uuid": "124e0102-e120-43e5-99f7-9f82adcd7899"   },   "single_or_paired|input_mate1": {    "id": "87e4b8f7480a5087",    "src": "hda",    "uuid": "40ed2e75-38a8-44e4-b7e9-109a04996ba1"   },   "single_or_paired|input_mate2": {    "id": "0b46ad9b9eb9e4f3",    "src": "hda",    "uuid": "8c3e5902-3da9-46a5-9a02-4ae6076f2e23"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_gene_quant": {    "id": "fe4ac07d1ef098a8",    "src": "hda",    "uuid": "62c0d946-5b76-4211-a28b-9d2bfe60d777"   },   "output_quant": {    "id": "be2d3f67703dfc1d",    "src": "hda",    "uuid": "86d52ee4-a785-4aac-bbf2-b71475f5a912"   }  },  "params": {   "__input_ext": "\"fasta\"",   "allowDovetail": "false",   "biasCorrect": "true",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "discardOrphans": "false",   "dumpEq": "false",   "enforceLibCompat": "false",   "fldMean": "\"200\"",   "fldSD": "\"80\"",   "gcBiasCorrect": "false",   "gcSizeSamp": "\"1\"",   "gcSpeedSamp": "\"1\"",   "ignoreLibCompat": "false",   "maxFragLen": "\"1000\"",   "maxReadOcc": "\"200\"",   "noEffectiveLengthCorrection": "false",   "numBiasSamples": "\"1000000\"",   "numBootstraps": "\"0\"",   "numFragSamples": "\"10000\"",   "numGibbsSamples": "\"0\"",   "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"kmerSize\": \"21\", \"ownFile\": {\"values\": [{\"id\": 64, \"src\": \"hda\"}]}}",   "single_or_paired": "{\"__current_case__\": 1, \"input_mate1\": {\"values\": [{\"id\": 65, \"src\": \"hda\"}]}, \"input_mate2\": {\"values\": [{\"id\": 66, \"src\": \"hda\"}]}, \"orientation\": \"I\", \"single_or_paired_opts\": \"paired\", \"strandedness\": \"U\"}",   "strictIntersect": "false",   "txpAggregationKey": "\"gene_id\"",   "unsmoothedFLD": "false",   "useVBOpt": "false"  },  "state": "error",  "stderr": "Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.00121597s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 6.297e-05s\nWriting sequence data to file . . . done\nElapsed time: 0.00010313s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 0.00019656s\ndone\nElapsed time: 0.0036933s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.00112699s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] =\u003e sailfish \n# [ command ] =\u003e quant \n# [ index ] =\u003e { ./index_dir }\n# [ mates1 ] =\u003e { ./mate1.fastq }\n# [ mates2 ] =\u003e { ./mate2.fastq }\n# [ libType ] =\u003e { IU }\n# [ output ] =\u003e { ./results }\n# [ biasCorrect ] =\u003e { }\n# [ threads ] =\u003e { 6 }\n# [ gcSizeSamp ] =\u003e { 1 }\n# [ gcSpeedSamp ] =\u003e { 1 }\n# [ fldMean ] =\u003e { 200 }\n# [ fldSD ] =\u003e { 80 }\n# [ maxReadOcc ] =\u003e { 200 }\n# [ geneMap ] =\u003e { ./geneMap.tabular }\n# [ maxFragLen ] =\u003e { 1000 }\n# [ txpAggregationKey ] =\u003e { gene_id }\n# [ numBiasSamples ] =\u003e { 1000000 }\n# [ numFragSamples ] =\u003e { 10000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\nLogs will be written to ./results/logs\n[2025-02-06 18:48:51.283] [jointLog] [info] parsing read library format\nthere is 1 lib\nLoading 32-bit quasi index[2025-02-06 18:48:51.357] [jointLog] [info] Loading Quasi index\n[2025-02-06 18:48:51.361] [jointLog] [info] done\nIndex contained 15 targets\nLoaded targets\n\n\n\n[2025-02-06 18:48:51.383] [jointLog] [info] Gathered fragment lengths from all threads\n[2025-02-06 18:48:51.383] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2025-02-06 18:48:51.384] [jointLog] [info] Estimating effective lengths\nDone Quasi-Mapping \n\n[2025-02-06 18:48:51.393] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2025-02-06 18:48:51.393] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2025-02-06 18:48:51.394] [jointLog] [info] Starting optimizer:\n\n[2025-02-06 18:48:51.394] [jointLog] [info] Optimizing over 21 equivalence classes\n[2025-02-06 18:48:51.394] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2025-02-06 18:48:51.394] [jointLog] [info] iteration 50, recomputing effective lengths\n[2025-02-06 18:48:51.396] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953\n[2025-02-06 18:48:51.396] [jointLog] [info] Finished optimizer\n[2025-02-06 18:48:51.396] [jointLog] [info] writing output \n\nComputing gene-level abundance estimates\nThere were 3 transcripts mapping to 3 genes\nWARNING: couldn\u0027t find transcript named [NR_031764]; returning transcript  as it\u0027s own gene\n\ndone\nAggregating expressions to gene level . . . done\n[2025-02-06 18:48:51.359] [stderrLog] [info] Loading Position Hash\n[2025-02-06 18:48:51.359] [stderrLog] [info] Loading Suffix Array \n[2025-02-06 18:48:51.360] [stderrLog] [info] Loading Transcript Info \n[2025-02-06 18:48:51.361] [stderrLog] [info] Loading Rank-Select Bit Array\n[2025-02-06 18:48:51.361] [stderrLog] [info] There were 15 set bits in the bit array\n[2025-02-06 18:48:51.361] [stderrLog] [info] Computing transcript lengths\n[2025-02-06 18:48:51.361] [stderrLog] [info] Waiting to finish loading hash\n[2025-02-06 18:48:51.361] [stderrLog] [info] Done loading index\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1",  "tool_stderr": "Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.00121597s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 6.297e-05s\nWriting sequence data to file . . . done\nElapsed time: 0.00010313s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 0.00019656s\ndone\nElapsed time: 0.0036933s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.00112699s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] =\u003e sailfish \n# [ command ] =\u003e quant \n# [ index ] =\u003e { ./index_dir }\n# [ mates1 ] =\u003e { ./mate1.fastq }\n# [ mates2 ] =\u003e { ./mate2.fastq }\n# [ libType ] =\u003e { IU }\n# [ output ] =\u003e { ./results }\n# [ biasCorrect ] =\u003e { }\n# [ threads ] =\u003e { 6 }\n# [ gcSizeSamp ] =\u003e { 1 }\n# [ gcSpeedSamp ] =\u003e { 1 }\n# [ fldMean ] =\u003e { 200 }\n# [ fldSD ] =\u003e { 80 }\n# [ maxReadOcc ] =\u003e { 200 }\n# [ geneMap ] =\u003e { ./geneMap.tabular }\n# [ maxFragLen ] =\u003e { 1000 }\n# [ txpAggregationKey ] =\u003e { gene_id }\n# [ numBiasSamples ] =\u003e { 1000000 }\n# [ numFragSamples ] =\u003e { 10000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\nLogs will be written to ./results/logs\n[2025-02-06 18:48:51.283] [jointLog] [info] parsing read library format\nthere is 1 lib\nLoading 32-bit quasi index[2025-02-06 18:48:51.357] [jointLog] [info] Loading Quasi index\n[2025-02-06 18:48:51.361] [jointLog] [info] done\nIndex contained 15 targets\nLoaded targets\n\n\n\n[2025-02-06 18:48:51.383] [jointLog] [info] Gathered fragment lengths from all threads\n[2025-02-06 18:48:51.383] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2025-02-06 18:48:51.384] [jointLog] [info] Estimating effective lengths\nDone Quasi-Mapping \n\n[2025-02-06 18:48:51.393] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2025-02-06 18:48:51.393] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2025-02-06 18:48:51.394] [jointLog] [info] Starting optimizer:\n\n[2025-02-06 18:48:51.394] [jointLog] [info] Optimizing over 21 equivalence classes\n[2025-02-06 18:48:51.394] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2025-02-06 18:48:51.394] [jointLog] [info] iteration 50, recomputing effective lengths\n[2025-02-06 18:48:51.396] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953\n[2025-02-06 18:48:51.396] [jointLog] [info] Finished optimizer\n[2025-02-06 18:48:51.396] [jointLog] [info] writing output \n\nComputing gene-level abundance estimates\nThere were 3 transcripts mapping to 3 genes\nWARNING: couldn\u0027t find transcript named [NR_031764]; returning transcript  as it\u0027s own gene\n\ndone\nAggregating expressions to gene level . . . done\n[2025-02-06 18:48:51.359] [stderrLog] [info] Loading Position Hash\n[2025-02-06 18:48:51.359] [stderrLog] [info] Loading Suffix Array \n[2025-02-06 18:48:51.360] [stderrLog] [info] Loading Transcript Info \n[2025-02-06 18:48:51.361] [stderrLog] [info] Loading Rank-Select Bit Array\n[2025-02-06 18:48:51.361] [stderrLog] [info] There were 15 set bits in the bit array\n[2025-02-06 18:48:51.361] [stderrLog] [info] Computing transcript lengths\n[2025-02-06 18:48:51.361] [stderrLog] [info] Waiting to finish loading hash\n[2025-02-06 18:48:51.361] [stderrLog] [info] Done loading index\n",  "tool_stdout": "",  "update_time": "2025-02-06T18:48:55.670056",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1, exit_code: None, stderr: Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.00121597s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 6.297e-05s\nWriting sequence data to file . . . done\nElapsed time: 0.00010313s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 0.00019656s\ndone\nElapsed time: 0.0036933s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.00112699s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] =\u003e sailfish \n# [ command ] =\u003e quant \n# [ index ] =\u003e { ./index_dir }\n# [ mates1 ] =\u003e { ./mate1.fastq }\n# [ mates2 ] =\u003e { ./mate2.fastq }\n# [ libType ] =\u003e { IU }\n# [ output ] =\u003e { ./results }\n# [ biasCorrect ] =\u003e { }\n# [ threads ] =\u003e { 6 }\n# [ gcSizeSamp ] =\u003e { 1 }\n# [ gcSpeedSamp ] =\u003e { 1 }\n# [ fldMean ] =\u003e { 200 }\n# [ fldSD ] =\u003e { 80 }\n# [ maxReadOcc ] =\u003e { 200 }\n# [ geneMap ] =\u003e { ./geneMap.tabular }\n# [ maxFragLen ] =\u003e { 1000 }\n# [ txpAggregationKey ] =\u003e { gene_id }\n# [ numBiasSamples ] =\u003e { 1000000 }\n# [ numFragSamples ] =\u003e { 10000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\nLogs will be written to ./results/logs\n[2025-02-06 18:48:51.283] [jointLog] [info] parsing read library format\nthere is 1 lib\nLoading 32-bit quasi index[2025-02-06 18:48:51.357] [jointLog] [info] Loading Quasi index\n[2025-02-06 18:48:51.361] [jointLog] [info] done\nIndex contained 15 targets\nLoaded targets\n\n\n\n[2025-02-06 18:48:51.383] [jointLog] [info] Gathered fragment lengths from all threads\n[2025-02-06 18:48:51.383] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2025-02-06 18:48:51.384] [jointLog] [info] Estimating effective lengths\nDone Quasi-Mapping \n\n[2025-02-06 18:48:51.393] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2025-02-06 18:48:51.393] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2025-02-06 18:48:51.394] [jointLog] [info] Starting optimizer:\n\n[2025-02-06 18:48:51.394] [jointLog] [info] Optimizing over 21 equivalence classes\n[2025-02-06 18:48:51.394] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2025-02-06 18:48:51.394] [jointLog] [info] iteration 50, recomputing effective lengths\n[2025-02-06 18:48:51.396] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953\n[2025-02-06 18:48:51.396] [jointLog] [info] Finished optimizer\n[2025-02-06 18:48:51.396] [jointLog] [info] writing output \n\nComputing gene-level abundance estimates\nThere were 3 transcripts mapping to 3 genes\nWARNING: couldn\u0027t find transcript named [NR_031764]; returning transcript  as it\u0027s own gene\n\ndone\nAggregating expressions to gene level . . . done\n[2025-02-06 18:48:51.359] [stderrLog] [info] Loading Position Hash\n[2025-02-06 18:48:51.359] [stderrLog] [info] Loading Suffix Array \n[2025-02-06 18:48:51.360] [stderrLog] [info] Loading Transcript Info \n[2025-02-06 18:48:51.361] [stderrLog] [info] Loading Rank-Select Bit Array\n[2025-02-06 18:48:51.361] [stderrLog] [info] There were 15 set bits in the bit array\n[2025-02-06 18:48:51.361] [stderrLog] [info] Computing transcript lengths\n[2025-02-06 18:48:51.361] [stderrLog] [info] Waiting to finish loading hash\n[2025-02-06 18:48:51.361] [stderrLog] [info] Done loading index\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1, exit_code: None, stderr: Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.00121597s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 6.297e-05s\nWriting sequence data to file . . . done\nElapsed time: 0.00010313s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 0.00019656s\ndone\nElapsed time: 0.0036933s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.00112699s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] =\u003e sailfish \n# [ command ] =\u003e quant \n# [ index ] =\u003e { ./index_dir }\n# [ mates1 ] =\u003e { ./mate1.fastq }\n# [ mates2 ] =\u003e { ./mate2.fastq }\n# [ libType ] =\u003e { IU }\n# [ output ] =\u003e { ./results }\n# [ biasCorrect ] =\u003e { }\n# [ threads ] =\u003e { 6 }\n# [ gcSizeSamp ] =\u003e { 1 }\n# [ gcSpeedSamp ] =\u003e { 1 }\n# [ fldMean ] =\u003e { 200 }\n# [ fldSD ] =\u003e { 80 }\n# [ maxReadOcc ] =\u003e { 200 }\n# [ geneMap ] =\u003e { ./geneMap.tabular }\n# [ maxFragLen ] =\u003e { 1000 }\n# [ txpAggregationKey ] =\u003e { gene_id }\n# [ numBiasSamples ] =\u003e { 1000000 }\n# [ numFragSamples ] =\u003e { 10000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\nLogs will be written to ./results/logs\n[2025-02-06 18:48:51.283] [jointLog] [info] parsing read library format\nthere is 1 lib\nLoading 32-bit quasi index[2025-02-06 18:48:51.357] [jointLog] [info] Loading Quasi index\n[2025-02-06 18:48:51.361] [jointLog] [info] done\nIndex contained 15 targets\nLoaded targets\n\n\n\n[2025-02-06 18:48:51.383] [jointLog] [info] Gathered fragment lengths from all threads\n[2025-02-06 18:48:51.383] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2025-02-06 18:48:51.384] [jointLog] [info] Estimating effective lengths\nDone Quasi-Mapping \n\n[2025-02-06 18:48:51.393] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2025-02-06 18:48:51.393] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2025-02-06 18:48:51.394] [jointLog] [info] Starting optimizer:\n\n[2025-02-06 18:48:51.394] [jointLog] [info] Optimizing over 21 equivalence classes\n[2025-02-06 18:48:51.394] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2025-02-06 18:48:51.394] [jointLog] [info] iteration 50, recomputing effective lengths\n[2025-02-06 18:48:51.396] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953\n[2025-02-06 18:48:51.396] [jointLog] [info] Finished optimizer\n[2025-02-06 18:48:51.396] [jointLog] [info] writing output \n\nComputing gene-level abundance estimates\nThere were 3 transcripts mapping to 3 genes\nWARNING: couldn\u0027t find transcript named [NR_031764]; returning transcript  as it\u0027s own gene\n\ndone\nAggregating expressions to gene level . . . done\n[2025-02-06 18:48:51.359] [stderrLog] [info] Loading Position Hash\n[2025-02-06 18:48:51.359] [stderrLog] [info] Loading Suffix Array \n[2025-02-06 18:48:51.360] [stderrLog] [info] Loading Transcript Info \n[2025-02-06 18:48:51.361] [stderrLog] [info] Loading Rank-Select Bit Array\n[2025-02-06 18:48:51.361] [stderrLog] [info] There were 15 set bits in the bit array\n[2025-02-06 18:48:51.361] [stderrLog] [info] Computing transcript lengths\n[2025-02-06 18:48:51.361] [stderrLog] [info] Waiting to finish loading hash\n[2025-02-06 18:48:51.361] [stderrLog] [info] Done loading index\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1, exit_code: None, stderr: Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.00121597s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 6.297e-05s\nWriting sequence data to file . . . done\nElapsed time: 0.00010313s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 0.00019656s\ndone\nElapsed time: 0.0036933s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.00112699s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] =\u003e sailfish \n# [ command ] =\u003e quant \n# [ index ] =\u003e { ./index_dir }\n# [ mates1 ] =\u003e { ./mate1.fastq }\n# [ mates2 ] =\u003e { ./mate2.fastq }\n# [ libType ] =\u003e { IU }\n# [ output ] =\u003e { ./results }\n# [ biasCorrect ] =\u003e { }\n# [ threads ] =\u003e { 6 }\n# [ gcSizeSamp ] =\u003e { 1 }\n# [ gcSpeedSamp ] =\u003e { 1 }\n# [ fldMean ] =\u003e { 200 }\n# [ fldSD ] =\u003e { 80 }\n# [ maxReadOcc ] =\u003e { 200 }\n# [ geneMap ] =\u003e { ./geneMap.tabular }\n# [ maxFragLen ] =\u003e { 1000 }\n# [ txpAggregationKey ] =\u003e { gene_id }\n# [ numBiasSamples ] =\u003e { 1000000 }\n# [ numFragSamples ] =\u003e { 10000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\nLogs will be written to ./results/logs\n[2025-02-06 18:48:51.283] [jointLog] [info] parsing read library format\nthere is 1 lib\nLoading 32-bit quasi index[2025-02-06 18:48:51.357] [jointLog] [info] Loading Quasi index\n[2025-02-06 18:48:51.361] [jointLog] [info] done\nIndex contained 15 targets\nLoaded targets\n\n\n\n[2025-02-06 18:48:51.383] [jointLog] [info] Gathered fragment lengths from all threads\n[2025-02-06 18:48:51.383] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2025-02-06 18:48:51.384] [jointLog] [info] Estimating effective lengths\nDone Quasi-Mapping \n\n[2025-02-06 18:48:51.393] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2025-02-06 18:48:51.393] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2025-02-06 18:48:51.394] [jointLog] [info] Starting optimizer:\n\n[2025-02-06 18:48:51.394] [jointLog] [info] Optimizing over 21 equivalence classes\n[2025-02-06 18:48:51.394] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2025-02-06 18:48:51.394] [jointLog] [info] iteration 50, recomputing effective lengths\n[2025-02-06 18:48:51.396] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953\n[2025-02-06 18:48:51.396] [jointLog] [info] Finished optimizer\n[2025-02-06 18:48:51.396] [jointLog] [info] writing output \n\nComputing gene-level abundance estimates\nThere were 3 transcripts mapping to 3 genes\nWARNING: couldn\u0027t find transcript named [NR_031764]; returning transcript  as it\u0027s own gene\n\ndone\nAggregating expressions to gene level . . . done\n[2025-02-06 18:48:51.359] [stderrLog] [info] Loading Position Hash\n[2025-02-06 18:48:51.359] [stderrLog] [info] Loading Suffix Array \n[2025-02-06 18:48:51.360] [stderrLog] [info] Loading Transcript Info \n[2025-02-06 18:48:51.361] [stderrLog] [info] Loading Rank-Select Bit Array\n[2025-02-06 18:48:51.361] [stderrLog] [info] There were 15 set bits in the bit array\n[2025-02-06 18:48:51.361] [stderrLog] [info] Computing transcript lengths\n[2025-02-06 18:48:51.361] [stderrLog] [info] Waiting to finish loading hash\n[2025-02-06 18:48:51.361] [stderrLog] [info] Done loading index\n." ], "status": "failure", "test_index": 3, "time_seconds": 37.71217489242554, "tool_id": "sailfish", "tool_version": "0.10.1.1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00121597sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 6.297e-05sWriting sequence data to file . . . doneElapsed time: 0.00010313s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00019656sdoneElapsed time: 0.0036933sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00112699sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ geneMap ] => { ./geneMap.tabular }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-02-06 18:48:51.283] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi index[2025-02-06 18:48:51.357] [jointLog] [info] Loading Quasi index[2025-02-06 18:48:51.361] [jointLog] [info] doneIndex contained 15 targetsLoaded targets[2025-02-06 18:48:51.383] [jointLog] [info] Gathered fragment lengths from all threads[2025-02-06 18:48:51.383] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-02-06 18:48:51.384] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-02-06 18:48:51.393] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-02-06 18:48:51.393] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-02-06 18:48:51.394] [jointLog] [info] Starting optimizer:[2025-02-06 18:48:51.394] [jointLog] [info] Optimizing over 21 equivalence classes[2025-02-06 18:48:51.394] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-02-06 18:48:51.394] [jointLog] [info] iteration 50, recomputing effective lengths[2025-02-06 18:48:51.396] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2025-02-06 18:48:51.396] [jointLog] [info] Finished optimizer[2025-02-06 18:48:51.396] [jointLog] [info] writing output Computing gene-level abundance estimatesThere were 3 transcripts mapping to 3 genesWARNING: couldn't find transcript named [NR_031764]; returning transcript  as it's own genedoneAggregating expressions to gene level . . . done[2025-02-06 18:48:51.359] [stderrLog] [info] Loading Position Hash[2025-02-06 18:48:51.359] [stderrLog] [info] Loading Suffix Array [2025-02-06 18:48:51.360] [stderrLog] [info] Loading Transcript Info [2025-02-06 18:48:51.361] [stderrLog] [info] Loading Rank-Select Bit Array[2025-02-06 18:48:51.361] [stderrLog] [info] There were 15 set bits in the bit array[2025-02-06 18:48:51.361] [stderrLog] [info] Computing transcript lengths[2025-02-06 18:48:51.361] [stderrLog] [info] Waiting to finish loading hash[2025-02-06 18:48:51.361] [stderrLog] [info] Done loading index
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #1)" name="0" time="45.673330545425415">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #2)" name="1" time="32.34154486656189">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #3)" name="2" time="33.87484574317932">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #4)" name="3" time="35.52361035346985">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #5)" name="4" time="33.326868772506714">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #6)" name="5" time="33.51286554336548">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="39.88983082771301">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="34.28979015350342">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="37.80245661735535">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="32.63486051559448">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="13.534746170043945">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 13.534746170043945, "tool_id": "samtools_phase", "tool_version": "2.0.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="33.664090633392334">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #1)" name="0" time="85.43412899971008">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "f9f0354dc4ad91b6",   "src": "hda"  },  "advanced_common|show_log": true,  "method|exclude_highly_expressed|exclude_highly_expressed": "False",  "method|key_added": "n_counts",  "method|layer_norm": "None",  "method|layers": "all",  "method|method": "pp.normalize_total" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/c/5/1/dataset_c51d849a-8584-4ee0-8c42-960059c1c577.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/146/configs/tmpkg11rc25\u0027 \u003e \u0027/galaxy/server/database/objects/c/3/5/dataset_c35cea60-5da1-40fd-b2a8-431a4a22c7f3.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/146/configs/tmpkg11rc25\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/c/3/5/dataset_c35cea60-5da1-40fd-b2a8-431a4a22c7f3.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/c/3/5/dataset_c35cea60-5da1-40fd-b2a8-431a4a22c7f3.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:10:58.614126",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-p4qhz",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "72fc054dc1821204",  "inputs": {   "adata": {    "id": "f9f0354dc4ad91b6",    "src": "hda",    "uuid": "c51d849a-8584-4ee0-8c42-960059c1c577"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738869102.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:11:42"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738869097.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:11:37"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "c0417bf467e3a596",    "src": "hda",    "uuid": "2f00635b-f3e2-4d6e-b30c-a085161b124f"   },   "hidden_output": {    "id": "30d356b5e1c7a180",    "src": "hda",    "uuid": "c35cea60-5da1-40fd-b2a8-431a4a22c7f3"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 0, \"exclude_highly_expressed\": {\"__current_case__\": 1, \"exclude_highly_expressed\": \"False\"}, \"key_added\": \"n_counts\", \"layer_norm\": \"None\", \"layers\": \"all\", \"method\": \"pp.normalize_total\", \"target_sum\": \"\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2025-02-06T19:12:02.688910",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.normalize_total.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 85.43412899971008, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #2)" name="1" time="38.82793617248535">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "1cc6a0deef911d18",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_zheng17",  "method|n_top_genes": "1000" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/2/a/1/dataset_2a17fa0a-18ae-47aa-919c-dde9f553c1cf.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/148/configs/tmp_3ps0tbe\u0027 \u003e \u0027/galaxy/server/database/objects/5/0/e/dataset_50eed46d-2c40-414a-aa2d-f6a122b30e83.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/148/configs/tmp_3ps0tbe\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/5/0/e/dataset_50eed46d-2c40-414a-aa2d-f6a122b30e83.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/5/0/e/dataset_50eed46d-2c40-414a-aa2d-f6a122b30e83.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:12:23.988302",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-lxcnx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "fd3410f1357b5b53",  "inputs": {   "adata": {    "id": "1cc6a0deef911d18",    "src": "hda",    "uuid": "2a17fa0a-18ae-47aa-919c-dde9f553c1cf"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738869150.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:12:30"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738869145.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:12:25"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "bf1547fa1816369b",    "src": "hda",    "uuid": "21b1fab9-0bf8-4827-ab8e-119152497dd8"   },   "hidden_output": {    "id": "00a86f7ebe3c704b",    "src": "hda",    "uuid": "50eed46d-2c40-414a-aa2d-f6a122b30e83"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 1, \"log\": true, \"method\": \"pp.recipe_zheng17\", \"n_top_genes\": \"1000\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "update_time": "2025-02-06T19:12:41.302567",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out:  different than expected, difference (using sim_size):\n( /tmp/tmp00zwhsfzpp.recipe_zheng17.random-randint.h5ad v. /tmp/tmp9gm8swa4pp.recipe_zheng17.random-randint.h5ad )\nFiles /tmp/tmp00zwhsfzpp.recipe_zheng17.random-randint.h5ad=487656b but /tmp/tmp9gm8swa4pp.recipe_zheng17.random-randint.h5ad=4114792b - compare by size (delta=1000000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 38.82793617248535, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 998[obs]-    n_counts_all[var]-    n_counts-    mean-    std[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #3)" name="2" time="39.12720799446106">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "fbb62106941442ed",   "src": "hda"  },  "advanced_common|show_log": true,  "method|cv_threshold": "2.0",  "method|log": true,  "method|mean_threshold": "0.01",  "method|method": "pp.recipe_weinreb17",  "method|n_pcs": "50",  "method|random_state": "0",  "method|svd_solver": "randomized" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/6/0/3/dataset_60318259-20aa-4008-8f23-843828cfc885.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/150/configs/tmphqool2sp\u0027 \u003e \u0027/galaxy/server/database/objects/3/f/1/dataset_3f1445dd-3ba5-4a96-bb4c-9e13dd5e718a.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/150/configs/tmphqool2sp\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/3/f/1/dataset_3f1445dd-3ba5-4a96-bb4c-9e13dd5e718a.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/3/f/1/dataset_3f1445dd-3ba5-4a96-bb4c-9e13dd5e718a.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:13:02.832143",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-v9jsd",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "29bac28834ce047f",  "inputs": {   "adata": {    "id": "fbb62106941442ed",    "src": "hda",    "uuid": "60318259-20aa-4008-8f23-843828cfc885"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738869189.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:13:09"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738869184.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:13:04"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "45deac2f529bb0fe",    "src": "hda",    "uuid": "a21ab6e2-14c6-4b08-bc4e-f6134edc6bc0"   },   "hidden_output": {    "id": "639109b27c7cdec6",    "src": "hda",    "uuid": "3f1445dd-3ba5-4a96-bb4c-9e13dd5e718a"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 2, \"cv_threshold\": \"2.0\", \"log\": true, \"mean_threshold\": \"0.01\", \"method\": \"pp.recipe_weinreb17\", \"n_pcs\": \"50\", \"random_state\": \"0\", \"svd_solver\": \"randomized\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "update_time": "2025-02-06T19:13:20.794112",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_weinreb17.paul15_subsample.updated.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 39.12720799446106, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    log1p[obsm]-    X_pca
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #4)" name="3" time="38.66214084625244">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "fe9815b60a3b2b8a",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_seurat" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/7/1/4/dataset_714c54ee-df23-4ec3-ab8b-ccff67fbcd13.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/152/configs/tmpzq1mj1ar\u0027 \u003e \u0027/galaxy/server/database/objects/9/7/0/dataset_970e5298-0b1b-4a27-983c-8d6e33ea73cd.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/152/configs/tmpzq1mj1ar\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/9/7/0/dataset_970e5298-0b1b-4a27-983c-8d6e33ea73cd.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/9/7/0/dataset_970e5298-0b1b-4a27-983c-8d6e33ea73cd.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:13:41.025977",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-jswjx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "ff017a29a91c34b0",  "inputs": {   "adata": {    "id": "fe9815b60a3b2b8a",    "src": "hda",    "uuid": "714c54ee-df23-4ec3-ab8b-ccff67fbcd13"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738869227.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:13:47"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738869222.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:13:42"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "f2f06f1c036934d6",    "src": "hda",    "uuid": "0d596117-8d10-426e-a549-fa18dab191f5"   },   "hidden_output": {    "id": "b08573beac626d0e",    "src": "hda",    "uuid": "970e5298-0b1b-4a27-983c-8d6e33ea73cd"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 3, \"log\": true, \"method\": \"pp.recipe_seurat\"}"  },  "state": "ok",  "stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "update_time": "2025-02-06T19:13:59.489600",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_seurat.recipe_zheng17.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 38.66214084625244, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1[obs]-    n_counts_all-    n_genes[var]-    n_counts-    mean-    std-    n_cells[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: adata.X seems to be already log-transformed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #5)" name="4" time="38.422956466674805">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "eaa28b48e0b0f24e",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "all_genes",  "method|t": "-1" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/4/7/e/dataset_47ed17e4-a859-43d1-8c4b-f5470bc77303.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/154/configs/tmpwk2tgxx2\u0027 \u003e \u0027/galaxy/server/database/objects/0/b/0/dataset_0b01f489-fe60-4c15-8550-e754a363f77a.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/154/configs/tmpwk2tgxx2\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/0/b/0/dataset_0b01f489-fe60-4c15-8550-e754a363f77a.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/0/b/0/dataset_0b01f489-fe60-4c15-8550-e754a363f77a.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:14:20.897461",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-bgjct",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "8c93fd993483af48",  "inputs": {   "adata": {    "id": "eaa28b48e0b0f24e",    "src": "hda",    "uuid": "47ed17e4-a859-43d1-8c4b-f5470bc77303"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738869267.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:14:27"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738869262.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:14:22"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "061d2a431793503c",    "src": "hda",    "uuid": "07a2fe74-f309-4f88-ad5e-a058a7594b84"   },   "hidden_output": {    "id": "676cb88d62b53a0a",    "src": "hda",    "uuid": "0b01f489-fe60-4c15-8550-e754a363f77a"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"all_genes\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"-1\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2025-02-06T19:14:38.114186",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.all_genes.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 38.422956466674805, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #6)" name="5" time="39.95584321022034">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "a43cf38b02e83305",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "pca_only",  "method|t": "3" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/6/d/4/dataset_6d44145b-5f75-4a3c-9923-67574657f2b6.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/156/configs/tmpg4uhxm5o\u0027 \u003e \u0027/galaxy/server/database/objects/0/6/4/dataset_0642b96d-3e89-4d3e-b7fe-1d8d56f9862a.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/156/configs/tmpg4uhxm5o\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/0/6/4/dataset_0642b96d-3e89-4d3e-b7fe-1d8d56f9862a.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/0/6/4/dataset_0642b96d-3e89-4d3e-b7fe-1d8d56f9862a.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-02-06T19:14:58.864667",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-xvffx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "30cd7421280c1d2b",  "inputs": {   "adata": {    "id": "a43cf38b02e83305",    "src": "hda",    "uuid": "6d44145b-5f75-4a3c-9923-67574657f2b6"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1738869306.0000000",    "title": "Job End Time",    "value": "2025-02-06 19:15:06"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1738869301.0000000",    "title": "Job Start Time",    "value": "2025-02-06 19:15:01"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "c397123e8069a7f9",    "src": "hda",    "uuid": "c0a13365-dfa6-4043-a3e1-da4b1fa2e223"   },   "hidden_output": {    "id": "876bd6659573002d",    "src": "hda",    "uuid": "0642b96d-3e89-4d3e-b7fe-1d8d56f9862a"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"pca_only\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"3\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "update_time": "2025-02-06T19:15:17.978605",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.pca_only.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 5, "time_seconds": 39.95584321022034, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot[obsm]-    X_magic
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.10177469253540039">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.10177469253540039, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.09782528877258301">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.09782528877258301, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="snpeff_sars_cov_2 (Test #1)" name="0" time="61.152384519577026">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #1)" name="0" time="44.56024217605591">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #2)" name="1" time="11.431519746780396">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 11.431519746780396, "tool_id": "vcf2tsv", "tool_version": "1.0.0_rc3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #1)" name="0" time="26.10369348526001">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "analysis_type": "count",  "vcf_input": {   "id": "9864ea8e1ccd1caa",   "src": "hda"  } }, "job": {  "command_line": "vcfhetcount \u0027/galaxy/server/database/objects/f/f/c/dataset_ffcd8224-bdf4-4e17-92ee-ebaf95bbaf97.dat\u0027 \u003e \u0027/galaxy/server/database/objects/4/9/e/dataset_49e5dbca-f8f2-4a10-9be3-3868af891790.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-02-06T19:24:23.691507",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-sqvxv",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "fe9815b60a3b2b8a",  "inputs": {   "vcf_input": {    "id": "9864ea8e1ccd1caa",    "src": "hda",    "uuid": "ffcd8224-bdf4-4e17-92ee-ebaf95bbaf97"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_file1": {    "id": "d658529b8884d466",    "src": "hda",    "uuid": "49e5dbca-f8f2-4a10-9be3-3868af891790"   }  },  "params": {   "__input_ext": "\"vcf\"",   "analysis_type": "\"count\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfhethom/vcfhethom/1.0.0_rc3+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-02-06T19:24:28.852631",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/vcfhethom/vcfhethom/1.0.0_rc3+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/vcfhethom/vcfhethom/1.0.0_rc3+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 26.10369348526001, "tool_id": "vcfhethom", "tool_version": "1.0.0_rc3+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #2)" name="1" time="34.60100984573364">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #3)" name="2" time="27.685468912124634">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "analysis_type": "allele_count",  "vcf_input": {   "id": "eb58354cf6c2e84a",   "src": "hda"  } }, "job": {  "command_line": "vcfcountalleles \u0027/galaxy/server/database/objects/b/b/b/dataset_bbb3a4e7-68dc-4ec3-b682-afd3e5914647.dat\u0027 \u003e \u0027/galaxy/server/database/objects/c/8/0/dataset_c80df086-57bd-4a3b-b264-5c011c242333.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-02-06T19:25:24.361065",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-bmssx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "89d44a78702f5be6",  "id": "061d2a431793503c",  "inputs": {   "vcf_input": {    "id": "eb58354cf6c2e84a",    "src": "hda",    "uuid": "bbb3a4e7-68dc-4ec3-b682-afd3e5914647"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_file1": {    "id": "eca13ca6d03d5bf1",    "src": "hda",    "uuid": "c80df086-57bd-4a3b-b264-5c011c242333"   }  },  "params": {   "__input_ext": "\"vcf\"",   "analysis_type": "\"allele_count\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfhethom/vcfhethom/1.0.0_rc3+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-02-06T19:25:31.185279",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/vcfhethom/vcfhethom/1.0.0_rc3+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/vcfhethom/vcfhethom/1.0.0_rc3+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 2, "time_seconds": 27.685468912124634, "tool_id": "vcfhethom", "tool_version": "1.0.0_rc3+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #1)" name="0" time="60.0594322681427">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #2)" name="1" time="40.310884952545166">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #3)" name="2" time="38.602829933166504">
        
            
            <system-out><![CDATA[
            null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #4)" name="3" time="37.37901258468628">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #5)" name="4" time="37.449732303619385">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
</testsuite>