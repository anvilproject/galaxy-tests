<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="83"
           errors="2"
           failures="24"
           skip="0">
    
    <testcase classname="anndata_import (Test #1)" name="0" time="66.14314579963684">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "fcbba66686ff82a3",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/101/configs/tmptt7c02qr\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/101/configs/tmptt7c02qr\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-06T18:59:54.750946",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-2tv9p",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "a2b8354c718e9723",  "inputs": {   "hd5_format|in|input": {    "id": "fcbba66686ff82a3",    "src": "hda",    "uuid": "ed99ece0-a115-4e33-ab3a-e8f21f092a43"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741287622.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:00:22"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741287624.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:00:24"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "61c9b111a72f8db0",    "src": "hda",    "uuid": "824d4233-f706-4fe6-a6e8-9e6833c724a1"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 148, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/e/d/9/dataset_ed99ece0-a115-4e33-ab3a-e8f21f092a43.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/e/d/9/dataset_ed99ece0-a115-4e33-ab3a-e8f21f092a43.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-06T19:00:39.972131",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 66.14314579963684, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/e/d/9/dataset_ed99ece0-a115-4e33-ab3a-e8f21f092a43.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #1)" name="0" time="36.65143013000488">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "38ec3176b653a481",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/118/configs/tmp_wbbx7_k\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/118/configs/tmp_wbbx7_k\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:04:51.285410",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-76rbj",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "5809717574ae9fdf",  "inputs": {   "hd5_format|in|input": {    "id": "38ec3176b653a481",    "src": "hda",    "uuid": "c3d91d50-a1d8-433d-bf5d-80193db7b19c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741287892.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:04:52"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741287894.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:04:54"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "b9148e4c20c654d7",    "src": "hda",    "uuid": "b1987886-eeb0-4c07-bfa4-a4017b0c6d78"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 165, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/c/3/d/dataset_c3d91d50-a1d8-433d-bf5d-80193db7b19c.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/c/3/d/dataset_c3d91d50-a1d8-433d-bf5d-80193db7b19c.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-06T19:05:06.583582",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 36.65143013000488, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/c/3/d/dataset_c3d91d50-a1d8-433d-bf5d-80193db7b19c.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="35.108564615249634">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "05fbd8aa2b8447e2",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/103/configs/tmp0ufaie_o\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/103/configs/tmp0ufaie_o\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:01:01.197928",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-nsshl",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "4044bb1eb97e0be4",  "inputs": {   "hd5_format|in|input": {    "id": "05fbd8aa2b8447e2",    "src": "hda",    "uuid": "44435c67-4aed-43fa-ae5f-87569ac7d086"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741287662.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:01:02"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741287664.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:01:04"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "7a9b94d4875531c0",    "src": "hda",    "uuid": "12861cdf-99b9-4cec-a7c9-dcb97c98e58d"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 150, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/4/4/4/dataset_44435c67-4aed-43fa-ae5f-87569ac7d086.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/4/4/4/dataset_44435c67-4aed-43fa-ae5f-87569ac7d086.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-06T19:01:15.330479",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmpt6exi1slimport.csv.h5ad v. /tmp/tmpb6pjayibimport.csv.h5ad )\nFiles /tmp/tmpt6exi1slimport.csv.h5ad=29512b but /tmp/tmpb6pjayibimport.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 35.108564615249634, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/4/4/4/dataset_44435c67-4aed-43fa-ae5f-87569ac7d086.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="36.11126351356506">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "ce421c1a3d84081c",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/120/configs/tmp27h_hpnk\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/120/configs/tmp27h_hpnk\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:05:27.242803",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-zhh9x",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "522a68ac5a145459",  "inputs": {   "hd5_format|in|input": {    "id": "ce421c1a3d84081c",    "src": "hda",    "uuid": "0bf67145-3f4b-43f8-8b65-abf59e322795"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741287928.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:05:28"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741287930.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:05:30"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "a28aeaaec311ea93",    "src": "hda",    "uuid": "1efcb414-a23f-4617-8fe5-c209f2778952"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 167, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/0/b/f/dataset_0bf67145-3f4b-43f8-8b65-abf59e322795.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/0/b/f/dataset_0bf67145-3f4b-43f8-8b65-abf59e322795.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-06T19:05:42.910309",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmpe29n3wbsimport.csv.h5ad v. /tmp/tmp1pcbk0uuimport.csv.h5ad )\nFiles /tmp/tmpe29n3wbsimport.csv.h5ad=29512b but /tmp/tmp1pcbk0uuimport.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 36.11126351356506, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/0/b/f/dataset_0bf67145-3f4b-43f8-8b65-abf59e322795.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="33.84825778007507">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "c71a11368ae695b3",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/105/configs/tmpzde1g_tq\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/105/configs/tmpzde1g_tq\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:01:36.052401",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-vxf6d",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "a6ca020db8c470c6",  "inputs": {   "hd5_format|in|input": {    "id": "c71a11368ae695b3",    "src": "hda",    "uuid": "39619442-2542-4528-ad46-e5fffe6103bb"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741287697.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:01:37"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741287698.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:01:38"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "1ed3102ef30f0706",    "src": "hda",    "uuid": "21658b35-1956-42a3-a156-b98ec5645f3d"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 152, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/3/9/6/dataset_39619442-2542-4528-ad46-e5fffe6103bb.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/3/9/6/dataset_39619442-2542-4528-ad46-e5fffe6103bb.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-06T19:01:49.549396",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 33.84825778007507, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/3/9/6/dataset_39619442-2542-4528-ad46-e5fffe6103bb.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="35.20976495742798">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "305a804974924044",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/122/configs/tmpp8x6g7us\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/122/configs/tmpp8x6g7us\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:06:03.446768",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-tdqk9",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "1a774b965454cbf0",  "inputs": {   "hd5_format|in|input": {    "id": "305a804974924044",    "src": "hda",    "uuid": "1871e4ac-fee3-4d24-95a1-134abad6a0de"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741287965.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:06:05"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741287966.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:06:06"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "c6ca50aa77127d82",    "src": "hda",    "uuid": "3ff89bad-67b1-4c62-89a6-a407ab3fcc34"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 169, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/1/8/7/dataset_1871e4ac-fee3-4d24-95a1-134abad6a0de.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/1/8/7/dataset_1871e4ac-fee3-4d24-95a1-134abad6a0de.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-06T19:06:18.225324",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 35.20976495742798, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/1/8/7/dataset_1871e4ac-fee3-4d24-95a1-134abad6a0de.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="37.490498781204224">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "1ed7a5f2dc4152a7",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/107/configs/tmpppfag9ll\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/107/configs/tmpppfag9ll\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:02:11.113289",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-4w6jw",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "97f83c5456131b15",  "inputs": {   "hd5_format|in|matrix": {    "id": "1ed7a5f2dc4152a7",    "src": "hda",    "uuid": "d075ade2-e1a3-474b-8c99-0efda32b2706"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741287733.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:02:13"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741287735.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:02:15"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "333a3b4ee498a38e",    "src": "hda",    "uuid": "7985ab20-9058-4d8b-b64e-ca6e9e5918d9"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 154, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/d/0/7/dataset_d075ade2-e1a3-474b-8c99-0efda32b2706.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/d/0/7/dataset_d075ade2-e1a3-474b-8c99-0efda32b2706.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-06T19:02:26.921178",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 37.490498781204224, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/d/0/7/dataset_d075ade2-e1a3-474b-8c99-0efda32b2706.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="36.553887128829956">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "23538f52acac86a0",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/124/configs/tmp45gyai9s\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/124/configs/tmp45gyai9s\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:06:39.737429",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-s2j2m",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "c6fece3a25a9d5a1",  "inputs": {   "hd5_format|in|matrix": {    "id": "23538f52acac86a0",    "src": "hda",    "uuid": "019c8452-37a1-4919-8ac2-4ec94465e508"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741288001.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:06:41"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741288002.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:06:42"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "787399d998bf5527",    "src": "hda",    "uuid": "6fd7cf68-ba0c-4611-863d-609436f91fc0"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 171, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/0/1/9/dataset_019c8452-37a1-4919-8ac2-4ec94465e508.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/0/1/9/dataset_019c8452-37a1-4919-8ac2-4ec94465e508.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-06T19:06:54.897142",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 36.553887128829956, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/0/1/9/dataset_019c8452-37a1-4919-8ac2-4ec94465e508.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="36.984612464904785">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "15c92625a36216f8",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/6/d/c/dataset_6dc15ed2-9701-4025-acbb-d2270b713c2d.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/109/configs/tmp6zdxpwhz\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/109/configs/tmp6zdxpwhz\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:02:49.498997",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-tg7kg",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "1cc83ab697023c0e",  "inputs": {   "hd5_format|in|input": {    "id": "15c92625a36216f8",    "src": "hda",    "uuid": "6dc15ed2-9701-4025-acbb-d2270b713c2d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741287771.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:02:51"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741287772.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:02:52"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "7b479660a01906ae",    "src": "hda",    "uuid": "1bbe3333-7c3d-480d-bd79-c0d79b07cc87"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 156, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-06T19:03:04.365758",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 36.984612464904785, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="35.43202567100525">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "aa2325521cabfd2c",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/1/f/0/dataset_1f0b2a67-8f03-4778-a304-acddc4392461.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/126/configs/tmpir0yjmi2\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/126/configs/tmpir0yjmi2\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:07:16.580946",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-dgdnx",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "ca4a0c8f0b4f06d5",  "inputs": {   "hd5_format|in|input": {    "id": "aa2325521cabfd2c",    "src": "hda",    "uuid": "1f0b2a67-8f03-4778-a304-acddc4392461"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741288037.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:07:17"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741288039.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:07:19"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "f06f6c9a8c427e90",    "src": "hda",    "uuid": "fbf310c0-89cb-4d46-8f84-81f800835f51"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 173, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-06T19:07:30.227928",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 35.43202567100525, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="46.86160945892334">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|coldata": {   "id": "aa04e962d7baeb4c",   "src": "hda"  },  "hd5_format|filetype": "loom",  "hd5_format|mainmatrix": {   "id": "f5b92784e1313eb0",   "src": "hda"  },  "hd5_format|other_files": {   "id": "60351e4ab6c47a5e",   "src": "hda"  },  "hd5_format|rowdata": {   "id": "5d6ea8bb28b789d8",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/fb9e030ffae4/anndata_import/tsv_to_loompy.py\u0027 -c \u0027/galaxy/server/database/objects/3/a/e/dataset_3ae6dec6-59eb-4e09-98fd-15a3726777b1.dat\u0027 -r \u0027/galaxy/server/database/objects/9/d/0/dataset_9d075225-1f1e-4725-8601-0cb4f0d9da41.dat\u0027 -f \u0027/galaxy/server/database/objects/a/1/d/dataset_a1d0acf6-92a6-4a67-8d81-d126c8afdd77.dat\u0027 \u0027/galaxy/server/database/objects/e/c/d/dataset_ecd4da7c-c0e6-49f8-9233-406ea3db7260.dat\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:03:35.776663",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-z2pw2",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "95294fbe5e53eec6",  "inputs": {   "hd5_format|coldata": {    "id": "aa04e962d7baeb4c",    "src": "hda",    "uuid": "3ae6dec6-59eb-4e09-98fd-15a3726777b1"   },   "hd5_format|mainmatrix": {    "id": "f5b92784e1313eb0",    "src": "hda",    "uuid": "a1d0acf6-92a6-4a67-8d81-d126c8afdd77"   },   "hd5_format|other_files": {    "id": "60351e4ab6c47a5e",    "src": "hda",    "uuid": "ecd4da7c-c0e6-49f8-9233-406ea3db7260"   },   "hd5_format|other_files1": {    "id": "60351e4ab6c47a5e",    "src": "hda",    "uuid": "ecd4da7c-c0e6-49f8-9233-406ea3db7260"   },   "hd5_format|rowdata": {    "id": "5d6ea8bb28b789d8",    "src": "hda",    "uuid": "9d075225-1f1e-4725-8601-0cb4f0d9da41"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741287817.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:03:37"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741287819.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:03:39"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "loomdata": {    "id": "3e2089e4dd917e14",    "src": "hda",    "uuid": "9f1014e7-f2a8-4d72-a173-265a8b4ae462"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 1, \"coldata\": {\"values\": [{\"id\": 160, \"src\": \"hda\"}]}, \"filetype\": \"loom\", \"mainmatrix\": {\"values\": [{\"id\": 158, \"src\": \"hda\"}]}, \"other_files\": {\"values\": [{\"id\": 159, \"src\": \"hda\"}]}, \"rowdata\": {\"values\": [{\"id\": 161, \"src\": \"hda\"}]}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-03-06T19:03:51.214812",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output loomdata:  different than expected, difference (using sim_size):\n( /tmp/tmpziefoat5converted.loom.test v. /tmp/tmpdca0mmp4converted.loom.test )\nFiles /tmp/tmpziefoat5converted.loom.test=41883b but /tmp/tmpdca0mmp4converted.loom.test=28145b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 46.86160945892334, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="47.41942071914673">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|coldata": {   "id": "0dc7c083d0795ced",   "src": "hda"  },  "hd5_format|filetype": "loom",  "hd5_format|mainmatrix": {   "id": "02924ccfbd8a334a",   "src": "hda"  },  "hd5_format|other_files": {   "id": "9e5efe67d9dc6c72",   "src": "hda"  },  "hd5_format|rowdata": {   "id": "f714af8088aaa92f",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/fb9e030ffae4/anndata_import/tsv_to_loompy.py\u0027 -c \u0027/galaxy/server/database/objects/e/d/7/dataset_ed789fe7-5260-44b2-97ce-6dcdfbe21b3d.dat\u0027 -r \u0027/galaxy/server/database/objects/2/3/6/dataset_2369be08-1400-4085-9a16-c117151fa943.dat\u0027 -f \u0027/galaxy/server/database/objects/0/b/9/dataset_0b9ad536-45c3-413f-a23f-61b6d2f6f4ec.dat\u0027 \u0027/galaxy/server/database/objects/a/3/b/dataset_a3b81a62-0751-41a6-8923-2a80f7aa1255.dat\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:08:02.884020",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-8bdsm",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "3933a2b8a56001bb",  "inputs": {   "hd5_format|coldata": {    "id": "0dc7c083d0795ced",    "src": "hda",    "uuid": "ed789fe7-5260-44b2-97ce-6dcdfbe21b3d"   },   "hd5_format|mainmatrix": {    "id": "02924ccfbd8a334a",    "src": "hda",    "uuid": "0b9ad536-45c3-413f-a23f-61b6d2f6f4ec"   },   "hd5_format|other_files": {    "id": "9e5efe67d9dc6c72",    "src": "hda",    "uuid": "a3b81a62-0751-41a6-8923-2a80f7aa1255"   },   "hd5_format|other_files1": {    "id": "9e5efe67d9dc6c72",    "src": "hda",    "uuid": "a3b81a62-0751-41a6-8923-2a80f7aa1255"   },   "hd5_format|rowdata": {    "id": "f714af8088aaa92f",    "src": "hda",    "uuid": "2369be08-1400-4085-9a16-c117151fa943"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741288084.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:08:04"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741288086.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:08:06"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "loomdata": {    "id": "e2b4c499038e544f",    "src": "hda",    "uuid": "606c60cf-abff-40de-b887-c91683deea5d"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 1, \"coldata\": {\"values\": [{\"id\": 177, \"src\": \"hda\"}]}, \"filetype\": \"loom\", \"mainmatrix\": {\"values\": [{\"id\": 175, \"src\": \"hda\"}]}, \"other_files\": {\"values\": [{\"id\": 176, \"src\": \"hda\"}]}, \"rowdata\": {\"values\": [{\"id\": 178, \"src\": \"hda\"}]}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-03-06T19:08:18.223374",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output loomdata:  different than expected, difference (using sim_size):\n( /tmp/tmpzxnk4tpjconverted.loom.test v. /tmp/tmpccorarkwconverted.loom.test )\nFiles /tmp/tmpzxnk4tpjconverted.loom.test=41883b but /tmp/tmpccorarkwconverted.loom.test=28145b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 47.41942071914673, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="37.075098514556885">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/3/9/6/dataset_396c95ea-5f22-4e2b-9e1b-6776d816bf62.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="39.67057275772095">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/0/e/4/dataset_0e4a8bb2-e8f7-42d7-8fb7-5eaa2f41d987.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_fixploidy (Test #1)" name="0" time="46.91583514213562">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #1)" name="0" time="75.41214489936829">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #3)" name="2" time="81.79869842529297">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Parsing bcftools stats output: /galaxy/server/database/jobs_directory/000/190/outputs/dataset_2fb0bedf-da27-4979-a9d2-1aa993f19448.datPlotting graphs: python3 plot.pyCreating PDF: tectonic summary.tex >plot-vcfstats.log 2>&1Finished: plot_tmp//summary.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #4)" name="3" time="34.21249008178711">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #5)" name="4" time="35.83662009239197">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #1)" name="0" time="37.07939076423645">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #2)" name="1" time="36.351271867752075">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #1)" name="0" time="79.99732542037964">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #2)" name="1" time="38.3362934589386">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "corData": {   "id": "00e71d27ec72d7da",   "src": "hda"  },  "outFileFormat": "png",  "plotting_type|plotTitle": "Test Plot",  "plotting_type|whatToPlot": "scatterplot",  "removeOutliers": true }, "job": {  "command_line": "plotCorrelation --corData \u0027/galaxy/server/database/objects/b/4/0/dataset_b408d50e-9216-42d1-bbfb-9169744653a1.dat\u0027 --plotFile \u0027/galaxy/server/database/jobs_directory/000/8/outputs/dataset_26f97afa-b2df-46dc-bca9-90fb281e54f3.dat\u0027 --corMethod \u0027spearman\u0027 --whatToPlot \u0027scatterplot\u0027 --plotTitle \u0027Test Plot\u0027   --plotFileFormat \u0027png\u0027 --removeOutliers",  "command_version": "plotCorrelation 3.5.4",  "copied_from_job_id": null,  "create_time": "2025-03-06T18:37:12.396398",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-n9cc5",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "00e71d27ec72d7da",  "inputs": {   "corData": {    "id": "00e71d27ec72d7da",    "src": "hda",    "uuid": "b408d50e-9216-42d1-bbfb-9169744653a1"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-eb9e7907c7a753917c1e4d7a64384c047429618a:bcea566aaf2a8cd09765df369b45c50e0b7e9f18-1",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-eb9e7907c7a753917c1e4d7a64384c047429618a:bcea566aaf2a8cd09765df369b45c50e0b7e9f18-1"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "21474.0000000",    "title": "Memory Allocated (MB)",    "value": "21474"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741286234.0000000",    "title": "Job Start Time",    "value": "2025-03-06 18:37:14"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741286237.0000000",    "title": "Job End Time",    "value": "2025-03-06 18:37:17"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outFileName": {    "id": "33177b1c3eadd8f0",    "src": "hda",    "uuid": "26f97afa-b2df-46dc-bca9-90fb281e54f3"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "corMethod": "\"spearman\"",   "dbkey": "\"?\"",   "outFileCorMatrix": "false",   "outFileFormat": "\"png\"",   "plotting_type": "{\"__current_case__\": 1, \"log1p\": false, \"plotTitle\": \"Test Plot\", \"whatToPlot\": \"scatterplot\", \"xrange_conditional\": {\"__current_case__\": 1, \"xrange_select\": \"no\"}, \"yrange_conditional\": {\"__current_case__\": 1, \"yrange_select\": \"no\"}}",   "removeOutliers": "true",   "skipZeros": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_correlation/deeptools_plot_correlation/3.5.4+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-03-06T18:37:28.855173",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output outFileName:  different than expected, difference (using sim_size):\n( /tmp/tmp8uaqnwkbplotCorrelation_result2.png v. /tmp/tmpmd6syzmyplotCorrelation_result2.png )\nFiles /tmp/tmp8uaqnwkbplotCorrelation_result2.png=11943b but /tmp/tmpmd6syzmyplotCorrelation_result2.png=12341b - compare by size (delta=300) failed" ], "status": "failure", "test_index": 1, "time_seconds": 38.3362934589386, "tool_id": "deeptools_plot_correlation", "tool_version": "3.5.4+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #1)" name="0" time="41.855711460113525">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #2)" name="1" time="45.2834746837616">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #3)" name="2" time="39.15062594413757">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/c/d/8/dataset_cd88bc7b-6e03-480a-af7c-2fc5b3369834.dat[FLASH]     /galaxy/server/database/objects/8/e/8/dataset_8e8940a0-0383-43c5-b57e-0e61ae7c1588.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=64[FLASH]     Output format:         FASTQ, phred_offset=64[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 200 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      200[FLASH]     Combined pairs:   5[FLASH]     Uncombined pairs: 195[FLASH]     Percent combined: 2.50%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.023 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #4)" name="3" time="39.52159595489502">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #5)" name="4" time="39.00218319892883">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/8/1/b/dataset_81b8bbf5-9a94-44d7-896a-32d2dc6accca.dat[FLASH]     /galaxy/server/database/objects/e/3/1/dataset_e31d7ae4-9915-4686-baf3-07def74bf557.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=33[FLASH]     Output format:         FASTQ, phred_offset=33, gzip[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 500 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      500[FLASH]     Combined pairs:   18[FLASH]     Uncombined pairs: 482[FLASH]     Percent combined: 3.60%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.041 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #1)" name="0" time="53.416912317276">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "fdac3639650620f9",   "src": "hda"  },  "reference_source|ref": {   "id": "302c3fa7aa0a4986",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/6/c/c/dataset_6cc6a3cd-8827-4292-9860-fb210ed66120.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/d/d/d/dataset_dddfb8c1-1a7d-47f1-9403-2c0ba42ad22e.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/4/f/8/metadata_4f852352-f9e9-43d5-aef8-534402124be6.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:21:26.907992",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-zbb4q",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "a28aeaaec311ea93",  "inputs": {   "reads": {    "id": "fdac3639650620f9",    "src": "hda",    "uuid": "dddfb8c1-1a7d-47f1-9403-2c0ba42ad22e"   },   "reference_source|ref": {    "id": "302c3fa7aa0a4986",    "src": "hda",    "uuid": "6cc6a3cd-8827-4292-9860-fb210ed66120"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15",    "title": "Container ID",    "value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741288899.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:21:39"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741288903.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:21:43"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "eb07db93feec41ab",    "src": "hda",    "uuid": "341d669e-ad1f-4863-a881-7f6c6919aedd"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 235, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-03-06 19:21:39,725]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-03-06 19:21:39,776]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-06 19:21:43,063]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallela36l4u30/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-03-06 19:21:39,725]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-03-06 19:21:39,776]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-06 19:21:43,063]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallela36l4u30/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-03-06T19:21:56.906063",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpq71vsf9icall-out1.vcf v. /tmp/tmpp0jdf63ecall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250306\n+##source=lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallela36l4u30/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallela36l4u30/concat.vcf.gz /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallela36l4u30/0.vcf.gz /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallela36l4u30/1.vcf.gz /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallela36l4u30/2.vcf.gz /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallela36l4u30/3.vcf.gz /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallela36l4u30/4.vcf.gz; Date=Thu Mar  6 19:21:42 2025\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 0, "time_seconds": 53.416912317276, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-03-06 19:21:39,725]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bamINFO [2025-03-06 19:21:39,776]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-03-06 19:21:43,063]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallela36l4u30/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #2)" name="1" time="40.27658200263977">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "reads": {   "id": "aab7d78cdf7a7d87",   "src": "hda"  },  "reference_source|ref": {   "id": "62ffd66e923dc113",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/0/e/2/dataset_0e2d1bc9-3e28-432b-87bd-ca49430fa94d.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/6/9/3/dataset_693dae5c-ffff-4b69-9a74-da6cc32aef5a.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/c/8/5/metadata_c852f77a-0655-4d84-89f0-b5621a471e3e.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:22:19.998424",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-vspzz",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "23538f52acac86a0",  "inputs": {   "reads": {    "id": "aab7d78cdf7a7d87",    "src": "hda",    "uuid": "693dae5c-ffff-4b69-9a74-da6cc32aef5a"   },   "reference_source|ref": {    "id": "62ffd66e923dc113",    "src": "hda",    "uuid": "0e2d1bc9-3e28-432b-87bd-ca49430fa94d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15",    "title": "Container ID",    "value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741288941.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:22:21"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741288946.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:22:26"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "77984e64cffcd101",    "src": "hda",    "uuid": "44564132-9872-441e-ba74-1d23a6118088"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 0, \"src_qual\": \"\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 238, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-03-06 19:22:22,379]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-03-06 19:22:22,404]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-06 19:22:25,886]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_paralleltgagkwjr/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-03-06 19:22:22,379]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-03-06 19:22:22,404]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-06 19:22:25,886]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_paralleltgagkwjr/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-03-06T19:22:37.340502",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmp4jajf30zcall-out1.vcf v. /tmp/tmpq_z1dnbkcall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250306\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_paralleltgagkwjr/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_paralleltgagkwjr/concat.vcf.gz /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_paralleltgagkwjr/0.vcf.gz /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_paralleltgagkwjr/1.vcf.gz /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_paralleltgagkwjr/2.vcf.gz /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_paralleltgagkwjr/3.vcf.gz /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_paralleltgagkwjr/4.vcf.gz; Date=Thu Mar  6 19:22:25 2025\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 1, "time_seconds": 40.27658200263977, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-03-06 19:22:22,379]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2025-03-06 19:22:22,404]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-03-06 19:22:25,886]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_paralleltgagkwjr/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #3)" name="2" time="44.58634328842163">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "call_control|source_qual|use_src_qual|def_nm_q": "40",  "call_control|source_qual|use_src_qual|ign_vcf": {   "id": "ab7d952554c32820",   "src": "hda"  },  "call_control|source_qual|use_src_qual|src_qual": "--src-qual",  "reads": {   "id": "96f957fa8f4dcf79",   "src": "hda"  },  "reference_source|ref": {   "id": "08ce25de99a8cbc3",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/c/1/0/dataset_c10f025f-1d2a-4729-9e27-634e4816cd8a.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/2/4/d/dataset_24d755c1-4a75-414c-b76b-ed02029ff206.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/6/0/4/metadata_6040697a-1788-4899-989a-25c6de84ebfd.dat\u0027 reads.bam.bai \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/f/0/2/dataset_f02864a4-f4ac-4015-a439-33cd4db32fc8.dat\u0027 ign0.vcf \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --src-qual --ign-vcf \u0027ign0.vcf\u0027 --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:23:04.805397",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-gxs7q",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "02924ccfbd8a334a",  "inputs": {   "call_control|source_qual|use_src_qual|ign_vcf": {    "id": "ab7d952554c32820",    "src": "hda",    "uuid": "f02864a4-f4ac-4015-a439-33cd4db32fc8"   },   "call_control|source_qual|use_src_qual|ign_vcf1": {    "id": "ab7d952554c32820",    "src": "hda",    "uuid": "f02864a4-f4ac-4015-a439-33cd4db32fc8"   },   "reads": {    "id": "96f957fa8f4dcf79",    "src": "hda",    "uuid": "24d755c1-4a75-414c-b76b-ed02029ff206"   },   "reference_source|ref": {    "id": "08ce25de99a8cbc3",    "src": "hda",    "uuid": "c10f025f-1d2a-4729-9e27-634e4816cd8a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15",    "title": "Container ID",    "value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741288987.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:23:07"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741288990.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:23:10"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "22dcc32c97e654b4",    "src": "hda",    "uuid": "e79dfe8c-c2ab-4a7e-9a48-029fc9f6124f"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 1, \"def_nm_q\": \"40\", \"ign_vcf\": {\"values\": [{\"id\": 242, \"src\": \"hda\"}]}, \"src_qual\": \"--src-qual\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 241, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-03-06 19:23:07,431]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-03-06 19:23:07,504]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-06 19:23:10,713]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallelg0oj1gll/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-03-06 19:23:07,431]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-03-06 19:23:07,504]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-06 19:23:10,713]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallelg0oj1gll/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-03-06T19:23:22.106756",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpntzs8q4wcall-out1.vcf v. /tmp/tmpwfkg8yt1call-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250306\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallelg0oj1gll/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallelg0oj1gll/concat.vcf.gz /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallelg0oj1gll/0.vcf.gz /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallelg0oj1gll/1.vcf.gz /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallelg0oj1gll/2.vcf.gz /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallelg0oj1gll/3.vcf.gz /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallelg0oj1gll/4.vcf.gz; Date=Thu Mar  6 19:23:10 2025\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 2, "time_seconds": 44.58634328842163, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-03-06 19:23:07,431]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2025-03-06 19:23:07,504]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-03-06 19:23:10,713]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallelg0oj1gll/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #4)" name="3" time="38.79868745803833">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "ea5638aa23a371b7",   "src": "hda"  },  "reference_source|ref": {   "id": "29b2ddb58e9a6c90",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/9/f/b/dataset_9fb9aae8-ea0f-4f56-9df6-1d2f05a6964b.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/4/8/6/dataset_486bd0d9-aabd-420c-a15d-fabe0538b7c6.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/7/e/0/metadata_7e0be6f9-e462-4b8d-8c92-3c623b2df36b.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:23:45.096931",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-95h4t",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "f714af8088aaa92f",  "inputs": {   "reads": {    "id": "ea5638aa23a371b7",    "src": "hda",    "uuid": "486bd0d9-aabd-420c-a15d-fabe0538b7c6"   },   "reference_source|ref": {    "id": "29b2ddb58e9a6c90",    "src": "hda",    "uuid": "9fb9aae8-ea0f-4f56-9df6-1d2f05a6964b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15",    "title": "Container ID",    "value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741289026.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:23:46"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741289029.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:23:49"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "9e60f7d796def819",    "src": "hda",    "uuid": "dd5a4ae6-273d-43cf-b90b-98a9a3cafa33"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 245, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-03-06 19:23:47,222]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-03-06 19:23:47,259]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-06 19:23:49,631]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-03-06 19:23:47,222]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-03-06 19:23:47,259]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-06 19:23:49,631]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2025-03-06T19:24:01.177580",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpz_fzhk0acall-out2.vcf v. /tmp/tmp32vjnsbecall-out2.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallelg3dmyvln/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250306\n+##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/178/tmp/lofreq2_call_parallelzt3qjenw/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,6 +10,9 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/178/tmp/lofreq2_call_parallelzt3qjenw/concat.vcf.gz /galaxy/server/database/jobs_directory/000/178/tmp/lofreq2_call_parallelzt3qjenw/0.vcf.gz /galaxy/server/database/jobs_directory/000/178/tmp/lofreq2_call_parallelzt3qjenw/1.vcf.gz /galaxy/server/database/jobs_directory/000/178/tmp/lofreq2_call_parallelzt3qjenw/2.vcf.gz /galaxy/server/database/jobs_directory/000/178/tmp/lofreq2_call_parallelzt3qjenw/3.vcf.gz /galaxy/server/database/jobs_directory/000/178/tmp/lofreq2_call_parallelzt3qjenw/4.vcf.gz; Date=Thu Mar  6 19:23:49 2025\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t815\t.\tA\tG\t0\t.\tDP=665;AF=0.003008;SB=6;DP4=333,311,0,2\n pBR322\t861\t.\tA\tC\t0\t.\tDP=946;AF=0.002114;SB=3;DP4=447,497,0,2\n@@ -17,11 +21,11 @@\n pBR322\t1068\t.\tT\tG\t0\t.\tDP=1774;AF=0.000564;SB=3;DP4=853,920,1,0\n pBR322\t1084\t.\tG\tT\t0\t.\tDP=1789;AF=0.000559;SB=3;DP4=875,913,1,0\n pBR322\t1113\t.\tT\tA\t0\t.\tDP=1784;AF=0.000561;SB=0;DP4=885,898,0,1\n-pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n pBR322\t1193\t.\tG\tA\t0\t.\tDP=1698;AF=0.000589;SB=3;DP4=865,832,0,1\n pBR322\t1218\t.\tA\tC\t0\t.\tDP=1708;AF=0.000585;SB=3;DP4=875,831,0,1\n pBR322\t1230\t.\tT\tC\t0\t.\tDP=1759;AF=0.000569;SB=3;DP4=907,850,0,1\n pBR322\t1256\t.\tA\tG\t0\t.\tDP=1746;AF=0.000573;SB=0;DP4=902,842,1,0\n pBR322\t1498\t.\tC\tG\t0\t.\tDP=1195;AF=0.000837;SB=3;DP4=588,606,1,0\n pBR322\t1503\t.\tT\tG\t0\t.\tDP=1156;AF=0.000865;SB=3;DP4=563,592,1,0\n-pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.000880;SB=0;DP4=560,576,0,1\n+pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.00088;SB=0;DP4=560,576,0,1\n" ], "status": "failure", "test_index": 3, "time_seconds": 38.79868745803833, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-03-06 19:23:47,222]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2025-03-06 19:23:47,259]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-03-06 19:23:49,631]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #5)" name="4" time="39.248252868652344">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "a2d01d1b36100aa4",   "src": "hda"  },  "reference_source|ref": {   "id": "564368549edd100e",   "src": "hda"  },  "reference_source|ref_selector": "history",  "variant_types": "--call-indels --only-indels" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/0/5/a/dataset_05a4f1f7-2d0a-460f-adff-9089e4a1c752.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/f/e/c/dataset_fecb7970-62cf-4ddd-8b83-766a45754cdb.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/f/c/7/metadata_fc79210e-9d9e-4705-a03a-b1ecbca93418.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf --call-indels --only-indels    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:24:23.262939",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-7pkk9",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "4b16775b185e3e50",  "inputs": {   "reads": {    "id": "a2d01d1b36100aa4",    "src": "hda",    "uuid": "fecb7970-62cf-4ddd-8b83-766a45754cdb"   },   "reference_source|ref": {    "id": "564368549edd100e",    "src": "hda",    "uuid": "05a4f1f7-2d0a-460f-adff-9089e4a1c752"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15",    "title": "Container ID",    "value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741289065.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:24:25"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741289068.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:24:28"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "d46f900e392f4201",    "src": "hda",    "uuid": "f5fabce2-85e7-4e28-9bfd-56d21cc7760f"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 248, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"--call-indels --only-indels\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-03-06 19:24:25,491]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-03-06 19:24:25,519]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2025-03-06 19:24:28,887]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-03-06 19:24:25,491]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-03-06 19:24:25,519]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2025-03-06 19:24:28,887]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2025-03-06T19:24:40.207662",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpse8q4u1mindel-call-out.vcf v. /tmp/tmp11qb_hhxindel-call-out.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/31/working/pp-tmp/lofreq2_call_parallel4gfado3q/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250306\n+##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/181/tmp/lofreq2_call_parallel11gjq9fs/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,13 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/181/tmp/lofreq2_call_parallel11gjq9fs/concat.vcf.gz /galaxy/server/database/jobs_directory/000/181/tmp/lofreq2_call_parallel11gjq9fs/0.vcf.gz /galaxy/server/database/jobs_directory/000/181/tmp/lofreq2_call_parallel11gjq9fs/1.vcf.gz /galaxy/server/database/jobs_directory/000/181/tmp/lofreq2_call_parallel11gjq9fs/2.vcf.gz /galaxy/server/database/jobs_directory/000/181/tmp/lofreq2_call_parallel11gjq9fs/3.vcf.gz /galaxy/server/database/jobs_directory/000/181/tmp/lofreq2_call_parallel11gjq9fs/4.vcf.gz; Date=Thu Mar  6 19:24:28 2025\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t725\t.\tG\tGN\t0\t.\tDP=46;AF=0.021739;SB=0;DP4=22,23,0,1;INDEL;HRUN=1\n pBR322\t746\t.\tA\tAN\t0\t.\tDP=225;AF=0.004444;SB=3;DP4=116,108,0,1;INDEL;HRUN=1\n pBR322\t747\t.\tT\tTN\t0\t.\tDP=230;AF=0.004348;SB=3;DP4=118,111,0,1;INDEL;HRUN=1\n pBR322\t751\t.\tG\tGN\t0\t.\tDP=255;AF=0.003922;SB=3;DP4=128,126,0,1;INDEL;HRUN=1\n-pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.001650;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n+pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.00165;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n pBR322\t943\t.\tC\tCCG\t0\t.\tDP=1465;AF=0.000683;SB=0;DP4=709,755,0,1;INDEL;HRUN=1\n-pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.000570;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n+pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.00057;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n pBR322\t1271\t.\tA\tAN\t0\t.\tDP=1743;AF=0.000574;SB=0;DP4=890,855,1,0;INDEL;HRUN=2\n pBR322\t1376\t.\tA\tANN\t0\t.\tDP=1691;AF=0.000591;SB=3;DP4=849,843,0,1;INDEL;HRUN=1\n" ], "status": "failure", "test_index": 4, "time_seconds": 39.248252868652344, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-03-06 19:24:25,491]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2025-03-06 19:24:25,519]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 0Number of indel tests performed: 9INFO [2025-03-06 19:24:28,887]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #1)" name="0" time="75.33380794525146">
        
            
            <system-out><![CDATA[
            [18:45:37 - DataStre] Loaded sample register.[18:45:37 - DataIndx] Loaded 1/2 (50.00%) sample files.[18:45:37 - DataStre] Loaded sample register.[18:45:37 - DataIndx] Loaded 2/2 (100.00%) sample files.[18:45:37 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:45:37 - Variants] Processing NC_045512.2:0-.[18:45:37 - TrimOlap] NC_045512.2:30.0-2939.0 is contained within NC_045512.2:30.0-2939.0, skipping.
            ]]></system-out>
            <system-err><![CDATA[
            [18:45:39 - Annotate] Getting chrom coordinates[18:45:39 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:45:39 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #2)" name="1" time="47.62149429321289">
        
            
            <system-out><![CDATA[
            [18:46:32 - DataStre] Loaded sample register.[18:46:32 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:46:32 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:46:32 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            [18:46:34 - Annotate] Getting chrom coordinates[18:46:34 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:46:34 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #3)" name="2" time="38.53640341758728">
        
            
            <system-out><![CDATA[
            [18:47:15 - DataStre] Loaded sample register.[18:47:15 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:47:15 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:47:15 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_times (Test #1)" name="0" time="57.99428653717041">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="63.65328574180603">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="38.553401708602905">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="39.54513382911682">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="39.40126132965088">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="39.6782591342926">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="41.05233097076416">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="41.74719214439392">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="39.917734146118164">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="45.12965655326843">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="44.47742414474487">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #1)" name="0" time="57.18251347541809">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00146777sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 5.443e-05sWriting sequence data to file . . . doneElapsed time: 6.882e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00010402sdoneElapsed time: 0.0085967sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00116198sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ threads ] => { 8 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-03-06 18:49:10.203] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-03-06 18:49:10.265] [jointLog] [info] Loading Quasi index[2025-03-06 18:49:10.270] [jointLog] [info] done[2025-03-06 18:49:10.292] [jointLog] [info] Gathered fragment lengths from all threads[2025-03-06 18:49:10.292] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-03-06 18:49:10.292] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-03-06 18:49:10.267] [stderrLog] [info] Loading Suffix Array [2025-03-06 18:49:10.267] [stderrLog] [info] Loading Position Hash[2025-03-06 18:49:10.268] [stderrLog] [info] Loading Transcript Info [2025-03-06 18:49:10.269] [stderrLog] [info] Loading Rank-Select Bit Array[2025-03-06 18:49:10.269] [stderrLog] [info] There were 15 set bits in the bit array[2025-03-06 18:49:10.269] [stderrLog] [info] Computing transcript lengths[2025-03-06 18:49:10.269] [stderrLog] [info] Waiting to finish loading hash[2025-03-06 18:49:10.269] [stderrLog] [info] Done loading index[2025-03-06 18:49:10.300] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-03-06 18:49:10.300] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-03-06 18:49:10.301] [jointLog] [info] Starting optimizer:[2025-03-06 18:49:10.301] [jointLog] [info] Optimizing over 21 equivalence classes[2025-03-06 18:49:10.301] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-03-06 18:49:10.301] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687[2025-03-06 18:49:10.301] [jointLog] [info] Finished optimizer[2025-03-06 18:49:10.301] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #2)" name="1" time="42.950952768325806">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00143383sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 5.428e-05sWriting sequence data to file . . . doneElapsed time: 6.7969e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 9.991e-05sdoneElapsed time: 0.00499258sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00106911sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { /dev/fd/63 }# [ mates2 ] => { /dev/fd/62 }# [ libType ] => { IU }# [ output ] => { ./results }# [ threads ] => { 8 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-03-06 18:49:55.989] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-03-06 18:49:56.045] [jointLog] [info] Loading Quasi index[2025-03-06 18:49:56.050] [jointLog] [info] done[2025-03-06 18:49:56.067] [jointLog] [info] Gathered fragment lengths from all threads[2025-03-06 18:49:56.067] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-03-06 18:49:56.068] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-03-06 18:49:56.076] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-03-06 18:49:56.076] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-03-06 18:49:56.076] [jointLog] [info] Starting optimizer:[2025-03-06 18:49:56.077] [jointLog] [info] Optimizing over 21 equivalence classes[2025-03-06 18:49:56.077] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-03-06 18:49:56.077] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687[2025-03-06 18:49:56.077] [jointLog] [info] Finished optimizer[2025-03-06 18:49:56.077] [jointLog] [info] writing output [2025-03-06 18:49:56.048] [stderrLog] [info] Loading Suffix Array [2025-03-06 18:49:56.048] [stderrLog] [info] Loading Position Hash[2025-03-06 18:49:56.049] [stderrLog] [info] Loading Transcript Info [2025-03-06 18:49:56.050] [stderrLog] [info] Loading Rank-Select Bit Array[2025-03-06 18:49:56.050] [stderrLog] [info] There were 15 set bits in the bit array[2025-03-06 18:49:56.050] [stderrLog] [info] Computing transcript lengths[2025-03-06 18:49:56.050] [stderrLog] [info] Waiting to finish loading hash[2025-03-06 18:49:56.050] [stderrLog] [info] Done loading index
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #3)" name="2" time="40.71500301361084">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00119943sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 3.332e-05sWriting sequence data to file . . . doneElapsed time: 4.963e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 8.781e-05sdoneElapsed time: 0.0026412sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00104639sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 8 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-03-06 18:50:37.238] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-03-06 18:50:37.297] [jointLog] [info] Loading Quasi index[2025-03-06 18:50:37.304] [jointLog] [info] done[2025-03-06 18:50:37.324] [jointLog] [info] Gathered fragment lengths from all threads[2025-03-06 18:50:37.324] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-03-06 18:50:37.325] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-03-06 18:50:37.334] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-03-06 18:50:37.334] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-03-06 18:50:37.334] [jointLog] [info] Starting optimizer:[2025-03-06 18:50:37.334] [jointLog] [info] Optimizing over 21 equivalence classes[2025-03-06 18:50:37.334] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-03-06 18:50:37.334] [jointLog] [info] iteration 50, recomputing effective lengths[2025-03-06 18:50:37.300] [stderrLog] [info] Loading Position Hash[2025-03-06 18:50:37.300] [stderrLog] [info] Loading Suffix Array [2025-03-06 18:50:37.301] [stderrLog] [info] Loading Transcript Info [2025-03-06 18:50:37.303] [stderrLog] [info] Loading Rank-Select Bit Array[2025-03-06 18:50:37.303] [stderrLog] [info] There were 15 set bits in the bit array[2025-03-06 18:50:37.303] [stderrLog] [info] Computing transcript lengths[2025-03-06 18:50:37.303] [stderrLog] [info] Waiting to finish loading hash[2025-03-06 18:50:37.304] [stderrLog] [info] Done loading index[2025-03-06 18:50:37.336] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2025-03-06 18:50:37.336] [jointLog] [info] Finished optimizer[2025-03-06 18:50:37.336] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #4)" name="3" time="47.516385078430176">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00144075sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 4.724e-05sWriting sequence data to file . . . doneElapsed time: 6.971e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 9.449e-05sdoneElapsed time: 0.00263328sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00120567sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 8 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ geneMap ] => { ./geneMap.tabular }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-03-06 18:51:23.580] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-03-06 18:51:23.639] [jointLog] [info] Loading Quasi index[2025-03-06 18:51:23.644] [jointLog] [info] done[2025-03-06 18:51:23.664] [jointLog] [info] Gathered fragment lengths from all threads[2025-03-06 18:51:23.664] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-03-06 18:51:23.665] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-03-06 18:51:23.674] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-03-06 18:51:23.674] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-03-06 18:51:23.674] [jointLog] [info] Starting optimizer:[2025-03-06 18:51:23.641] [stderrLog] [info] Loading Suffix Array [2025-03-06 18:51:23.641] [stderrLog] [info] Loading Position Hash[2025-03-06 18:51:23.643] [stderrLog] [info] Loading Transcript Info [2025-03-06 18:51:23.644] [stderrLog] [info] Loading Rank-Select Bit Array[2025-03-06 18:51:23.644] [stderrLog] [info] There were 15 set bits in the bit array[2025-03-06 18:51:23.644] [stderrLog] [info] Computing transcript lengths[2025-03-06 18:51:23.644] [stderrLog] [info] Waiting to finish loading hash[2025-03-06 18:51:23.644] [stderrLog] [info] Done loading index[2025-03-06 18:51:23.674] [jointLog] [info] Optimizing over 21 equivalence classes[2025-03-06 18:51:23.674] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-03-06 18:51:23.675] [jointLog] [info] iteration 50, recomputing effective lengths[2025-03-06 18:51:23.676] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2025-03-06 18:51:23.676] [jointLog] [info] Finished optimizer[2025-03-06 18:51:23.676] [jointLog] [info] writing output Computing gene-level abundance estimatesThere were 3 transcripts mapping to 3 genesWARNING: couldn't find transcript named [NR_031764]; returning transcript  as it's own genedoneAggregating expressions to gene level . . . done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #1)" name="0" time="48.02249598503113">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #2)" name="1" time="36.85112166404724">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #3)" name="2" time="37.11006307601929">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #4)" name="3" time="36.84234261512756">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #5)" name="4" time="37.121758222579956">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #6)" name="5" time="36.745771169662476">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="44.324339628219604">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="40.21234083175659">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="36.833967208862305">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="37.20858359336853">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="39.20853328704834">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="39.35232329368591">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #1)" name="0" time="77.97276067733765">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "5d1189e38227fb02",   "src": "hda"  },  "advanced_common|show_log": true,  "method|exclude_highly_expressed|exclude_highly_expressed": "False",  "method|key_added": "n_counts",  "method|layer_norm": "None",  "method|layers": "all",  "method|method": "pp.normalize_total" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/0/9/7/dataset_09771067-e401-43c2-b3e0-e6adbf496fe8.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/155/configs/tmpr362r6e7\u0027 \u003e \u0027/galaxy/server/database/jobs_directory/000/155/outputs/dataset_04cc60b0-e575-4e8a-aa21-6fedac8c550c.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/155/configs/tmpr362r6e7\u0027 \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/155/outputs/dataset_04cc60b0-e575-4e8a-aa21-6fedac8c550c.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/155/outputs/dataset_04cc60b0-e575-4e8a-aa21-6fedac8c550c.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:16:38.472441",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-7x56s",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "333a3b4ee498a38e",  "inputs": {   "adata": {    "id": "5d1189e38227fb02",    "src": "hda",    "uuid": "09771067-e401-43c2-b3e0-e6adbf496fe8"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741288628.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:17:08"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741288633.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:17:13"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "9b974b12dfbfacc5",    "src": "hda",    "uuid": "6a29859d-bdc6-4d1f-8e71-e5736740bcac"   },   "hidden_output": {    "id": "63850aa6943952b8",    "src": "hda",    "uuid": "04cc60b0-e575-4e8a-aa21-6fedac8c550c"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 0, \"exclude_highly_expressed\": {\"__current_case__\": 1, \"exclude_highly_expressed\": \"False\"}, \"key_added\": \"n_counts\", \"layer_norm\": \"None\", \"layers\": \"all\", \"method\": \"pp.normalize_total\", \"target_sum\": \"\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2025-03-06T19:17:33.927792",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata_out: Test output file (pp.normalize_total.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 77.97276067733765, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #2)" name="1" time="41.44414234161377">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "b221273f60f401dd",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_zheng17",  "method|n_top_genes": "1000" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/3/6/e/dataset_36e26b9a-f986-42e6-9777-62fcf59c8ce9.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/157/configs/tmp2ddssl81\u0027 \u003e \u0027/galaxy/server/database/jobs_directory/000/157/outputs/dataset_e595ed2e-4f75-436a-82eb-f8509c3ba2ee.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/157/configs/tmp2ddssl81\u0027 \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/157/outputs/dataset_e595ed2e-4f75-436a-82eb-f8509c3ba2ee.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/157/outputs/dataset_e595ed2e-4f75-436a-82eb-f8509c3ba2ee.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:17:57.114401",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-v6fcx",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "7b479660a01906ae",  "inputs": {   "adata": {    "id": "b221273f60f401dd",    "src": "hda",    "uuid": "36e26b9a-f986-42e6-9777-62fcf59c8ce9"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741288679.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:17:59"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741288683.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:18:03"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "cdf8e3b5a43541db",    "src": "hda",    "uuid": "436961a1-308c-4c41-aed1-696436094e39"   },   "hidden_output": {    "id": "07f450a3239206b6",    "src": "hda",    "uuid": "e595ed2e-4f75-436a-82eb-f8509c3ba2ee"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 1, \"log\": true, \"method\": \"pp.recipe_zheng17\", \"n_top_genes\": \"1000\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "update_time": "2025-03-06T19:18:14.892373",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata_out:  different than expected, difference (using sim_size):\n( /tmp/tmpgdtuczgfpp.recipe_zheng17.random-randint.h5ad v. /tmp/tmptuqatuh6pp.recipe_zheng17.random-randint.h5ad )\nFiles /tmp/tmpgdtuczgfpp.recipe_zheng17.random-randint.h5ad=487656b but /tmp/tmptuqatuh6pp.recipe_zheng17.random-randint.h5ad=4114792b - compare by size (delta=1000000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 41.44414234161377, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 998[obs]-    n_counts_all[var]-    n_counts-    mean-    std[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #3)" name="2" time="40.33632564544678">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "7a4ca3b56198af78",   "src": "hda"  },  "advanced_common|show_log": true,  "method|cv_threshold": "2.0",  "method|log": true,  "method|mean_threshold": "0.01",  "method|method": "pp.recipe_weinreb17",  "method|n_pcs": "50",  "method|random_state": "0",  "method|svd_solver": "randomized" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/8/d/4/dataset_8d4ffaea-9b24-49ed-8861-b2f2d0751936.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/159/configs/tmp3gej2a8i\u0027 \u003e \u0027/galaxy/server/database/jobs_directory/000/159/outputs/dataset_97121897-a928-4678-a0de-2a181a0150c9.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/159/configs/tmp3gej2a8i\u0027 \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/159/outputs/dataset_97121897-a928-4678-a0de-2a181a0150c9.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/159/outputs/dataset_97121897-a928-4678-a0de-2a181a0150c9.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:18:37.430440",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-tfgbn",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "60351e4ab6c47a5e",  "inputs": {   "adata": {    "id": "7a4ca3b56198af78",    "src": "hda",    "uuid": "8d4ffaea-9b24-49ed-8861-b2f2d0751936"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741288719.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:18:39"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741288724.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:18:44"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "6a6e54dcce164004",    "src": "hda",    "uuid": "51b7eb67-e731-415c-ad75-322063693bea"   },   "hidden_output": {    "id": "0b70c2c199a29aaf",    "src": "hda",    "uuid": "97121897-a928-4678-a0de-2a181a0150c9"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 2, \"cv_threshold\": \"2.0\", \"log\": true, \"mean_threshold\": \"0.01\", \"method\": \"pp.recipe_weinreb17\", \"n_pcs\": \"50\", \"random_state\": \"0\", \"svd_solver\": \"randomized\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "update_time": "2025-03-06T19:18:55.751949",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_weinreb17.paul15_subsample.updated.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 40.33632564544678, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    log1p[obsm]-    X_pca
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #4)" name="3" time="39.00763702392578">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "777e0e5758526f1c",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_seurat" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/f/d/2/dataset_fd2022bd-e4c3-4b9b-b087-b5c57126cea4.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/161/configs/tmpvz2pipya\u0027 \u003e \u0027/galaxy/server/database/jobs_directory/000/161/outputs/dataset_a8181a73-1c9f-4bea-a1ea-fb70288c9630.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/161/configs/tmpvz2pipya\u0027 \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/161/outputs/dataset_a8181a73-1c9f-4bea-a1ea-fb70288c9630.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/161/outputs/dataset_a8181a73-1c9f-4bea-a1ea-fb70288c9630.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:19:18.103114",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-xm5km",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "5d6ea8bb28b789d8",  "inputs": {   "adata": {    "id": "777e0e5758526f1c",    "src": "hda",    "uuid": "fd2022bd-e4c3-4b9b-b087-b5c57126cea4"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741288759.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:19:19"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741288763.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:19:23"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "8636c75b79a52320",    "src": "hda",    "uuid": "671172e8-fe15-4846-a1d6-27ddea5b7da3"   },   "hidden_output": {    "id": "056109c309964857",    "src": "hda",    "uuid": "a8181a73-1c9f-4bea-a1ea-fb70288c9630"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 3, \"log\": true, \"method\": \"pp.recipe_seurat\"}"  },  "state": "ok",  "stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "update_time": "2025-03-06T19:19:35.097624",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_seurat.recipe_zheng17.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 39.00763702392578, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1[obs]-    n_counts_all-    n_genes[var]-    n_counts-    mean-    std-    n_cells[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: adata.X seems to be already log-transformed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #5)" name="4" time="41.79650568962097">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "562d5bb37849a804",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "all_genes",  "method|t": "-1" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/e/4/a/dataset_e4a53219-906e-4205-98e8-b806e0af98b9.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/163/configs/tmp4igk9z1l\u0027 \u003e \u0027/galaxy/server/database/jobs_directory/000/163/outputs/dataset_15dc0b71-ff67-4983-8e6c-95e7a57d4ac0.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/163/configs/tmp4igk9z1l\u0027 \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/163/outputs/dataset_15dc0b71-ff67-4983-8e6c-95e7a57d4ac0.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/163/outputs/dataset_15dc0b71-ff67-4983-8e6c-95e7a57d4ac0.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:19:58.425562",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-szx4b",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "b29f648086ba96eb",  "inputs": {   "adata": {    "id": "562d5bb37849a804",    "src": "hda",    "uuid": "e4a53219-906e-4205-98e8-b806e0af98b9"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741288800.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:20:00"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741288805.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:20:05"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "f34b7767e3238fac",    "src": "hda",    "uuid": "761ecbd5-0f23-4d50-8861-9077b58784f6"   },   "hidden_output": {    "id": "cf5a4d0ef76cfaf8",    "src": "hda",    "uuid": "15dc0b71-ff67-4983-8e6c-95e7a57d4ac0"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"all_genes\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"-1\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2025-03-06T19:20:17.018996",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.all_genes.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 41.79650568962097, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #6)" name="5" time="39.303407430648804">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "bbd7731a51e83f21",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "pca_only",  "method|t": "3" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/c/f/d/dataset_cfda3624-62ed-4727-b0ec-c17eba24b69c.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/165/configs/tmphuw4z73_\u0027 \u003e \u0027/galaxy/server/database/jobs_directory/000/165/outputs/dataset_5fd1aaf5-13a1-4147-8419-bb30ef3d996b.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/165/configs/tmphuw4z73_\u0027 \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/165/outputs/dataset_5fd1aaf5-13a1-4147-8419-bb30ef3d996b.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/165/outputs/dataset_5fd1aaf5-13a1-4147-8419-bb30ef3d996b.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-03-06T19:20:38.739781",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-wfrr7",  "galaxy_version": "24.2",  "handler": null,  "history_id": "d6425a6659f58d71",  "id": "38ec3176b653a481",  "inputs": {   "adata": {    "id": "bbd7731a51e83f21",    "src": "hda",    "uuid": "cfda3624-62ed-4727-b0ec-c17eba24b69c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741288840.0000000",    "title": "Job Start Time",    "value": "2025-03-06 19:20:40"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741288845.0000000",    "title": "Job End Time",    "value": "2025-03-06 19:20:45"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "dcf5f5c92b7d9d54",    "src": "hda",    "uuid": "697e1ddf-0d6b-4ea9-aca9-eadedc186e2f"   },   "hidden_output": {    "id": "4e28ed8b61a002ae",    "src": "hda",    "uuid": "5fd1aaf5-13a1-4147-8419-bb30ef3d996b"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"pca_only\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"3\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "update_time": "2025-03-06T19:20:56.423683",  "user_email": "tests@fake.org",  "user_id": "d6425a6659f58d71" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.pca_only.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 5, "time_seconds": 39.303407430648804, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot[obsm]-    X_magic
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.30421924591064453">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.30421924591064453, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.3009610176086426">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.3009610176086426, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="snpeff_sars_cov_2 (Test #1)" name="0" time="58.61755347251892">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #1)" name="0" time="45.49333953857422">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #2)" name="1" time="33.46864557266235">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #1)" name="0" time="35.531461238861084">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #2)" name="1" time="35.24435758590698">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #3)" name="2" time="36.10189628601074">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #1)" name="0" time="59.854655504226685">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #2)" name="1" time="42.206021308898926">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #3)" name="2" time="42.259730100631714">
        
            
            <system-out><![CDATA[
            null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #4)" name="3" time="41.40111541748047">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #5)" name="4" time="40.70433282852173">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
</testsuite>