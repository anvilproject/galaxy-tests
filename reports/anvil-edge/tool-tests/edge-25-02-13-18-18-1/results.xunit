<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="83"
           errors="9"
           failures="24"
           skip="0">
    
    <testcase classname="anndata_import (Test #1)" name="0" time="54.1720449924469">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "8b328bf9add2cee2",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/96/configs/tmpwu0vh2jy\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/96/configs/tmpwu0vh2jy\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-13T18:54:45.750201",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-vg7ln",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "3a54827fb0a7fe56",  "inputs": {   "hd5_format|in|input": {    "id": "8b328bf9add2cee2",    "src": "hda",    "uuid": "d9a7a9f0-e9e1-439a-8479-5eea1dbb186b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739472906.0000000",    "title": "Job End Time",    "value": "2025-02-13 18:55:06"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739472904.0000000",    "title": "Job Start Time",    "value": "2025-02-13 18:55:04"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "e5f6b774a169d10c",    "src": "hda",    "uuid": "0699f525-f475-4154-a086-74816a8c4e43"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 138, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/d/9/a/dataset_d9a7a9f0-e9e1-439a-8479-5eea1dbb186b.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/d/9/a/dataset_d9a7a9f0-e9e1-439a-8479-5eea1dbb186b.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-13T18:55:20.791879",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 54.1720449924469, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/d/9/a/dataset_d9a7a9f0-e9e1-439a-8479-5eea1dbb186b.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #1)" name="0" time="29.135411739349365">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "156bfdd35c5db2fa",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/113/configs/tmpd9ywkyfz\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/113/configs/tmpd9ywkyfz\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-13T18:59:00.224327",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-m2q5n",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "e484e6ee94a66b03",  "inputs": {   "hd5_format|in|input": {    "id": "156bfdd35c5db2fa",    "src": "hda",    "uuid": "91ca29e8-e58c-49c5-a838-f655adc3b865"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739473142.0000000",    "title": "Job End Time",    "value": "2025-02-13 18:59:02"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739473141.0000000",    "title": "Job Start Time",    "value": "2025-02-13 18:59:01"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "1e889d14280083f9",    "src": "hda",    "uuid": "7dd4df93-4edd-4a41-9abf-c7a466530286"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 155, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/9/1/c/dataset_91ca29e8-e58c-49c5-a838-f655adc3b865.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/9/1/c/dataset_91ca29e8-e58c-49c5-a838-f655adc3b865.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-13T18:59:12.196683",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 29.135411739349365, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/9/1/c/dataset_91ca29e8-e58c-49c5-a838-f655adc3b865.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="30.964567184448242">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "52d19c6a5bcbc030",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/98/configs/tmp1ahk63oo\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/98/configs/tmp1ahk63oo\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-13T18:55:39.015213",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-wkj44",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "2d508210ab6178ef",  "inputs": {   "hd5_format|in|input": {    "id": "52d19c6a5bcbc030",    "src": "hda",    "uuid": "6e7c8640-7a50-49dc-938d-6b9b8c1beef7"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739472941.0000000",    "title": "Job End Time",    "value": "2025-02-13 18:55:41"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739472940.0000000",    "title": "Job Start Time",    "value": "2025-02-13 18:55:40"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "e22360206e0aea36",    "src": "hda",    "uuid": "4b00277b-eb05-46c6-996c-5cdd79cfa1fb"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 140, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/6/e/7/dataset_6e7c8640-7a50-49dc-938d-6b9b8c1beef7.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/6/e/7/dataset_6e7c8640-7a50-49dc-938d-6b9b8c1beef7.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-13T18:55:51.957818",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmps0i0md2iimport.csv.h5ad v. /tmp/tmpd69adqw7import.csv.h5ad )\nFiles /tmp/tmps0i0md2iimport.csv.h5ad=29512b but /tmp/tmpd69adqw7import.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 30.964567184448242, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/6/e/7/dataset_6e7c8640-7a50-49dc-938d-6b9b8c1beef7.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="30.239721059799194">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "64f2647ad169990c",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/115/configs/tmpn22lvdh3\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/115/configs/tmpn22lvdh3\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-13T18:59:29.569509",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-d8xbc",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "3ce3065e4dd9689c",  "inputs": {   "hd5_format|in|input": {    "id": "64f2647ad169990c",    "src": "hda",    "uuid": "8282763b-c0b6-41fb-a10a-2e8a419851f2"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739473172.0000000",    "title": "Job End Time",    "value": "2025-02-13 18:59:32"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739473170.0000000",    "title": "Job Start Time",    "value": "2025-02-13 18:59:30"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "22a2b9425b89e498",    "src": "hda",    "uuid": "2de4c676-f8ba-4525-bde0-bd3b25c366d2"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 157, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/8/2/8/dataset_8282763b-c0b6-41fb-a10a-2e8a419851f2.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/8/2/8/dataset_8282763b-c0b6-41fb-a10a-2e8a419851f2.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-13T18:59:42.328845",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmp5itpa3j2import.csv.h5ad v. /tmp/tmpg_vn5r5mimport.csv.h5ad )\nFiles /tmp/tmp5itpa3j2import.csv.h5ad=29512b but /tmp/tmpg_vn5r5mimport.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 30.239721059799194, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/8/2/8/dataset_8282763b-c0b6-41fb-a10a-2e8a419851f2.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="31.096777200698853">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "7c5df6a42f6de22d",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/100/configs/tmpq3z0tt14\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/100/configs/tmpq3z0tt14\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-13T18:56:10.520806",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-rj5lx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "1a459d1fae2d563c",  "inputs": {   "hd5_format|in|input": {    "id": "7c5df6a42f6de22d",    "src": "hda",    "uuid": "0a293231-25d9-4e44-810b-ee7d5cb06e02"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739472973.0000000",    "title": "Job End Time",    "value": "2025-02-13 18:56:13"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739472971.0000000",    "title": "Job Start Time",    "value": "2025-02-13 18:56:11"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "f8672c40d6cbe6f5",    "src": "hda",    "uuid": "c6b2e11c-2894-4925-831b-f43e2f12abb6"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 142, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/0/a/2/dataset_0a293231-25d9-4e44-810b-ee7d5cb06e02.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/0/a/2/dataset_0a293231-25d9-4e44-810b-ee7d5cb06e02.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-13T18:56:23.147361",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 31.096777200698853, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/0/a/2/dataset_0a293231-25d9-4e44-810b-ee7d5cb06e02.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="30.326889276504517">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "17c12342a55581b5",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/117/configs/tmpb7jtejej\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/117/configs/tmpb7jtejej\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-13T18:59:59.984885",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-q9k4z",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "5a195d2d50d758a2",  "inputs": {   "hd5_format|in|input": {    "id": "17c12342a55581b5",    "src": "hda",    "uuid": "2985aca6-6e7d-4079-8abc-cb907175c9bf"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739473202.0000000",    "title": "Job End Time",    "value": "2025-02-13 19:00:02"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739473201.0000000",    "title": "Job Start Time",    "value": "2025-02-13 19:00:01"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "49f9e3c921563bdf",    "src": "hda",    "uuid": "eb56e624-f126-4bac-8318-9ada984e605b"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 159, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/2/9/8/dataset_2985aca6-6e7d-4079-8abc-cb907175c9bf.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/2/9/8/dataset_2985aca6-6e7d-4079-8abc-cb907175c9bf.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-13T19:00:12.659440",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 30.326889276504517, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/2/9/8/dataset_2985aca6-6e7d-4079-8abc-cb907175c9bf.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="32.47242474555969">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "83b8e5a7c2447352",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/102/configs/tmpn254cril\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/102/configs/tmpn254cril\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-13T18:56:42.002650",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-8nhfc",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "0857471bf89651d7",  "inputs": {   "hd5_format|in|matrix": {    "id": "83b8e5a7c2447352",    "src": "hda",    "uuid": "4b8d47b6-ea16-499e-965c-547ee02c5b6b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739473004.0000000",    "title": "Job End Time",    "value": "2025-02-13 18:56:44"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739473003.0000000",    "title": "Job Start Time",    "value": "2025-02-13 18:56:43"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "01f00a390c54264c",    "src": "hda",    "uuid": "4f17dd44-7de4-4aa4-b1fc-0e16e5ce163f"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 144, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/4/b/8/dataset_4b8d47b6-ea16-499e-965c-547ee02c5b6b.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/4/b/8/dataset_4b8d47b6-ea16-499e-965c-547ee02c5b6b.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-13T18:56:55.757472",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 32.47242474555969, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/4/b/8/dataset_4b8d47b6-ea16-499e-965c-547ee02c5b6b.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="32.71593475341797">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "663f6319674a3740",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/119/configs/tmpbvagflom\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/119/configs/tmpbvagflom\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-13T19:00:31.406800",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-n2kcr",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "6657c73b63a1dc25",  "inputs": {   "hd5_format|in|matrix": {    "id": "663f6319674a3740",    "src": "hda",    "uuid": "92667b73-eb71-427b-af0c-39de961b0d8e"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739473234.0000000",    "title": "Job End Time",    "value": "2025-02-13 19:00:34"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739473233.0000000",    "title": "Job Start Time",    "value": "2025-02-13 19:00:33"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "8880d3b1e5140452",    "src": "hda",    "uuid": "65d8dcf8-e9c0-4e95-adc1-a49616b65478"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 161, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/9/2/6/dataset_92667b73-eb71-427b-af0c-39de961b0d8e.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/9/2/6/dataset_92667b73-eb71-427b-af0c-39de961b0d8e.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-13T19:00:45.453175",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 32.71593475341797, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/9/2/6/dataset_92667b73-eb71-427b-af0c-39de961b0d8e.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="32.08031129837036">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "2f5ea89ffb369f3d",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/e/1/8/dataset_e187e974-a719-40d3-856b-833a68ee44cd.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/104/configs/tmpn0dh6zwi\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/104/configs/tmpn0dh6zwi\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-13T18:57:13.960592",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-sn9rm",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "f8947458a7a35ae1",  "inputs": {   "hd5_format|in|input": {    "id": "2f5ea89ffb369f3d",    "src": "hda",    "uuid": "e187e974-a719-40d3-856b-833a68ee44cd"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739473037.0000000",    "title": "Job End Time",    "value": "2025-02-13 18:57:17"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739473035.0000000",    "title": "Job Start Time",    "value": "2025-02-13 18:57:15"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "288b94dea3eabf41",    "src": "hda",    "uuid": "5badac0f-59b0-473b-a20c-8244f56a076c"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 146, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-13T18:57:27.857124",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 32.08031129837036, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="28.634618043899536">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "0fb606961b29206f",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/5/b/f/dataset_5bf75b53-e2c5-4d46-8447-0bce9671d3dd.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/121/configs/tmp507_auti\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/121/configs/tmp507_auti\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-13T19:01:02.492468",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-vphxs",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "6ee22fadde411cb2",  "inputs": {   "hd5_format|in|input": {    "id": "0fb606961b29206f",    "src": "hda",    "uuid": "5bf75b53-e2c5-4d46-8447-0bce9671d3dd"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739473265.0000000",    "title": "Job End Time",    "value": "2025-02-13 19:01:05"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739473263.0000000",    "title": "Job Start Time",    "value": "2025-02-13 19:01:03"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "34599b7d75c6bf69",    "src": "hda",    "uuid": "dcfca2e0-8643-4e1d-bc66-b737b1ca00b2"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 163, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-02-13T19:01:14.432795",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 28.634618043899536, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="41.523250341415405">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|coldata": {   "id": "45e94d9a9d8d7b88",   "src": "hda"  },  "hd5_format|filetype": "loom",  "hd5_format|mainmatrix": {   "id": "08ab37eb84e1bdc0",   "src": "hda"  },  "hd5_format|other_files": {   "id": "1c0c8558cf26a41e",   "src": "hda"  },  "hd5_format|rowdata": {   "id": "7f7ccd7a9ca56a5b",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/fb9e030ffae4/anndata_import/tsv_to_loompy.py\u0027 -c \u0027/galaxy/server/database/objects/1/d/1/dataset_1d11db62-db8a-4c39-b513-6d982eea18c8.dat\u0027 -r \u0027/galaxy/server/database/objects/8/2/f/dataset_82f91182-a424-4110-ba55-4e9a9fab038e.dat\u0027 -f \u0027/galaxy/server/database/objects/8/0/c/dataset_80cce684-993d-47b0-b6b0-d9306038df1e.dat\u0027 \u0027/galaxy/server/database/objects/f/c/8/dataset_fc8dc03e-de5a-4b03-967e-7806dd25f898.dat\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-13T18:57:55.229259",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-5rc2b",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "466cdf05185540e9",  "inputs": {   "hd5_format|coldata": {    "id": "45e94d9a9d8d7b88",    "src": "hda",    "uuid": "1d11db62-db8a-4c39-b513-6d982eea18c8"   },   "hd5_format|mainmatrix": {    "id": "08ab37eb84e1bdc0",    "src": "hda",    "uuid": "80cce684-993d-47b0-b6b0-d9306038df1e"   },   "hd5_format|other_files": {    "id": "1c0c8558cf26a41e",    "src": "hda",    "uuid": "fc8dc03e-de5a-4b03-967e-7806dd25f898"   },   "hd5_format|other_files1": {    "id": "1c0c8558cf26a41e",    "src": "hda",    "uuid": "fc8dc03e-de5a-4b03-967e-7806dd25f898"   },   "hd5_format|rowdata": {    "id": "7f7ccd7a9ca56a5b",    "src": "hda",    "uuid": "82f91182-a424-4110-ba55-4e9a9fab038e"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739473079.0000000",    "title": "Job End Time",    "value": "2025-02-13 18:57:59"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739473077.0000000",    "title": "Job Start Time",    "value": "2025-02-13 18:57:57"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "loomdata": {    "id": "bedf2659b441ad94",    "src": "hda",    "uuid": "b65c44eb-bf36-44d4-93fb-f28a8c603887"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 1, \"coldata\": {\"values\": [{\"id\": 150, \"src\": \"hda\"}]}, \"filetype\": \"loom\", \"mainmatrix\": {\"values\": [{\"id\": 148, \"src\": \"hda\"}]}, \"other_files\": {\"values\": [{\"id\": 149, \"src\": \"hda\"}]}, \"rowdata\": {\"values\": [{\"id\": 151, \"src\": \"hda\"}]}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-02-13T18:58:09.497214",  "user_email": "tests@fake.org" }, "output_problems": [  "Output loomdata:  different than expected, difference (using sim_size):\n( /tmp/tmpxku50kudconverted.loom.test v. /tmp/tmp04wri8ccconverted.loom.test )\nFiles /tmp/tmpxku50kudconverted.loom.test=41883b but /tmp/tmp04wri8ccconverted.loom.test=28145b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 41.523250341415405, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="40.70158648490906">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|coldata": {   "id": "0fa1058c102b9d9e",   "src": "hda"  },  "hd5_format|filetype": "loom",  "hd5_format|mainmatrix": {   "id": "d0c6a2db4be85ced",   "src": "hda"  },  "hd5_format|other_files": {   "id": "9f548fdf2982b24b",   "src": "hda"  },  "hd5_format|rowdata": {   "id": "ec0b5ddb99f755fd",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/fb9e030ffae4/anndata_import/tsv_to_loompy.py\u0027 -c \u0027/galaxy/server/database/objects/9/a/c/dataset_9acad8a2-d30e-483b-9159-6b5091a275dc.dat\u0027 -r \u0027/galaxy/server/database/objects/6/9/0/dataset_69099459-5f6f-4ffe-9d1b-a11dd9293fe9.dat\u0027 -f \u0027/galaxy/server/database/objects/e/0/7/dataset_e076b50c-b623-4894-9a6e-d011b44bca0d.dat\u0027 \u0027/galaxy/server/database/objects/c/1/b/dataset_c1ba62ad-bb94-4092-9f54-9be8a9ce7f33.dat\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-02-13T19:01:41.901850",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-df5j5",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "1adb46c423297163",  "inputs": {   "hd5_format|coldata": {    "id": "0fa1058c102b9d9e",    "src": "hda",    "uuid": "9acad8a2-d30e-483b-9159-6b5091a275dc"   },   "hd5_format|mainmatrix": {    "id": "d0c6a2db4be85ced",    "src": "hda",    "uuid": "e076b50c-b623-4894-9a6e-d011b44bca0d"   },   "hd5_format|other_files": {    "id": "9f548fdf2982b24b",    "src": "hda",    "uuid": "c1ba62ad-bb94-4092-9f54-9be8a9ce7f33"   },   "hd5_format|other_files1": {    "id": "9f548fdf2982b24b",    "src": "hda",    "uuid": "c1ba62ad-bb94-4092-9f54-9be8a9ce7f33"   },   "hd5_format|rowdata": {    "id": "ec0b5ddb99f755fd",    "src": "hda",    "uuid": "69099459-5f6f-4ffe-9d1b-a11dd9293fe9"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739473304.0000000",    "title": "Job End Time",    "value": "2025-02-13 19:01:44"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739473303.0000000",    "title": "Job Start Time",    "value": "2025-02-13 19:01:43"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "loomdata": {    "id": "8db78ca3493d5163",    "src": "hda",    "uuid": "274a2078-b336-49ed-8537-bc4da8751dcc"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 1, \"coldata\": {\"values\": [{\"id\": 167, \"src\": \"hda\"}]}, \"filetype\": \"loom\", \"mainmatrix\": {\"values\": [{\"id\": 165, \"src\": \"hda\"}]}, \"other_files\": {\"values\": [{\"id\": 166, \"src\": \"hda\"}]}, \"rowdata\": {\"values\": [{\"id\": 168, \"src\": \"hda\"}]}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-02-13T19:01:55.013705",  "user_email": "tests@fake.org" }, "output_problems": [  "Output loomdata:  different than expected, difference (using sim_size):\n( /tmp/tmpkoynooccconverted.loom.test v. /tmp/tmpcw1vf4xdconverted.loom.test )\nFiles /tmp/tmpkoynooccconverted.loom.test=41883b but /tmp/tmpcw1vf4xdconverted.loom.test=28145b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 40.70158648490906, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="32.55427050590515">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/c/c/0/dataset_cc0150e1-cb0e-4f89-b1ac-2435e9ec2d2f.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="33.58200526237488">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/3/1/e/dataset_31e33b24-fa61-4a9f-9323-200a427be2f2.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_fixploidy (Test #1)" name="0" time="45.77107763290405">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #1)" name="0" time="65.06254172325134">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #3)" name="2" time="49.60586977005005">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Parsing bcftools stats output: /galaxy/server/database/objects/2/d/f/dataset_2dff6c1e-3f15-4357-9207-ae74082bc23a.datPlotting graphs: python3 plot.pyCreating PDF: tectonic summary.tex >plot-vcfstats.log 2>&1Finished: plot_tmp//summary.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #4)" name="3" time="33.03943705558777">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #5)" name="4" time="31.68353533744812">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #1)" name="0" time="37.887476205825806">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #2)" name="1" time="30.89352774620056">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #1)" name="0" time="10.04150915145874">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 10.04150915145874, "tool_id": "deeptools_plot_correlation", "tool_version": "3.5.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #2)" name="1" time="72.19447445869446">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "corData": {   "id": "1a6981faa157b9b0",   "src": "hda"  },  "outFileFormat": "png",  "plotting_type|plotTitle": "Test Plot",  "plotting_type|whatToPlot": "scatterplot",  "removeOutliers": true }, "job": {  "command_line": "plotCorrelation --corData \u0027/galaxy/server/database/objects/7/9/5/dataset_7955d8eb-e5e7-43c6-8ab1-2bb12a732d62.dat\u0027 --plotFile \u0027/galaxy/server/database/objects/d/d/6/dataset_dd661e69-0efb-468f-af2e-2fd1be5f5d57.dat\u0027 --corMethod \u0027spearman\u0027 --whatToPlot \u0027scatterplot\u0027 --plotTitle \u0027Test Plot\u0027   --plotFileFormat \u0027png\u0027 --removeOutliers",  "command_version": "plotCorrelation 3.5.4",  "copied_from_job_id": null,  "create_time": "2025-02-13T18:35:41.807885",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-sp65g",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "797a7905f7f8c220",  "inputs": {   "corData": {    "id": "1a6981faa157b9b0",    "src": "hda",    "uuid": "7955d8eb-e5e7-43c6-8ab1-2bb12a732d62"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739471781.0000000",    "title": "Job End Time",    "value": "2025-02-13 18:36:21"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739471778.0000000",    "title": "Job Start Time",    "value": "2025-02-13 18:36:18"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "21474.0000000",    "title": "Memory Allocated (MB)",    "value": "21474"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outFileName": {    "id": "797a7905f7f8c220",    "src": "hda",    "uuid": "dd661e69-0efb-468f-af2e-2fd1be5f5d57"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "corMethod": "\"spearman\"",   "dbkey": "\"?\"",   "outFileCorMatrix": "false",   "outFileFormat": "\"png\"",   "plotting_type": "{\"__current_case__\": 1, \"log1p\": false, \"plotTitle\": \"Test Plot\", \"whatToPlot\": \"scatterplot\", \"xrange_conditional\": {\"__current_case__\": 1, \"xrange_select\": \"no\"}, \"yrange_conditional\": {\"__current_case__\": 1, \"yrange_select\": \"no\"}}",   "removeOutliers": "true",   "skipZeros": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_correlation/deeptools_plot_correlation/3.5.4+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-02-13T18:36:36.637582",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outFileName:  different than expected, difference (using sim_size):\n( /tmp/tmp50hbxh08plotCorrelation_result2.png v. /tmp/tmpue5tzlhuplotCorrelation_result2.png )\nFiles /tmp/tmp50hbxh08plotCorrelation_result2.png=11943b but /tmp/tmpue5tzlhuplotCorrelation_result2.png=12341b - compare by size (delta=300) failed" ], "status": "failure", "test_index": 1, "time_seconds": 72.19447445869446, "tool_id": "deeptools_plot_correlation", "tool_version": "3.5.4+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #1)" name="0" time="39.87828087806702">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #2)" name="1" time="27.551111459732056">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "allow_outies": true,  "generate_histogram": true,  "layout|forward": {   "id": "8a03d85bf6c1697b",   "src": "hda"  },  "layout|reverse": {   "id": "92ccddad6daa86ae",   "src": "hda"  },  "layout|select_layout": "individual",  "save_log": true }, "job": {  "command_line": "flash --threads=${GALAXY_SLOTS:-1} -m 10 -M 65 -x 0.25 --allow-outies \u0027/galaxy/server/database/objects/9/6/3/dataset_96324edd-0cf0-4c34-9dd2-9d51d02e9635.dat\u0027 \u0027/galaxy/server/database/objects/2/9/d/dataset_29d71e26-d786-482b-b677-3a348ca5264c.dat\u0027 -p 33 --output-suffix=\u0027\u0027 \u003e \u0027/galaxy/server/database/objects/e/0/1/dataset_e012f790-1079-4d50-a29b-72b09dc69b95.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-02-13T18:37:38.697061",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-j5db2",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "b1364f8ecc62a9e4",  "inputs": {   "layout|forward": {    "id": "8a03d85bf6c1697b",    "src": "hda",    "uuid": "96324edd-0cf0-4c34-9dd2-9d51d02e9635"   },   "layout|reverse": {    "id": "92ccddad6daa86ae",    "src": "hda",    "uuid": "29d71e26-d786-482b-b677-3a348ca5264c"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "hist": {    "id": "14bb082ea3a011e4",    "src": "hda",    "uuid": "b30eb3f9-4797-4f5d-bfe1-f3efeee4002d"   },   "hist_in": {    "id": "50c51ce9550b96ab",    "src": "hda",    "uuid": "e84fc4e0-a564-48ba-866c-79610fa569ef"   },   "hist_out": {    "id": "77a0ba84dca7b73e",    "src": "hda",    "uuid": "8eb99ca2-0b76-48b6-a681-e566f2ae4369"   },   "histogram": {    "id": "8c77eeb98c7db992",    "src": "hda",    "uuid": "13fa73cc-e2b6-49b2-9441-b2c1f9a862b2"   },   "histogram_in": {    "id": "43bc79810718b6cf",    "src": "hda",    "uuid": "e97dffda-cd8b-4919-8692-895e31b935bb"   },   "histogram_out": {    "id": "1def4c7e70792720",    "src": "hda",    "uuid": "6471c709-ed13-494d-917f-97f5787b3f4a"   },   "log": {    "id": "60d436b8b9faf8f2",    "src": "hda",    "uuid": "e012f790-1079-4d50-a29b-72b09dc69b95"   },   "merged_paired_reads": {    "id": "21451f441f056fdf",    "src": "hda",    "uuid": "b22f2cbc-bc6f-4f34-b013-ef6104de5077"   },   "unmerged_paired_reads_f": {    "id": "94e023cd440effba",    "src": "hda",    "uuid": "0c300a80-8e78-4321-9172-0dc2dc76cc8d"   },   "unmerged_paired_reads_r": {    "id": "6974a16daaae8848",    "src": "hda",    "uuid": "fc2dd741-b45d-4dc8-9b62-a08daabfd40c"   }  },  "params": {   "__input_ext": "\"input\"",   "allow_outies": "true",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "generate_histogram": "true",   "layout": "{\"__current_case__\": 0, \"forward\": {\"values\": [{\"id\": 15, \"src\": \"hda\"}]}, \"reverse\": {\"values\": [{\"id\": 16, \"src\": \"hda\"}]}, \"select_layout\": \"individual\"}",   "max_mismatch_density": "\"0.25\"",   "max_overlap": "\"65\"",   "min_overlap": "\"10\"",   "save_log": "true"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-02-13T18:37:43.274059",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 27.551111459732056, "tool_id": "flash", "tool_version": "1.2.11.4"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #3)" name="2" time="34.33764910697937">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/c/d/2/dataset_cd2a7d26-b6d3-4287-bb87-0d5ed9d1bd6b.dat[FLASH]     /galaxy/server/database/objects/b/c/a/dataset_bca78e0b-41a8-4de9-9457-5fdaa069c0bb.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=64[FLASH]     Output format:         FASTQ, phred_offset=64[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 200 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      200[FLASH]     Combined pairs:   5[FLASH]     Uncombined pairs: 195[FLASH]     Percent combined: 2.50%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.017 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #4)" name="3" time="33.318605184555054">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #5)" name="4" time="34.05629515647888">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/0/1/4/dataset_0142933f-72c2-4b78-9471-d049e409eada.dat[FLASH]     /galaxy/server/database/objects/9/a/5/dataset_9a586edf-b51d-4b2e-a80f-2b4b7ba40131.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=33[FLASH]     Output format:         FASTQ, phred_offset=33, gzip[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 500 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      500[FLASH]     Combined pairs:   18[FLASH]     Uncombined pairs: 482[FLASH]     Percent combined: 3.60%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.034 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #1)" name="0" time="18.31673836708069">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 18.31673836708069, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #2)" name="1" time="43.80567955970764">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "reads": {   "id": "b3dcc6155b4e19ae",   "src": "hda"  },  "reference_source|ref": {   "id": "96021421e77862e8",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/3/8/b/dataset_38bfc998-0d8a-4d76-8156-30312702c36d.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/c/4/5/dataset_c45fa011-cd67-403b-b324-70ff3e6ea2a2.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/0/c/4/metadata_0c4aee97-c4ff-4722-bfa6-afb3e7b6ecb9.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-02-13T19:13:27.968881",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-4pm64",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "34599b7d75c6bf69",  "inputs": {   "reads": {    "id": "b3dcc6155b4e19ae",    "src": "hda",    "uuid": "c45fa011-cd67-403b-b324-70ff3e6ea2a2"   },   "reference_source|ref": {    "id": "96021421e77862e8",    "src": "hda",    "uuid": "38bfc998-0d8a-4d76-8156-30312702c36d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739474018.0000000",    "title": "Job End Time",    "value": "2025-02-13 19:13:38"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739474015.0000000",    "title": "Job Start Time",    "value": "2025-02-13 19:13:35"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "2b4ab2ab0d2473b2",    "src": "hda",    "uuid": "a5f1ab9e-19a4-4460-82ec-a8a82e78c367"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 0, \"src_qual\": \"\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 225, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-02-13 19:13:35,418]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-02-13 19:13:35,511]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-02-13 19:13:38,818]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelkwyzs2sk/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-02-13 19:13:35,418]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-02-13 19:13:35,511]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-02-13 19:13:38,818]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelkwyzs2sk/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-02-13T19:13:51.447459",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmp0htom4m1call-out1.vcf v. /tmp/tmpf60_ui9ncall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250213\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelkwyzs2sk/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelkwyzs2sk/concat.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelkwyzs2sk/0.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelkwyzs2sk/1.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelkwyzs2sk/2.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelkwyzs2sk/3.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelkwyzs2sk/4.vcf.gz; Date=Thu Feb 13 19:13:38 2025\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 1, "time_seconds": 43.80567955970764, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-02-13 19:13:35,418]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2025-02-13 19:13:35,511]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-02-13 19:13:38,818]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelkwyzs2sk/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #3)" name="2" time="39.69260573387146">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "call_control|source_qual|use_src_qual|def_nm_q": "40",  "call_control|source_qual|use_src_qual|ign_vcf": {   "id": "7c384c82b98af249",   "src": "hda"  },  "call_control|source_qual|use_src_qual|src_qual": "--src-qual",  "reads": {   "id": "58055e3eec89ff1e",   "src": "hda"  },  "reference_source|ref": {   "id": "6111d53db473eef6",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/1/e/6/dataset_1e6f148d-fdee-4c44-a343-e13154b8d372.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/c/9/6/dataset_c9693ef1-be1c-4b73-8bb4-782393c05cf6.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/3/a/5/metadata_3a521eab-9c43-4292-9edd-555fcdc2c917.dat\u0027 reads.bam.bai \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/2/8/2/dataset_282de384-868e-4508-b9d5-ebfb5f05d23e.dat\u0027 ign0.vcf \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --src-qual --ign-vcf \u0027ign0.vcf\u0027 --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-02-13T19:14:14.748900",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-qqvp7",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "ec0b5ddb99f755fd",  "inputs": {   "call_control|source_qual|use_src_qual|ign_vcf": {    "id": "7c384c82b98af249",    "src": "hda",    "uuid": "282de384-868e-4508-b9d5-ebfb5f05d23e"   },   "call_control|source_qual|use_src_qual|ign_vcf1": {    "id": "7c384c82b98af249",    "src": "hda",    "uuid": "282de384-868e-4508-b9d5-ebfb5f05d23e"   },   "reads": {    "id": "58055e3eec89ff1e",    "src": "hda",    "uuid": "c9693ef1-be1c-4b73-8bb4-782393c05cf6"   },   "reference_source|ref": {    "id": "6111d53db473eef6",    "src": "hda",    "uuid": "1e6f148d-fdee-4c44-a343-e13154b8d372"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739474060.0000000",    "title": "Job End Time",    "value": "2025-02-13 19:14:20"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739474056.0000000",    "title": "Job Start Time",    "value": "2025-02-13 19:14:16"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "077f00578b8a3d93",    "src": "hda",    "uuid": "66c0c29f-f557-426d-a917-0cacd683ec40"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 1, \"def_nm_q\": \"40\", \"ign_vcf\": {\"values\": [{\"id\": 229, \"src\": \"hda\"}]}, \"src_qual\": \"--src-qual\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 228, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-02-13 19:14:16,669]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-02-13 19:14:16,695]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-02-13 19:14:20,048]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelgfsl029j/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-02-13 19:14:16,669]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-02-13 19:14:16,695]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-02-13 19:14:20,048]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelgfsl029j/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-02-13T19:14:31.289070",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmp_z5ss_9acall-out1.vcf v. /tmp/tmpe3o69quwcall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250213\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelgfsl029j/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelgfsl029j/concat.vcf.gz /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelgfsl029j/0.vcf.gz /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelgfsl029j/1.vcf.gz /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelgfsl029j/2.vcf.gz /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelgfsl029j/3.vcf.gz /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelgfsl029j/4.vcf.gz; Date=Thu Feb 13 19:14:20 2025\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 2, "time_seconds": 39.69260573387146, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-02-13 19:14:16,669]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2025-02-13 19:14:16,695]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-02-13 19:14:20,048]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelgfsl029j/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #4)" name="3" time="35.04625487327576">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "b640e43922e4a62a",   "src": "hda"  },  "reference_source|ref": {   "id": "e83872822cdba25d",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/a/3/3/dataset_a33f6728-9320-4094-9496-afd461b24692.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/7/f/6/dataset_7f62e4f3-7e06-4ad5-b6b5-c5e7fed5eb31.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/e/e/1/metadata_ee1c7582-b768-4425-988d-319e91062753.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-02-13T19:14:50.306955",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-rd45n",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "70dae57f096b47fc",  "inputs": {   "reads": {    "id": "b640e43922e4a62a",    "src": "hda",    "uuid": "7f62e4f3-7e06-4ad5-b6b5-c5e7fed5eb31"   },   "reference_source|ref": {    "id": "e83872822cdba25d",    "src": "hda",    "uuid": "a33f6728-9320-4094-9496-afd461b24692"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739474095.0000000",    "title": "Job End Time",    "value": "2025-02-13 19:14:55"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739474092.0000000",    "title": "Job Start Time",    "value": "2025-02-13 19:14:52"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "bf42e1da47382bd8",    "src": "hda",    "uuid": "5fe65fad-e505-47ea-b782-91cf7113fc60"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 232, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-02-13 19:14:52,753]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-02-13 19:14:52,912]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-02-13 19:14:55,341]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-02-13 19:14:52,753]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-02-13 19:14:52,912]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-02-13 19:14:55,341]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2025-02-13T19:15:06.308643",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmp7um_nezzcall-out2.vcf v. /tmp/tmpl2yobplvcall-out2.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallelg3dmyvln/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250213\n+##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallel5r8msk5t/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,6 +10,9 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallel5r8msk5t/concat.vcf.gz /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallel5r8msk5t/0.vcf.gz /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallel5r8msk5t/1.vcf.gz /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallel5r8msk5t/2.vcf.gz /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallel5r8msk5t/3.vcf.gz /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallel5r8msk5t/4.vcf.gz; Date=Thu Feb 13 19:14:55 2025\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t815\t.\tA\tG\t0\t.\tDP=665;AF=0.003008;SB=6;DP4=333,311,0,2\n pBR322\t861\t.\tA\tC\t0\t.\tDP=946;AF=0.002114;SB=3;DP4=447,497,0,2\n@@ -17,11 +21,11 @@\n pBR322\t1068\t.\tT\tG\t0\t.\tDP=1774;AF=0.000564;SB=3;DP4=853,920,1,0\n pBR322\t1084\t.\tG\tT\t0\t.\tDP=1789;AF=0.000559;SB=3;DP4=875,913,1,0\n pBR322\t1113\t.\tT\tA\t0\t.\tDP=1784;AF=0.000561;SB=0;DP4=885,898,0,1\n-pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n pBR322\t1193\t.\tG\tA\t0\t.\tDP=1698;AF=0.000589;SB=3;DP4=865,832,0,1\n pBR322\t1218\t.\tA\tC\t0\t.\tDP=1708;AF=0.000585;SB=3;DP4=875,831,0,1\n pBR322\t1230\t.\tT\tC\t0\t.\tDP=1759;AF=0.000569;SB=3;DP4=907,850,0,1\n pBR322\t1256\t.\tA\tG\t0\t.\tDP=1746;AF=0.000573;SB=0;DP4=902,842,1,0\n pBR322\t1498\t.\tC\tG\t0\t.\tDP=1195;AF=0.000837;SB=3;DP4=588,606,1,0\n pBR322\t1503\t.\tT\tG\t0\t.\tDP=1156;AF=0.000865;SB=3;DP4=563,592,1,0\n-pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.000880;SB=0;DP4=560,576,0,1\n+pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.00088;SB=0;DP4=560,576,0,1\n" ], "status": "failure", "test_index": 3, "time_seconds": 35.04625487327576, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-02-13 19:14:52,753]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2025-02-13 19:14:52,912]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-02-13 19:14:55,341]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #5)" name="4" time="38.479881286621094">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "9cbac6756c8d61d2",   "src": "hda"  },  "reference_source|ref": {   "id": "60ee12bd905170cb",   "src": "hda"  },  "reference_source|ref_selector": "history",  "variant_types": "--call-indels --only-indels" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/3/3/7/dataset_3372c52a-0246-402c-8f01-5488455e2edf.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/a/5/a/dataset_a5a76906-8e2e-44a6-8c54-6e32d2e99e6c.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/a/a/0/metadata_aa04833a-936a-4c23-982b-44eab3323636.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf --call-indels --only-indels    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-02-13T19:15:27.454939",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-s4f8x",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "ee2988bd8f10b4d3",  "inputs": {   "reads": {    "id": "9cbac6756c8d61d2",    "src": "hda",    "uuid": "a5a76906-8e2e-44a6-8c54-6e32d2e99e6c"   },   "reference_source|ref": {    "id": "60ee12bd905170cb",    "src": "hda",    "uuid": "3372c52a-0246-402c-8f01-5488455e2edf"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739474133.0000000",    "title": "Job End Time",    "value": "2025-02-13 19:15:33"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739474129.0000000",    "title": "Job Start Time",    "value": "2025-02-13 19:15:29"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "280090d606124aac",    "src": "hda",    "uuid": "3af85da8-bd12-4978-bed6-144d46fdf913"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 235, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"--call-indels --only-indels\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-02-13 19:15:29,593]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-02-13 19:15:29,623]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2025-02-13 19:15:33,045]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-02-13 19:15:29,593]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-02-13 19:15:29,623]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2025-02-13 19:15:33,045]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2025-02-13T19:15:44.866756",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmptglf0g03indel-call-out.vcf v. /tmp/tmp3_e66qh5indel-call-out.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/31/working/pp-tmp/lofreq2_call_parallel4gfado3q/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250213\n+##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/174/tmp/lofreq2_call_parallelru6zap3a/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,13 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/174/tmp/lofreq2_call_parallelru6zap3a/concat.vcf.gz /galaxy/server/database/jobs_directory/000/174/tmp/lofreq2_call_parallelru6zap3a/0.vcf.gz /galaxy/server/database/jobs_directory/000/174/tmp/lofreq2_call_parallelru6zap3a/1.vcf.gz /galaxy/server/database/jobs_directory/000/174/tmp/lofreq2_call_parallelru6zap3a/2.vcf.gz /galaxy/server/database/jobs_directory/000/174/tmp/lofreq2_call_parallelru6zap3a/3.vcf.gz /galaxy/server/database/jobs_directory/000/174/tmp/lofreq2_call_parallelru6zap3a/4.vcf.gz; Date=Thu Feb 13 19:15:32 2025\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t725\t.\tG\tGN\t0\t.\tDP=46;AF=0.021739;SB=0;DP4=22,23,0,1;INDEL;HRUN=1\n pBR322\t746\t.\tA\tAN\t0\t.\tDP=225;AF=0.004444;SB=3;DP4=116,108,0,1;INDEL;HRUN=1\n pBR322\t747\t.\tT\tTN\t0\t.\tDP=230;AF=0.004348;SB=3;DP4=118,111,0,1;INDEL;HRUN=1\n pBR322\t751\t.\tG\tGN\t0\t.\tDP=255;AF=0.003922;SB=3;DP4=128,126,0,1;INDEL;HRUN=1\n-pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.001650;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n+pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.00165;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n pBR322\t943\t.\tC\tCCG\t0\t.\tDP=1465;AF=0.000683;SB=0;DP4=709,755,0,1;INDEL;HRUN=1\n-pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.000570;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n+pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.00057;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n pBR322\t1271\t.\tA\tAN\t0\t.\tDP=1743;AF=0.000574;SB=0;DP4=890,855,1,0;INDEL;HRUN=2\n pBR322\t1376\t.\tA\tANN\t0\t.\tDP=1691;AF=0.000591;SB=3;DP4=849,843,0,1;INDEL;HRUN=1\n" ], "status": "failure", "test_index": 4, "time_seconds": 38.479881286621094, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-02-13 19:15:29,593]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2025-02-13 19:15:29,623]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 0Number of indel tests performed: 9INFO [2025-02-13 19:15:33,045]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #1)" name="0" time="70.53683686256409">
        
            
            <system-out><![CDATA[
            [18:43:26 - DataStre] Loaded sample register.[18:43:26 - DataStre] Loaded sample register.[18:43:26 - DataIndx] Loaded 1/2 (50.00%) sample files.[18:43:26 - DataIndx] Loaded 2/2 (100.00%) sample files.[18:43:26 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:43:26 - Variants] Processing NC_045512.2:0-.[18:43:26 - TrimOlap] NC_045512.2:30.0-2939.0 is contained within NC_045512.2:30.0-2939.0, skipping.
            ]]></system-out>
            <system-err><![CDATA[
            [18:43:28 - Annotate] Getting chrom coordinates[18:43:28 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:43:28 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #2)" name="1" time="17.148004055023193">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 17.148004055023193, "tool_id": "medaka_variant", "tool_version": "1.7.2+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #3)" name="2" time="34.225021839141846">
        
            
            <system-out><![CDATA[
            [18:44:29 - DataStre] Loaded sample register.[18:44:29 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:44:29 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:44:29 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_times (Test #1)" name="0" time="59.99071288108826">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="57.70306348800659">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="33.80358529090881">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="35.68750834465027">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="35.57353591918945">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="35.79478859901428">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="35.66186332702637">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="36.19098734855652">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="34.689841747283936">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="40.114394426345825">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="39.876004219055176">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #1)" name="0" time="52.516252517700195">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.0011416sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 4.165e-05sWriting sequence data to file . . . doneElapsed time: 6.784e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00012852sdoneElapsed time: 0.00262323sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00104582sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ threads ] => { 8 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-02-13 18:46:21.640] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-02-13 18:46:21.692] [jointLog] [info] Loading Quasi index[2025-02-13 18:46:21.695] [jointLog] [info] done[2025-02-13 18:46:21.713] [jointLog] [info] Gathered fragment lengths from all threads[2025-02-13 18:46:21.713] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-02-13 18:46:21.714] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-02-13 18:46:21.721] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-02-13 18:46:21.721] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-02-13 18:46:21.722] [jointLog] [info] Starting optimizer:[2025-02-13 18:46:21.722] [jointLog] [info] Optimizing over 21 equivalence classes[2025-02-13 18:46:21.722] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-02-13 18:46:21.722] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687[2025-02-13 18:46:21.722] [jointLog] [info] Finished optimizer[2025-02-13 18:46:21.722] [jointLog] [info] writing output [2025-02-13 18:46:21.693] [stderrLog] [info] Loading Position Hash[2025-02-13 18:46:21.694] [stderrLog] [info] Loading Suffix Array [2025-02-13 18:46:21.694] [stderrLog] [info] Loading Transcript Info [2025-02-13 18:46:21.695] [stderrLog] [info] Loading Rank-Select Bit Array[2025-02-13 18:46:21.695] [stderrLog] [info] There were 15 set bits in the bit array[2025-02-13 18:46:21.695] [stderrLog] [info] Computing transcript lengths[2025-02-13 18:46:21.695] [stderrLog] [info] Waiting to finish loading hash[2025-02-13 18:46:21.695] [stderrLog] [info] Done loading index
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #2)" name="1" time="11.036935329437256">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 11.036935329437256, "tool_id": "sailfish", "tool_version": "0.10.1.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="sailfish (Test #3)" name="2" time="40.66098380088806">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00112009sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 3.565e-05sWriting sequence data to file . . . doneElapsed time: 9.001e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.000121429sdoneElapsed time: 0.00270415sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.0010677sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 8 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-02-13 18:47:14.533] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-02-13 18:47:14.586] [jointLog] [info] Loading Quasi index[2025-02-13 18:47:14.589] [jointLog] [info] done[2025-02-13 18:47:14.607] [jointLog] [info] Gathered fragment lengths from all threads[2025-02-13 18:47:14.607] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-02-13 18:47:14.608] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-02-13 18:47:14.617] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-02-13 18:47:14.617] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-02-13 18:47:14.617] [jointLog] [info] Starting optimizer:[2025-02-13 18:47:14.617] [jointLog] [info] Optimizing over 21 equivalence classes[2025-02-13 18:47:14.617] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-02-13 18:47:14.617] [jointLog] [info] iteration 50, recomputing effective lengths[2025-02-13 18:47:14.619] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2025-02-13 18:47:14.619] [jointLog] [info] Finished optimizer[2025-02-13 18:47:14.619] [jointLog] [info] writing output [2025-02-13 18:47:14.587] [stderrLog] [info] Loading Suffix Array [2025-02-13 18:47:14.587] [stderrLog] [info] Loading Position Hash[2025-02-13 18:47:14.588] [stderrLog] [info] Loading Transcript Info [2025-02-13 18:47:14.588] [stderrLog] [info] Loading Rank-Select Bit Array[2025-02-13 18:47:14.588] [stderrLog] [info] There were 15 set bits in the bit array[2025-02-13 18:47:14.588] [stderrLog] [info] Computing transcript lengths[2025-02-13 18:47:14.588] [stderrLog] [info] Waiting to finish loading hash[2025-02-13 18:47:14.589] [stderrLog] [info] Done loading index
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #4)" name="3" time="42.3224663734436">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00083202sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 2.83e-05sWriting sequence data to file . . . doneElapsed time: 4.691e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00010477sdoneElapsed time: 0.0147765sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00100243sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 8 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ geneMap ] => { ./geneMap.tabular }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-02-13 18:47:56.882] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-02-13 18:47:56.936] [jointLog] [info] Loading Quasi index[2025-02-13 18:47:56.940] [jointLog] [info] done[2025-02-13 18:47:56.958] [jointLog] [info] Gathered fragment lengths from all threads[2025-02-13 18:47:56.958] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-02-13 18:47:56.959] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-02-13 18:47:56.967] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-02-13 18:47:56.967] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-02-13 18:47:56.967] [jointLog] [info] Starting optimizer:[2025-02-13 18:47:56.968] [jointLog] [info] Optimizing over 21 equivalence classes[2025-02-13 18:47:56.968] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-02-13 18:47:56.968] [jointLog] [info] iteration 50, recomputing effective lengths[2025-02-13 18:47:56.969] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2025-02-13 18:47:56.969] [jointLog] [info] Finished optimizer[2025-02-13 18:47:56.969] [jointLog] [info] writing output [2025-02-13 18:47:56.938] [stderrLog] [info] Loading Suffix Array [2025-02-13 18:47:56.938] [stderrLog] [info] Loading Position Hash[2025-02-13 18:47:56.939] [stderrLog] [info] Loading Transcript Info [2025-02-13 18:47:56.939] [stderrLog] [info] Loading Rank-Select Bit Array[2025-02-13 18:47:56.939] [stderrLog] [info] There were 15 set bits in the bit array[2025-02-13 18:47:56.940] [stderrLog] [info] Computing transcript lengths[2025-02-13 18:47:56.940] [stderrLog] [info] Waiting to finish loading hash[2025-02-13 18:47:56.940] [stderrLog] [info] Done loading indexComputing gene-level abundance estimatesThere were 3 transcripts mapping to 3 genesWARNING: couldn't find transcript named [NR_031764]; returning transcript  as it's own genedoneAggregating expressions to gene level . . . done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #1)" name="0" time="42.55131936073303">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #2)" name="1" time="10.739792108535767">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 10.739792108535767, "tool_id": "samtools_mpileup", "tool_version": "2.1.7"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #3)" name="2" time="38.93594312667847">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #4)" name="3" time="31.720192670822144">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #5)" name="4" time="31.94115400314331">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #6)" name="5" time="32.892590045928955">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="11.401115894317627">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.401115894317627, "tool_id": "samtools_phase", "tool_version": "2.0.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="37.296037673950195">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="36.45940947532654">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="33.83242702484131">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="33.1613073348999">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="32.4472815990448">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #1)" name="0" time="75.51606917381287">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "f2cfe085418e9685",   "src": "hda"  },  "advanced_common|show_log": true,  "method|exclude_highly_expressed|exclude_highly_expressed": "False",  "method|key_added": "n_counts",  "method|layer_norm": "None",  "method|layers": "all",  "method|method": "pp.normalize_total" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/8/5/a/dataset_85a46216-b936-47b7-acf6-6bae876a49eb.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/150/configs/tmpo60_f7k8\u0027 \u003e \u0027/galaxy/server/database/objects/e/2/6/dataset_e2663c96-0868-41cf-a385-7630f7ce043f.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/150/configs/tmpo60_f7k8\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/e/2/6/dataset_e2663c96-0868-41cf-a385-7630f7ce043f.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/e/2/6/dataset_e2663c96-0868-41cf-a385-7630f7ce043f.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-02-13T19:09:15.768763",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-zxzzk",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "45e94d9a9d8d7b88",  "inputs": {   "adata": {    "id": "f2cfe085418e9685",    "src": "hda",    "uuid": "85a46216-b936-47b7-acf6-6bae876a49eb"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739473792.0000000",    "title": "Job End Time",    "value": "2025-02-13 19:09:52"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739473788.0000000",    "title": "Job Start Time",    "value": "2025-02-13 19:09:48"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "2d8ec42a78d9fc30",    "src": "hda",    "uuid": "5de8ecce-1c19-49ff-8fa3-b021204dee77"   },   "hidden_output": {    "id": "3070070d5b51511d",    "src": "hda",    "uuid": "e2663c96-0868-41cf-a385-7630f7ce043f"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 0, \"exclude_highly_expressed\": {\"__current_case__\": 1, \"exclude_highly_expressed\": \"False\"}, \"key_added\": \"n_counts\", \"layer_norm\": \"None\", \"layers\": \"all\", \"method\": \"pp.normalize_total\", \"target_sum\": \"\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2025-02-13T19:10:12.509997",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.normalize_total.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 75.51606917381287, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #2)" name="1" time="36.2204532623291">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "48ca0e82d8e8b5f3",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_zheng17",  "method|n_top_genes": "1000" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/a/0/b/dataset_a0b69906-2f4e-4ee4-8c88-10375aa24e04.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/152/configs/tmp1h9muc4c\u0027 \u003e \u0027/galaxy/server/database/objects/b/9/7/dataset_b97032fb-69a8-48fa-97fc-bce7a839b80e.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/152/configs/tmp1h9muc4c\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/b/9/7/dataset_b97032fb-69a8-48fa-97fc-bce7a839b80e.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/b/9/7/dataset_b97032fb-69a8-48fa-97fc-bce7a839b80e.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-02-13T19:10:31.970760",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-6hclj",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "bedf2659b441ad94",  "inputs": {   "adata": {    "id": "48ca0e82d8e8b5f3",    "src": "hda",    "uuid": "a0b69906-2f4e-4ee4-8c88-10375aa24e04"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739473837.0000000",    "title": "Job End Time",    "value": "2025-02-13 19:10:37"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739473833.0000000",    "title": "Job Start Time",    "value": "2025-02-13 19:10:33"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "ab72d2580c68304b",    "src": "hda",    "uuid": "f824da52-52f8-49d0-9c99-3692e1e4afee"   },   "hidden_output": {    "id": "2273f51cc844ccef",    "src": "hda",    "uuid": "b97032fb-69a8-48fa-97fc-bce7a839b80e"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 1, \"log\": true, \"method\": \"pp.recipe_zheng17\", \"n_top_genes\": \"1000\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "update_time": "2025-02-13T19:10:48.462543",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out:  different than expected, difference (using sim_size):\n( /tmp/tmp26br0t1vpp.recipe_zheng17.random-randint.h5ad v. /tmp/tmpxfm1lc87pp.recipe_zheng17.random-randint.h5ad )\nFiles /tmp/tmp26br0t1vpp.recipe_zheng17.random-randint.h5ad=487656b but /tmp/tmpxfm1lc87pp.recipe_zheng17.random-randint.h5ad=4114792b - compare by size (delta=1000000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 36.2204532623291, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 998[obs]-    n_counts_all[var]-    n_counts-    mean-    std[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #3)" name="2" time="10.984516382217407">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 10.984516382217407, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #4)" name="3" time="34.72825479507446">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "4971c1338f08935c",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_seurat" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/9/b/b/dataset_9bb7adc1-1605-4cd6-91d3-98938b4f005d.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/155/configs/tmpi4z7k4yj\u0027 \u003e \u0027/galaxy/server/database/objects/e/8/5/dataset_e855f200-2732-4445-b5c1-7597d4aef69c.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/155/configs/tmpi4z7k4yj\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/e/8/5/dataset_e855f200-2732-4445-b5c1-7597d4aef69c.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/e/8/5/dataset_e855f200-2732-4445-b5c1-7597d4aef69c.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-02-13T19:11:18.861426",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-8v2d4",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "156bfdd35c5db2fa",  "inputs": {   "adata": {    "id": "4971c1338f08935c",    "src": "hda",    "uuid": "9bb7adc1-1605-4cd6-91d3-98938b4f005d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739473884.0000000",    "title": "Job End Time",    "value": "2025-02-13 19:11:24"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739473880.0000000",    "title": "Job Start Time",    "value": "2025-02-13 19:11:20"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "443f4a3182df28df",    "src": "hda",    "uuid": "54b21769-18dd-4418-80cc-a3c4d7e9685b"   },   "hidden_output": {    "id": "c3b4288ac5b0168e",    "src": "hda",    "uuid": "e855f200-2732-4445-b5c1-7597d4aef69c"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 3, \"log\": true, \"method\": \"pp.recipe_seurat\"}"  },  "state": "ok",  "stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "update_time": "2025-02-13T19:11:34.694499",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_seurat.recipe_zheng17.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 34.72825479507446, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1[obs]-    n_counts_all-    n_genes[var]-    n_counts-    mean-    std-    n_cells[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: adata.X seems to be already log-transformed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #5)" name="4" time="35.37180781364441">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "157e1adb9fc08553",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "all_genes",  "method|t": "-1" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/9/c/1/dataset_9c1c9da7-d18f-4fa6-a7f0-e5c2dda99c49.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/157/configs/tmpuz62avmv\u0027 \u003e \u0027/galaxy/server/database/objects/6/3/3/dataset_6338064d-2d53-422b-94f8-6ad4a9ece5ff.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/157/configs/tmpuz62avmv\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/6/3/3/dataset_6338064d-2d53-422b-94f8-6ad4a9ece5ff.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/6/3/3/dataset_6338064d-2d53-422b-94f8-6ad4a9ece5ff.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-02-13T19:11:54.183785",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-79cgl",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "64f2647ad169990c",  "inputs": {   "adata": {    "id": "157e1adb9fc08553",    "src": "hda",    "uuid": "9c1c9da7-d18f-4fa6-a7f0-e5c2dda99c49"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739473919.0000000",    "title": "Job End Time",    "value": "2025-02-13 19:11:59"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739473915.0000000",    "title": "Job Start Time",    "value": "2025-02-13 19:11:55"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "726db8b372cb6475",    "src": "hda",    "uuid": "ac042517-4d85-4ac7-8cf7-20c523529a8a"   },   "hidden_output": {    "id": "b9d157916a3330d2",    "src": "hda",    "uuid": "6338064d-2d53-422b-94f8-6ad4a9ece5ff"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"all_genes\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"-1\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2025-02-13T19:12:10.267183",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.all_genes.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 35.37180781364441, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #6)" name="5" time="34.43766784667969">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "687a1be37c710e99",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "pca_only",  "method|t": "3" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/4/8/8/dataset_48824050-98e7-4b08-9cbb-ad8ad962f021.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/159/configs/tmps2dsj3nh\u0027 \u003e \u0027/galaxy/server/database/objects/c/b/9/dataset_cb9c141f-c723-4bca-bb6c-0fa2510d45ab.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/159/configs/tmps2dsj3nh\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/c/b/9/dataset_cb9c141f-c723-4bca-bb6c-0fa2510d45ab.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/c/b/9/dataset_cb9c141f-c723-4bca-bb6c-0fa2510d45ab.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-02-13T19:12:28.678472",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-67xvj",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "17c12342a55581b5",  "inputs": {   "adata": {    "id": "687a1be37c710e99",    "src": "hda",    "uuid": "48824050-98e7-4b08-9cbb-ad8ad962f021"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1739473954.0000000",    "title": "Job End Time",    "value": "2025-02-13 19:12:34"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1739473950.0000000",    "title": "Job Start Time",    "value": "2025-02-13 19:12:30"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "78bcdd4d087a1694",    "src": "hda",    "uuid": "e08dbd40-5773-41c3-9e0a-0174b3e0d1db"   },   "hidden_output": {    "id": "804ae346d4e021b1",    "src": "hda",    "uuid": "cb9c141f-c723-4bca-bb6c-0fa2510d45ab"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"pca_only\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"3\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "update_time": "2025-02-13T19:12:44.532386",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.pca_only.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 5, "time_seconds": 34.43766784667969, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot[obsm]-    X_magic
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.13493633270263672">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.13493633270263672, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.13531041145324707">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.13531041145324707, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="snpeff_sars_cov_2 (Test #1)" name="0" time="58.16157341003418">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #1)" name="0" time="38.30237913131714">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #2)" name="1" time="31.58739161491394">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #1)" name="0" time="31.808687448501587">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #2)" name="1" time="31.197998523712158">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #3)" name="2" time="31.962350845336914">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #1)" name="0" time="55.55356240272522">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #2)" name="1" time="34.97094511985779">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #3)" name="2" time="28.2130925655365">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "fdr_col": "4",  "header": "yes",  "input": {   "id": "d9c8a5bfec96ba9e",   "src": "hda"  },  "label_col": "1",  "labels|label_file": {   "id": "c3d0fd5468352acf",   "src": "hda"  },  "labels|label_select": "file",  "lfc_col": "2",  "lfc_thresh": "0",  "out_options|rscript_out": true,  "pval_col": "3" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/jobs_directory/000/30/configs/tmp9njso1ph\u0027 rscript.txt \u0026\u0026 Rscript \u0027/galaxy/server/database/jobs_directory/000/30/configs/tmp9njso1ph\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-02-13T18:41:18.447657",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-mrxdg",  "galaxy_version": "24.1",  "handler": null,  "history_id": "7194aaf8282d4b8b",  "id": "4c0457bd0f3cac9b",  "inputs": {   "input": {    "id": "d9c8a5bfec96ba9e",    "src": "hda",    "uuid": "8d4dcca2-e251-4136-8f78-5685a9e25d28"   },   "labels|label_file": {    "id": "c3d0fd5468352acf",    "src": "hda",    "uuid": "3a00b1fe-0083-4ac9-aadc-27ed581faeb4"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "plot": {    "id": "d132f79a72326a47",    "src": "hda",    "uuid": "7114b752-f7ff-435c-88dc-7e0f227f0c85"   },   "rscript": {    "id": "580161cb315f1320",    "src": "hda",    "uuid": "02f6d133-33f3-4bc7-b31e-cf5278e73e6b"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "fdr_col": "\"4\"",   "header": "\"yes\"",   "label_col": "\"1\"",   "labels": "{\"__current_case__\": 1, \"label_file\": {\"values\": [{\"id\": 54, \"src\": \"hda\"}]}, \"label_select\": \"file\"}",   "lfc_col": "\"2\"",   "lfc_thresh": "\"0.0\"",   "out_options": "{\"rscript_out\": true}",   "plot_options": "{\"boxes\": false, \"legend\": null, \"legend_labs\": \"Down,Not Sig,Up\", \"title\": null, \"xlab\": null, \"xmax\": \"\", \"xmin\": \"\", \"ylab\": null, \"ymax\": \"\"}",   "pval_col": "\"3\"",   "shape_col": null,   "shape_or_facet": null,   "signif_thresh": "\"0.05\""  },  "state": "error",  "stderr": "Warning message:\nIn Sys.setlocale(\"LC_MESSAGES\", \"en_US.UTF-8\") :\n  OS reports request to set locale to \"en_US.UTF-8\" cannot be honored\n",  "stdout": "null device \n          1 \nR version 4.0.5 (2021-03-31)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: Debian GNU/Linux 10 (buster)\n\nMatrix products: default\nBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.so\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  \n\nloaded via a namespace (and not attached):\n [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0   \n [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0     \n [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     \n[13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 \n[17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     \n[21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    \n[25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 \n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot/0.0.7",  "tool_stderr": "Warning message:\nIn Sys.setlocale(\"LC_MESSAGES\", \"en_US.UTF-8\") :\n  OS reports request to set locale to \"en_US.UTF-8\" cannot be honored\n",  "tool_stdout": "null device \n          1 \nR version 4.0.5 (2021-03-31)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: Debian GNU/Linux 10 (buster)\n\nMatrix products: default\nBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.so\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  \n\nloaded via a namespace (and not attached):\n [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0   \n [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0     \n [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     \n[13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 \n[17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     \n[21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    \n[25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 \n",  "update_time": "2025-02-13T18:41:26.605570",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot/0.0.7, exit_code: None, stderr: Warning message:\nIn Sys.setlocale(\"LC_MESSAGES\", \"en_US.UTF-8\") :\n  OS reports request to set locale to \"en_US.UTF-8\" cannot be honored\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot/0.0.7, exit_code: None, stderr: Warning message:\nIn Sys.setlocale(\"LC_MESSAGES\", \"en_US.UTF-8\") :\n  OS reports request to set locale to \"en_US.UTF-8\" cannot be honored\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot/0.0.7, exit_code: None, stderr: Warning message:\nIn Sys.setlocale(\"LC_MESSAGES\", \"en_US.UTF-8\") :\n  OS reports request to set locale to \"en_US.UTF-8\" cannot be honored\n." ], "status": "failure", "test_index": 2, "time_seconds": 28.2130925655365, "tool_id": "volcanoplot", "tool_version": "0.0.7"}
                ]]></error>
            
            <system-out><![CDATA[
            null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #4)" name="3" time="34.5129554271698">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #5)" name="4" time="35.35636115074158">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
</testsuite>