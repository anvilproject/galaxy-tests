{"version": "0.1", "suitename": "Galaxy Tool Tests", "results": {"total": 192, "errors": 2, "failures": 28, "skips": 6}, "tests": [{"id": "bcftools_plugin_counts/1.15.1+galaxy4-0", "has_data": true, "data": {"tool_id": "bcftools_plugin_counts", "tool_version": "1.15.1+galaxy4", "test_index": 0, "time_seconds": 43.623929262161255, "inputs": {"input_file": {"src": "hda", "id": "22979ba3261f6ccd"}}, "job": {"model_class": "Job", "id": "0742ec05984111ee", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_counts/bcftools_plugin_counts/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:43:41.749741", "update_time": "2025-03-10T08:44:05.438287", "galaxy_version": "24.2", "external_id": "gxy-cnckq", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/1/1/6/dataset_116b85f2-3f8a-4e06-a985-70a8096adbfe.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools plugin counts                 input.vcf.gz | tee counts_file.txt && sed 's/^.* \\([a-zA-Z]*\\):[ ]*\\([0-9]*\\)$/\\1 \\2/' counts_file.txt | python /galaxy/server/database/jobs_directory/000/508/configs/tmpm122bepf > '/galaxy/server/database/jobs_directory/000/508/outputs/dataset_f524da17-d761-4d84-81dd-489e9efd224c.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"sec_restrict": "{\"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "22979ba3261f6ccd", "src": "hda", "uuid": "116b85f2-3f8a-4e06-a985-70a8096adbfe"}}, "outputs": {"output_file": {"id": "1d8483951118a560", "src": "hda", "uuid": "f524da17-d761-4d84-81dd-489e9efd224c"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Number of samples: 3\nNumber of SNPs:    11\nNumber of INDELs:  3\nNumber of MNPs:    0\nNumber of others:  0\nNumber of sites:   15\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "Number of samples: 3\nNumber of SNPs:    11\nNumber of INDELs:  3\nNumber of MNPs:    0\nNumber of others:  0\nNumber of sites:   15\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-4046a3b419fc1d57d709b7a143645d599908d9e4:611c5ed00120482fe681399c9f103740803fdcb2-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-4046a3b419fc1d57d709b7a143645d599908d9e4:611c5ed00120482fe681399c9f103740803fdcb2-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:43:51", "plugin": "core", "name": "start_epoch", "raw_value": "1741596231.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:43:52", "plugin": "core", "name": "end_epoch", "raw_value": "1741596232.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-0", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 0, "time_seconds": 39.57082962989807, "inputs": {"input_file": {"src": "hda", "id": "66fa419dc5f51ff6"}, "sec_subset|samples": "NA00002", "sec_filter|min_ac": "1", "sec_filter|max_ac": "1", "sec_filter|types": "snps", "output_type": "v"}, "job": {"model_class": "Job", "id": "4063e3cc1a680976", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:44:26.282529", "update_time": "2025-03-10T08:44:46.434923", "galaxy_version": "24.2", "external_id": "gxy-jcvmv", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/3/0/2/dataset_3028e7d4-1aa1-42b9-b840-7dfe40daedf5.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view     --samples 'NA00002'     --min-ac 1 --max-ac 1 --types \"snps\"                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/jobs_directory/000/510/outputs/dataset_4c7d6758-328b-4838-9c2f-4019c123f162.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00002\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"1\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"1\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": \"snps\", \"uncalled\": null}", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "output_type": "\"v\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "66fa419dc5f51ff6", "src": "hda", "uuid": "3028e7d4-1aa1-42b9-b840-7dfe40daedf5"}}, "outputs": {"output_file": {"id": "8aac68423cd26d6f", "src": "hda", "uuid": "4c7d6758-328b-4838-9c2f-4019c123f162"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:44:33", "plugin": "core", "name": "start_epoch", "raw_value": "1741596273.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:44:33", "plugin": "core", "name": "end_epoch", "raw_value": "1741596273.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-1", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 1, "time_seconds": 32.838239431381226, "inputs": {"input_file": {"src": "hda", "id": "924694d3429ad689"}, "sec_subset|samples": "NA00002", "sec_filter|min_ac": "1", "sec_filter|max_ac": "1", "sec_filter|types": "snps", "output_type": "v"}, "job": {"model_class": "Job", "id": "07128b45097f8981", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:45:05.590926", "update_time": "2025-03-10T08:45:19.332505", "galaxy_version": "24.2", "external_id": "gxy-csbx7", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     ln -s '/galaxy/server/database/objects/7/0/5/dataset_70586816-a67a-429c-ad46-e5f0e2eb18c9.dat' input.bcf && ln -s '/galaxy/server/database/objects/_metadata_files/b/7/a/metadata_b7abf953-57e1-477d-b4c9-e918eef04fd0.dat' input.bcf.csi &&            bcftools view     --samples 'NA00002'     --min-ac 1 --max-ac 1 --types \"snps\"                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.bcf  > '/galaxy/server/database/jobs_directory/000/512/outputs/dataset_081dc80c-03ab-4684-abc6-207ac63614d2.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00002\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"1\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"1\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": \"snps\", \"uncalled\": null}", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "output_type": "\"v\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "924694d3429ad689", "src": "hda", "uuid": "70586816-a67a-429c-ad46-e5f0e2eb18c9"}}, "outputs": {"output_file": {"id": "16d51f96c390758b", "src": "hda", "uuid": "081dc80c-03ab-4684-abc6-207ac63614d2"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:45:07", "plugin": "core", "name": "start_epoch", "raw_value": "1741596307.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:45:07", "plugin": "core", "name": "end_epoch", "raw_value": "1741596307.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-10", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 10, "time_seconds": 33.00386428833008, "inputs": {"input_file": {"src": "hda", "id": "c24abdba58ee20d2"}, "sec_filter|exclude_types": "snps", "sec_output|drop_genotypes": true, "output_type": "v"}, "job": {"model_class": "Job", "id": "e3c4fefbe3ae2331", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:50:04.111916", "update_time": "2025-03-10T08:50:17.334836", "galaxy_version": "24.2", "external_id": "gxy-qskt8", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/6/9/3/dataset_693913a7-6e44-4b2b-aa2a-1fbfe5ba8ddc.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --exclude-types \"snps\"  --drop-genotypes                   --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/jobs_directory/000/530/outputs/dataset_059acdd2-ed19-43a8-8ded-931f3d0e6202.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_filter": "{\"exclude_types\": \"snps\", \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": true, \"header\": null, \"invert_targets_file\": false}", "output_type": "\"v\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "c24abdba58ee20d2", "src": "hda", "uuid": "693913a7-6e44-4b2b-aa2a-1fbfe5ba8ddc"}}, "outputs": {"output_file": {"id": "a8e74ba1e66279b9", "src": "hda", "uuid": "059acdd2-ed19-43a8-8ded-931f3d0e6202"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:50:06", "plugin": "core", "name": "start_epoch", "raw_value": "1741596606.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:50:06", "plugin": "core", "name": "end_epoch", "raw_value": "1741596606.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-11", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 11, "time_seconds": 33.7395977973938, "inputs": {"input_file": {"src": "hda", "id": "553d4fed78054f36"}, "sec_filter|select_genotype": "^het", "sec_filter|phased": "--phased", "output_type": "v"}, "job": {"model_class": "Job", "id": "fed05fd947d34dcd", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:50:38.258692", "update_time": "2025-03-10T08:50:51.344626", "galaxy_version": "24.2", "external_id": "gxy-sx25k", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/9/7/5/dataset_975ffcf0-e9ca-48c9-938b-475cd1a2c544.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --genotype \"^het\" --phased                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/jobs_directory/000/532/outputs/dataset_51773561-9d3d-4000-a8c1-43dde6d40323.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": \"--phased\", \"private\": null, \"select_genotype\": \"^het\", \"types\": null, \"uncalled\": null}", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "output_type": "\"v\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "553d4fed78054f36", "src": "hda", "uuid": "975ffcf0-e9ca-48c9-938b-475cd1a2c544"}}, "outputs": {"output_file": {"id": "7c66a940509eddca", "src": "hda", "uuid": "51773561-9d3d-4000-a8c1-43dde6d40323"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:50:39", "plugin": "core", "name": "start_epoch", "raw_value": "1741596639.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:50:40", "plugin": "core", "name": "end_epoch", "raw_value": "1741596640.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-12", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 12, "time_seconds": 34.75387096405029, "inputs": {"input_file": {"src": "hda", "id": "c91cc163bf0d7c24"}, "sec_restrict|regions_overlap": "1", "sec_subset|samples": "NA00002", "sec_filter|min_ac": "1", "sec_filter|max_ac": "1", "sec_filter|types": "snps", "output_type": "v"}, "job": {"model_class": "Job", "id": "533ca9167f9549fa", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:51:11.038801", "update_time": "2025-03-10T08:51:26.023839", "galaxy_version": "24.2", "external_id": "gxy-m5vjz", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/2/c/9/dataset_2c90528c-85bb-40f5-82dc-7ebe6a0fb462.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view     --samples 'NA00002'     --min-ac 1 --max-ac 1 --types \"snps\"            --regions-overlap 1          --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/jobs_directory/000/534/outputs/dataset_c27d53b1-09eb-4600-b35a-339e7f255e17.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": \"1\", \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00002\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"1\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"1\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": \"snps\", \"uncalled\": null}", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "output_type": "\"v\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "c91cc163bf0d7c24", "src": "hda", "uuid": "2c90528c-85bb-40f5-82dc-7ebe6a0fb462"}}, "outputs": {"output_file": {"id": "f2f54c3cedac24da", "src": "hda", "uuid": "c27d53b1-09eb-4600-b35a-339e7f255e17"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:51:13", "plugin": "core", "name": "start_epoch", "raw_value": "1741596673.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:51:14", "plugin": "core", "name": "end_epoch", "raw_value": "1741596674.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-2", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 2, "time_seconds": 32.40697979927063, "inputs": {"input_file": {"src": "hda", "id": "fdb8e7cbd4817fa0"}, "sec_restrict|regions|regions_0|chrom": "Y", "sec_restrict|regions|regions_0|start": "20", "sec_restrict|regions|regions_src": "regions", "sec_subset|samples": "NA00003", "sec_filter|known_or_novel": "--novel", "sec_filter|private": "--exclude-private", "output_type": "v"}, "job": {"model_class": "Job", "id": "5b5e74b92e6206b4", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:45:38.103923", "update_time": "2025-03-10T08:45:51.622634", "galaxy_version": "24.2", "external_id": "gxy-7bfwn", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/7/f/d/dataset_7fd5506b-25b4-428f-a9e5-f4b8f5452451.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view     --samples 'NA00003'     --novel --exclude-private                 --regions 'Y:20-'          --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/jobs_directory/000/514/outputs/dataset_8c3117a0-a610-424d-8c7a-f0aa5ea25832.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 1, \"regions\": [{\"__index__\": 0, \"chrom\": \"Y\", \"start\": \"20\", \"stop\": null}], \"regions_src\": \"regions\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00003\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": \"--novel\", \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": \"--exclude-private\", \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "output_type": "\"v\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "fdb8e7cbd4817fa0", "src": "hda", "uuid": "7fd5506b-25b4-428f-a9e5-f4b8f5452451"}}, "outputs": {"output_file": {"id": "fe57e3daca1f805d", "src": "hda", "uuid": "8c3117a0-a610-424d-8c7a-f0aa5ea25832"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:45:40", "plugin": "core", "name": "start_epoch", "raw_value": "1741596340.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:45:40", "plugin": "core", "name": "end_epoch", "raw_value": "1741596340.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-3", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 3, "time_seconds": 33.43530797958374, "inputs": {"input_file": {"src": "hda", "id": "bc290a67b0ea84d2"}, "sec_restrict|apply_filters": "PASS", "sec_restrict|regions|regions_0|chrom": "Y", "sec_restrict|regions|regions_0|start": "20", "sec_restrict|regions|regions_src": "regions", "sec_subset|samples": "NA00003", "sec_filter|known_or_novel": "--known", "sec_filter|private": "--exclude-private", "output_type": "v"}, "job": {"model_class": "Job", "id": "b2a60ee9d4471399", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:46:12.242714", "update_time": "2025-03-10T08:46:25.246983", "galaxy_version": "24.2", "external_id": "gxy-5bqj8", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/5/b/e/dataset_5be1a6d3-2bbb-42c9-a481-f7934ff8f976.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view     --samples 'NA00003'     --known --exclude-private     --apply-filters 'PASS'             --regions 'Y:20-'          --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/jobs_directory/000/516/outputs/dataset_0c1f6f6f-e3b2-4bd3-ba10-68d4534b4abb.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"sec_restrict": "{\"apply_filters\": \"PASS\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 1, \"regions\": [{\"__index__\": 0, \"chrom\": \"Y\", \"start\": \"20\", \"stop\": null}], \"regions_src\": \"regions\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00003\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": \"--known\", \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": \"--exclude-private\", \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "output_type": "\"v\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "bc290a67b0ea84d2", "src": "hda", "uuid": "5be1a6d3-2bbb-42c9-a481-f7934ff8f976"}}, "outputs": {"output_file": {"id": "38ec7cbe420500ff", "src": "hda", "uuid": "0c1f6f6f-e3b2-4bd3-ba10-68d4534b4abb"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:46:13", "plugin": "core", "name": "start_epoch", "raw_value": "1741596373.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:46:14", "plugin": "core", "name": "end_epoch", "raw_value": "1741596374.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-4", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 4, "time_seconds": 32.11373829841614, "inputs": {"input_file": {"src": "hda", "id": "f4fac5149ccbc11c"}, "sec_subset|samples": "NA00003", "sec_filter|private": "--private", "output_type": "v"}, "job": {"model_class": "Job", "id": "e05f80315275f406", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:46:44.786835", "update_time": "2025-03-10T08:46:57.439958", "galaxy_version": "24.2", "external_id": "gxy-4p5hs", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/0/2/7/dataset_027cef6b-a167-4bc8-aeb5-2395e0ae13f3.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view     --samples 'NA00003'     --private                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/jobs_directory/000/518/outputs/dataset_52e25d17-5927-413f-a3b3-deec174effb3.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00003\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": \"--private\", \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "output_type": "\"v\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "f4fac5149ccbc11c", "src": "hda", "uuid": "027cef6b-a167-4bc8-aeb5-2395e0ae13f3"}}, "outputs": {"output_file": {"id": "3c62b2f0d81738c1", "src": "hda", "uuid": "52e25d17-5927-413f-a3b3-deec174effb3"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:46:46", "plugin": "core", "name": "start_epoch", "raw_value": "1741596406.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:46:46", "plugin": "core", "name": "end_epoch", "raw_value": "1741596406.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-5", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 5, "time_seconds": 34.74872541427612, "inputs": {"input_file": {"src": "hda", "id": "7602e29e97471acd"}, "sec_restrict|include": "QUAL==999 && (FS<20 || FS>=41.02) && ICF>-0.1 && HWE*2>1.2", "output_type": "v"}, "job": {"model_class": "Job", "id": "51c9ad3602bd671d", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:47:18.286164", "update_time": "2025-03-10T08:47:32.355446", "galaxy_version": "24.2", "external_id": "gxy-tr6h8", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/2/c/8/dataset_2c8646a0-bca6-4f97-888c-49ad6429e9f6.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view               --include 'QUAL==999 && (FS<20 || FS>=41.02) && ICF>-0.1 && HWE*2>1.2'               --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/jobs_directory/000/520/outputs/dataset_f76e6e40-0411-4325-926d-1acca3c9ac25.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": \"QUAL==999 && (FS<20 || FS>=41.02) && ICF>-0.1 && HWE*2>1.2\", \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "output_type": "\"v\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "7602e29e97471acd", "src": "hda", "uuid": "2c8646a0-bca6-4f97-888c-49ad6429e9f6"}}, "outputs": {"output_file": {"id": "78c5708758800387", "src": "hda", "uuid": "f76e6e40-0411-4325-926d-1acca3c9ac25"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:47:19", "plugin": "core", "name": "start_epoch", "raw_value": "1741596439.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:47:20", "plugin": "core", "name": "end_epoch", "raw_value": "1741596440.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-6", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 6, "time_seconds": 34.103851079940796, "inputs": {"input_file": {"src": "hda", "id": "fabd962b3b8fd5d6"}, "sec_filter|phased": "--phased", "output_type": "v"}, "job": {"model_class": "Job", "id": "20ec3ae1ef0bd1c3", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:47:52.462262", "update_time": "2025-03-10T08:48:06.586772", "galaxy_version": "24.2", "external_id": "gxy-w8qdm", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/3/2/8/dataset_3289429b-b4f5-474c-831d-f3deea72832f.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --phased                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/jobs_directory/000/522/outputs/dataset_b0811af1-9235-49a2-80ac-7f016395c84a.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": \"--phased\", \"private\": null, \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "output_type": "\"v\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "fabd962b3b8fd5d6", "src": "hda", "uuid": "3289429b-b4f5-474c-831d-f3deea72832f"}}, "outputs": {"output_file": {"id": "76ee4860a2538723", "src": "hda", "uuid": "b0811af1-9235-49a2-80ac-7f016395c84a"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:47:54", "plugin": "core", "name": "start_epoch", "raw_value": "1741596474.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:47:54", "plugin": "core", "name": "end_epoch", "raw_value": "1741596474.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-7", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 7, "time_seconds": 32.43760275840759, "inputs": {"input_file": {"src": "hda", "id": "c0e1e3723da490d8"}, "sec_filter|phased": "--exclude-phased", "output_type": "v"}, "job": {"model_class": "Job", "id": "5c08f1af9406fab5", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:48:25.226177", "update_time": "2025-03-10T08:48:39.110407", "galaxy_version": "24.2", "external_id": "gxy-jfxcn", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/a/b/f/dataset_abfd293c-965c-450a-9622-e47d0a31932a.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --exclude-phased                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/jobs_directory/000/524/outputs/dataset_243e0ffc-1bb9-4262-afc0-2de4caf659d7.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": \"--exclude-phased\", \"private\": null, \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "output_type": "\"v\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}"}, "inputs": {"input_file": {"id": "c0e1e3723da490d8", "src": "hda", "uuid": "abfd293c-965c-450a-9622-e47d0a31932a"}}, "outputs": {"output_file": {"id": "1100f3a9f46cc2a4", "src": "hda", "uuid": "243e0ffc-1bb9-4262-afc0-2de4caf659d7"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:48:27", "plugin": "core", "name": "start_epoch", "raw_value": "1741596507.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:48:27", "plugin": "core", "name": "end_epoch", "raw_value": "1741596507.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-8", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 8, "time_seconds": 31.78188681602478, "inputs": {"input_file": {"src": "hda", "id": "becfca3cdffec213"}, "sec_filter|min_alleles": "2", "sec_filter|max_alleles": "2", "sec_filter|min_af": "0.3", "sec_filter|max_af": "0.7", "sec_output|header": "--header-only", "output_type": "v"}, "job": {"model_class": "Job", "id": "da0d8180e396ecf0", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:48:57.838207", "update_time": "2025-03-10T08:49:10.729826", "galaxy_version": "24.2", "external_id": "gxy-ww7pr", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/0/a/9/dataset_0a9eabf3-5733-40ae-bafb-55d2ca500574.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --min-alleles 2 --max-alleles 2 --min-af 0.3 --max-af 0.7   --header-only                   --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/jobs_directory/000/526/outputs/dataset_af0b5bc7-9dbd-44e5-91cf-c90ee57c0e1f.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"0.7\", \"max_alleles\": \"2\", \"min_ac\": \"\", \"min_af\": \"0.3\", \"min_alleles\": \"2\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": \"--header-only\", \"invert_targets_file\": false}", "output_type": "\"v\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "becfca3cdffec213", "src": "hda", "uuid": "0a9eabf3-5733-40ae-bafb-55d2ca500574"}}, "outputs": {"output_file": {"id": "1874711f277ef523", "src": "hda", "uuid": "af0b5bc7-9dbd-44e5-91cf-c90ee57c0e1f"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:49:00", "plugin": "core", "name": "start_epoch", "raw_value": "1741596540.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:49:00", "plugin": "core", "name": "end_epoch", "raw_value": "1741596540.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-9", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 9, "time_seconds": 33.45307993888855, "inputs": {"input_file": {"src": "hda", "id": "93ca04be26076fdf"}, "sec_filter|uncalled": "--uncalled", "sec_output|header": "--no-header", "output_type": "v"}, "job": {"model_class": "Job", "id": "23eb23c248c4a404", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:49:30.364048", "update_time": "2025-03-10T08:49:44.456614", "galaxy_version": "24.2", "external_id": "gxy-v4bkn", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/e/a/3/dataset_ea343e23-2516-4ddc-890e-064a7cf6d863.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --uncalled   --no-header                   --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/jobs_directory/000/528/outputs/dataset_624482c1-bc83-4bb9-bc88-29b17e9c7eb3.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": null, \"uncalled\": \"--uncalled\"}", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": \"--no-header\", \"invert_targets_file\": false}", "output_type": "\"v\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "93ca04be26076fdf", "src": "hda", "uuid": "ea343e23-2516-4ddc-890e-064a7cf6d863"}}, "outputs": {"output_file": {"id": "ff4bc3956106bc61", "src": "hda", "uuid": "624482c1-bc83-4bb9-bc88-29b17e9c7eb3"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-b99184dc2d32592dd62a87fa4a796c61585788e6:07602ea99d759e160674ea07c369efffcc80577a-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:49:32", "plugin": "core", "name": "start_epoch", "raw_value": "1741596572.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:49:32", "plugin": "core", "name": "end_epoch", "raw_value": "1741596572.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-0", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 0, "time_seconds": 43.87047076225281, "inputs": {"library|input_1": {"src": "hda", "id": "8ef1b6d056ad1629"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "acf845a2e8f626fc", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:50:05.687284", "update_time": "2025-03-10T06:50:26.500196", "galaxy_version": "24.2", "external_id": "gxy-kvmp9", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/5/7/dataset_65782aef-3b43-49e1-bd90-60e5fa41037c.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 70, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "8ef1b6d056ad1629", "src": "hda", "uuid": "65782aef-3b43-49e1-bd90-60e5fa41037c"}}, "outputs": {"out1": {"id": "fa3ee623a8464e83", "src": "hda", "uuid": "be884794-e340-47a2-ad86-4c8600252070"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.044 s (14608.939 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.044 s (14608.939 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:50:12", "plugin": "core", "name": "start_epoch", "raw_value": "1741589412.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:50:13", "plugin": "core", "name": "end_epoch", "raw_value": "1741589413.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-0", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 0, "time_seconds": 35.04498791694641, "inputs": {"library|input_1": {"src": "hda", "id": "8696bb55a9118c46"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "9f84f7d9e844ff91", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:18:27.090382", "update_time": "2025-03-10T07:18:41.572151", "galaxy_version": "24.2", "external_id": "gxy-2hddz", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/3/e/3/dataset_3e33a2d4-8ae9-45a2-a487-e5e3c8c92c85.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 203, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "8696bb55a9118c46", "src": "hda", "uuid": "3e33a2d4-8ae9-45a2-a487-e5e3c8c92c85"}}, "outputs": {"out1": {"id": "664f84f51bbd83e6", "src": "hda", "uuid": "d990745d-73ca-4ed0-ab47-1db21729c691"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.047 s (15585.343 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.047 s (15585.343 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:18:29", "plugin": "core", "name": "start_epoch", "raw_value": "1741591109.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:18:30", "plugin": "core", "name": "end_epoch", "raw_value": "1741591110.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-1", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 1, "time_seconds": 36.12062048912048, "inputs": {"library|input_1": {"src": "hda", "id": "39c24112d1f6b30e"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "e37e7b6dc4469b3e", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:50:48.851840", "update_time": "2025-03-10T06:51:02.667334", "galaxy_version": "24.2", "external_id": "gxy-bhxm2", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/a/6/e/dataset_a6ec0607-a547-48f8-90ec-acf88840a615.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 72, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "39c24112d1f6b30e", "src": "hda", "uuid": "a6ec0607-a547-48f8-90ec-acf88840a615"}}, "outputs": {"out1": {"id": "dd7b9e027915e5dd", "src": "hda", "uuid": "16ddd21d-af46-47b4-a864-d225a744346b"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.105 s (1061.389 \u00b5s/read; 0.06 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):         24,843 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.105 s (1061.389 \u00b5s/read; 0.06 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):         24,843 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:50:50", "plugin": "core", "name": "start_epoch", "raw_value": "1741589450.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:50:50", "plugin": "core", "name": "end_epoch", "raw_value": "1741589450.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-1", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 1, "time_seconds": 36.40992331504822, "inputs": {"library|input_1": {"src": "hda", "id": "7710bfc7f8ac9bf5"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "50c5bd130308f37a", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:19:03.222536", "update_time": "2025-03-10T07:19:18.122508", "galaxy_version": "24.2", "external_id": "gxy-r5mxm", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/4/3/dataset_943ccf3b-0574-489d-9f71-f7666409246b.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 205, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "7710bfc7f8ac9bf5", "src": "hda", "uuid": "943ccf3b-0574-489d-9f71-f7666409246b"}}, "outputs": {"out1": {"id": "1ac0980828ead546", "src": "hda", "uuid": "9bf60d24-5b1c-499f-92b7-2d726f0601d9"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.101 s (1025.135 \u00b5s/read; 0.06 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):         24,843 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.101 s (1025.135 \u00b5s/read; 0.06 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):         24,843 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:19:05", "plugin": "core", "name": "start_epoch", "raw_value": "1741591145.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:19:05", "plugin": "core", "name": "end_epoch", "raw_value": "1741591145.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-10", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 10, "time_seconds": 35.490272760391235, "inputs": {"library|input_1": {"src": "hda", "id": "90174aaffafab390"}, "library|r1|front_adapters_0|adapter_source|adapter_name": "A1", "library|r1|front_adapters_0|adapter_source|adapter": "^GTCGGTAA", "library|r1|front_adapters_0|adapter_source|adapter_source_list": "user", "library|r1|front_adapters_1|adapter_source|adapter_name": "A2", "library|r1|front_adapters_1|adapter_source|adapter": "^AGGTCACT", "library|r1|front_adapters_1|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "multiple_output"}, "job": {"model_class": "Job", "id": "fdf88594999c0493", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:55:49.768079", "update_time": "2025-03-10T06:56:04.144682", "galaxy_version": "24.2", "external_id": "gxy-hp7pz", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/f/e/dataset_cfe69b4a-3d47-4d9f-8cf4-3966aa055b8f.dat' 'cutadapt_in_split_fastq.fq' && mkdir split &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -g 'A1'='^GTCGGTAA'   -g 'A2'='^AGGTCACT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'split/{name}.fastq'  'cutadapt_in_split_fastq.fq'", "user_email": "tests@fake.org", "command_version": null, "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 98, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"^GTCGGTAA\", \"adapter_name\": \"A1\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}, {\"__index__\": 1, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"^AGGTCACT\", \"adapter_name\": \"A2\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}]}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": "\"multiple_output\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "90174aaffafab390", "src": "hda", "uuid": "cfe69b4a-3d47-4d9f-8cf4-3966aa055b8f"}}, "outputs": {"__new_primary_file_split_output|A1__": {"id": "6effcfa21ac05130", "src": "hda", "uuid": "d992fb97-79b1-449d-9223-13668c909920"}, "__new_primary_file_split_output|A2__": {"id": "e3026a37b30faf8d", "src": "hda", "uuid": "1dbe15b6-33eb-46dc-a30f-dea0c07c09a7"}, "__new_primary_file_split_output|unknown__": {"id": "2497c697700eb0bf", "src": "hda", "uuid": "515be7e3-c5bb-4ec5-8f6c-0b51f55bd2f4"}}, "copied_from_job_id": null, "output_collections": {"split_output": {"src": "hdca", "id": "ef5de0d98731a9f6"}}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -g A1=^GTCGGTAA -g A2=^AGGTCACT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq cutadapt_in_split_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.075 s (6841.009 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -g A1=^GTCGGTAA -g A2=^AGGTCACT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq cutadapt_in_split_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.075 s (6841.009 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:55:51", "plugin": "core", "name": "start_epoch", "raw_value": "1741589751.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:55:52", "plugin": "core", "name": "end_epoch", "raw_value": "1741589752.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-10", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 10, "time_seconds": 35.71225142478943, "inputs": {"library|input_1": {"src": "hda", "id": "621734c549ecb079"}, "library|r1|front_adapters_0|adapter_source|adapter_name": "A1", "library|r1|front_adapters_0|adapter_source|adapter": "^GTCGGTAA", "library|r1|front_adapters_0|adapter_source|adapter_source_list": "user", "library|r1|front_adapters_1|adapter_source|adapter_name": "A2", "library|r1|front_adapters_1|adapter_source|adapter": "^AGGTCACT", "library|r1|front_adapters_1|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "multiple_output"}, "job": {"model_class": "Job", "id": "39931889e8555bf7", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:23:55.945971", "update_time": "2025-03-10T07:24:09.349789", "galaxy_version": "24.2", "external_id": "gxy-fpnm6", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/8/3/dataset_2830bcfa-68db-4bc1-8fbd-f14d7dfc0106.dat' 'cutadapt_in_split_fastq.fq' && mkdir split &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -g 'A1'='^GTCGGTAA'   -g 'A2'='^AGGTCACT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'split/{name}.fastq'  'cutadapt_in_split_fastq.fq'", "user_email": "tests@fake.org", "command_version": null, "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 231, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"^GTCGGTAA\", \"adapter_name\": \"A1\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}, {\"__index__\": 1, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"^AGGTCACT\", \"adapter_name\": \"A2\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}]}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": "\"multiple_output\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "621734c549ecb079", "src": "hda", "uuid": "2830bcfa-68db-4bc1-8fbd-f14d7dfc0106"}}, "outputs": {"__new_primary_file_split_output|A1__": {"id": "b14d9cb6965d2ec7", "src": "hda", "uuid": "80e3f3d3-c709-4aa5-9d90-f04c26f57098"}, "__new_primary_file_split_output|A2__": {"id": "168a85e05326a845", "src": "hda", "uuid": "8ee9d180-b1f0-4829-b72e-4748692daca9"}, "__new_primary_file_split_output|unknown__": {"id": "d933129466aceef6", "src": "hda", "uuid": "636ade14-0454-46f5-a00d-a74ab159fcac"}}, "copied_from_job_id": null, "output_collections": {"split_output": {"src": "hdca", "id": "98af922f0d60231e"}}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -g A1=^GTCGGTAA -g A2=^AGGTCACT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq cutadapt_in_split_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.077 s (7027.171 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -g A1=^GTCGGTAA -g A2=^AGGTCACT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq cutadapt_in_split_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.077 s (7027.171 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:23:57", "plugin": "core", "name": "start_epoch", "raw_value": "1741591437.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:23:58", "plugin": "core", "name": "end_epoch", "raw_value": "1741591438.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-11", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 11, "time_seconds": 38.09949254989624, "inputs": {"library|input_1": {"src": "hda", "id": "a1eef33e88db708b"}, "library|r1|front_adapters_0|adapter_source|adapter_file": {"src": "hda", "id": "5c31800ccce4afd8"}, "library|r1|front_adapters_0|adapter_source|adapter_source_list": "file", "library|type": "single", "output_selector": "multiple_output"}, "job": {"model_class": "Job", "id": "e9ca4a28ffd4c2b3", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:56:27.688989", "update_time": "2025-03-10T06:56:42.101289", "galaxy_version": "24.2", "external_id": "gxy-fln8d", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/9/b/dataset_89b5d1e5-c46d-4c32-884a-077f53d7b209.dat' 'cutadapt_in_split_fastq_gz.fq.gz' && mkdir split &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -g file:'/galaxy/server/database/objects/c/1/6/dataset_c16e5720-4543-4d86-966a-588df0db7df5.dat'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'split/{name}.fastq.gz'  'cutadapt_in_split_fastq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": null, "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 102, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 2, \"adapter_file\": {\"values\": [{\"id\": 103, \"src\": \"hda\"}]}, \"adapter_source_list\": \"file\"}, \"single_noindels\": false}]}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": "\"multiple_output\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "a1eef33e88db708b", "src": "hda", "uuid": "89b5d1e5-c46d-4c32-884a-077f53d7b209"}, "library|r1|front_adapters_0|adapter_source|adapter_file": {"id": "5c31800ccce4afd8", "src": "hda", "uuid": "c16e5720-4543-4d86-966a-588df0db7df5"}}, "outputs": {"__new_primary_file_split_output|A1__": {"id": "555ca3c2230483aa", "src": "hda", "uuid": "84a06185-56ba-4e0d-9ba3-6c3fad6fc1df"}, "__new_primary_file_split_output|A2__": {"id": "8d6ce220db791341", "src": "hda", "uuid": "cacd3845-6bab-43b4-897a-663d3ce8a34c"}, "__new_primary_file_split_output|unknown__": {"id": "e8ee1a92083d8495", "src": "hda", "uuid": "b5f43c3d-cde3-4f5d-abf2-7d6468d26563"}}, "copied_from_job_id": null, "output_collections": {"split_output": {"src": "hdca", "id": "dd2eff21a14f4761"}}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -g file:/galaxy/server/database/objects/c/1/6/dataset_c16e5720-4543-4d86-966a-588df0db7df5.dat --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq.gz cutadapt_in_split_fastq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.237 s (21566.478 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -g file:/galaxy/server/database/objects/c/1/6/dataset_c16e5720-4543-4d86-966a-588df0db7df5.dat --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq.gz cutadapt_in_split_fastq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.237 s (21566.478 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:56:29", "plugin": "core", "name": "start_epoch", "raw_value": "1741589789.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:56:30", "plugin": "core", "name": "end_epoch", "raw_value": "1741589790.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-11", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 11, "time_seconds": 37.38753342628479, "inputs": {"library|input_1": {"src": "hda", "id": "8472a54e23b80c4c"}, "library|r1|front_adapters_0|adapter_source|adapter_file": {"src": "hda", "id": "23d9be5d3250eb4f"}, "library|r1|front_adapters_0|adapter_source|adapter_source_list": "file", "library|type": "single", "output_selector": "multiple_output"}, "job": {"model_class": "Job", "id": "2d1c515c7efbbbe1", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:24:32.692839", "update_time": "2025-03-10T07:24:46.905838", "galaxy_version": "24.2", "external_id": "gxy-2wsmw", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/3/6/dataset_f36d6c01-392e-4fb6-8805-2c6de0337b92.dat' 'cutadapt_in_split_fastq_gz.fq.gz' && mkdir split &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -g file:'/galaxy/server/database/objects/6/5/b/dataset_65b4df18-51e6-4ce7-9f19-50a029b3c89b.dat'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'split/{name}.fastq.gz'  'cutadapt_in_split_fastq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": null, "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 235, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 2, \"adapter_file\": {\"values\": [{\"id\": 236, \"src\": \"hda\"}]}, \"adapter_source_list\": \"file\"}, \"single_noindels\": false}]}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": "\"multiple_output\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "8472a54e23b80c4c", "src": "hda", "uuid": "f36d6c01-392e-4fb6-8805-2c6de0337b92"}, "library|r1|front_adapters_0|adapter_source|adapter_file": {"id": "23d9be5d3250eb4f", "src": "hda", "uuid": "65b4df18-51e6-4ce7-9f19-50a029b3c89b"}}, "outputs": {"__new_primary_file_split_output|A1__": {"id": "753f80a0ab1f3bac", "src": "hda", "uuid": "b890ea9f-5e62-4ba7-9c58-c14546033686"}, "__new_primary_file_split_output|A2__": {"id": "46d35a3bb403dcca", "src": "hda", "uuid": "f7b42e5a-e509-46a9-84d0-801b509bbf2a"}, "__new_primary_file_split_output|unknown__": {"id": "e45338cbbef513d6", "src": "hda", "uuid": "d9e3651b-80ec-4d10-806c-0e77adbef47a"}}, "copied_from_job_id": null, "output_collections": {"split_output": {"src": "hdca", "id": "c7885de9a2c23b1b"}}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -g file:/galaxy/server/database/objects/6/5/b/dataset_65b4df18-51e6-4ce7-9f19-50a029b3c89b.dat --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq.gz cutadapt_in_split_fastq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.243 s (22087.812 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -g file:/galaxy/server/database/objects/6/5/b/dataset_65b4df18-51e6-4ce7-9f19-50a029b3c89b.dat --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq.gz cutadapt_in_split_fastq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.243 s (22087.812 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:24:34", "plugin": "core", "name": "start_epoch", "raw_value": "1741591474.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:24:35", "plugin": "core", "name": "end_epoch", "raw_value": "1741591475.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-12", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 12, "time_seconds": 37.319034814834595, "inputs": {"library|input_1": {"src": "hda", "id": "1cece5966941b3e9"}, "library|r1|adapters_0|adapter_source|adapter": "AAAT", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "untrimmed_file"}, "job": {"model_class": "Job", "id": "7d3bc01449b9313d", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:57:04.055937", "update_time": "2025-03-10T06:57:19.285451", "galaxy_version": "24.2", "external_id": "gxy-bj64h", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/3/f/dataset_53fa0d11-45da-4c29-a802-9509868b1291.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --untrimmed-output='untrimmed_output.fq' -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 107, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": "\"untrimmed_file\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "1cece5966941b3e9", "src": "hda", "uuid": "53fa0d11-45da-4c29-a802-9509868b1291"}}, "outputs": {"out1": {"id": "ad2a85b4165b30b7", "src": "hda", "uuid": "2bfe33b9-e63b-470f-8851-5338ae7dcbd5"}, "untrimmed_output": {"id": "a913464d2579ab9c", "src": "hda", "uuid": "29685030-b59c-4f16-a46f-b18bfb365791"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AAAT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.055 s (18316.110 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             30 bp (29.4%)\n\n=== Adapter 1 ===\n\nSequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-4 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n4\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AAAT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.055 s (18316.110 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             30 bp (29.4%)\n\n=== Adapter 1 ===\n\nSequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-4 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n4\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:57:06", "plugin": "core", "name": "start_epoch", "raw_value": "1741589826.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:57:06", "plugin": "core", "name": "end_epoch", "raw_value": "1741589826.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-12", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 12, "time_seconds": 36.71997857093811, "inputs": {"library|input_1": {"src": "hda", "id": "ada330c18352d3f3"}, "library|r1|adapters_0|adapter_source|adapter": "AAAT", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "untrimmed_file"}, "job": {"model_class": "Job", "id": "83004aefc5aacd71", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:25:08.636966", "update_time": "2025-03-10T07:25:23.559805", "galaxy_version": "24.2", "external_id": "gxy-h7q97", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/0/9/dataset_70928b06-7e4c-4313-be6a-69329b03ed1b.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --untrimmed-output='untrimmed_output.fq' -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 240, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": "\"untrimmed_file\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "ada330c18352d3f3", "src": "hda", "uuid": "70928b06-7e4c-4313-be6a-69329b03ed1b"}}, "outputs": {"out1": {"id": "2dd9b350550e7d24", "src": "hda", "uuid": "d614ee89-34c8-4eb0-b830-7c0688c30c69"}, "untrimmed_output": {"id": "8676833e02a0a819", "src": "hda", "uuid": "6e338e02-8263-4608-9504-bc931d7af3a1"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AAAT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.054 s (18052.737 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             30 bp (29.4%)\n\n=== Adapter 1 ===\n\nSequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-4 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n4\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AAAT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.054 s (18052.737 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             30 bp (29.4%)\n\n=== Adapter 1 ===\n\nSequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-4 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n4\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:25:11", "plugin": "core", "name": "start_epoch", "raw_value": "1741591511.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:25:11", "plugin": "core", "name": "end_epoch", "raw_value": "1741591511.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-13", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 13, "time_seconds": 36.745965003967285, "inputs": {"library|input_1": {"src": "hda", "id": "c1cfb20195f1a119"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "untrimmed_file"}, "job": {"model_class": "Job", "id": "108ec60d9ce1c26c", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:57:40.675796", "update_time": "2025-03-10T06:57:56.150825", "galaxy_version": "24.2", "external_id": "gxy-4xfp4", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/2/0/dataset_02094de3-0bcd-421f-a014-e828d713a7ac.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --untrimmed-output='untrimmed_output.fq.gz' -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 110, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": "\"untrimmed_file\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "c1cfb20195f1a119", "src": "hda", "uuid": "02094de3-0bcd-421f-a014-e828d713a7ac"}}, "outputs": {"out1": {"id": "17290125749b6efe", "src": "hda", "uuid": "445171cf-fd20-4487-9200-e7c6ad72dd66"}, "untrimmed_output": {"id": "35c53ae48b417567", "src": "hda", "uuid": "3560a5f7-6bda-4bd5-8673-3f1810a16483"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq.gz -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.162 s (1641.189 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):            496 bp (2.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq.gz -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.162 s (1641.189 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):            496 bp (2.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:57:43", "plugin": "core", "name": "start_epoch", "raw_value": "1741589863.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:57:43", "plugin": "core", "name": "end_epoch", "raw_value": "1741589863.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-13", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 13, "time_seconds": 35.519137144088745, "inputs": {"library|input_1": {"src": "hda", "id": "a861a730f177ebdb"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "untrimmed_file"}, "job": {"model_class": "Job", "id": "be8e8cb759f0be0e", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:25:44.320433", "update_time": "2025-03-10T07:25:59.011921", "galaxy_version": "24.2", "external_id": "gxy-6gskf", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/c/7/dataset_5c78355d-ba06-4182-a627-ba0ff172f9f7.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --untrimmed-output='untrimmed_output.fq.gz' -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 243, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": "\"untrimmed_file\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "a861a730f177ebdb", "src": "hda", "uuid": "5c78355d-ba06-4182-a627-ba0ff172f9f7"}}, "outputs": {"out1": {"id": "53fb0b1e8c2c9c86", "src": "hda", "uuid": "d124ff97-484d-40e1-92bf-a17cde3c8ae7"}, "untrimmed_output": {"id": "34fafcb7674ca1f1", "src": "hda", "uuid": "b073c5d9-8c9d-4673-942b-6aae5efe5520"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq.gz -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.166 s (1673.949 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):            496 bp (2.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq.gz -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.166 s (1673.949 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):            496 bp (2.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:25:46", "plugin": "core", "name": "start_epoch", "raw_value": "1741591546.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:25:47", "plugin": "core", "name": "end_epoch", "raw_value": "1741591547.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-14", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 14, "time_seconds": 37.70693516731262, "inputs": {"library|input_1": {"src": "hda", "id": "44bb37505ba076cc"}, "library|input_2": {"src": "hda", "id": "a7d302e7a13f28c0"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|discard_untrimmed": true, "filter_options|minimum_length": "1", "filter_options|maximum_length": "1000", "filter_options|max_n": "0", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "aab502851429be06", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:58:20.438993", "update_time": "2025-03-10T06:58:35.066266", "galaxy_version": "24.2", "external_id": "gxy-577h9", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/1/1/dataset_211963a4-9451-46ac-8ab0-2d1cbbbf44ac.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/e/4/4/dataset_e440eb3d-7965-426c-8e56-3fbff3f0e2b1.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim       --discard-untrimmed  --minimum-length=1 --maximum-length=1000 --max-n=0.0  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 113, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 114, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": true, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"0.0\", \"maximum_length\": \"1000\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"both\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "44bb37505ba076cc", "src": "hda", "uuid": "211963a4-9451-46ac-8ab0-2d1cbbbf44ac"}, "library|input_2": {"id": "a7d302e7a13f28c0", "src": "hda", "uuid": "e440eb3d-7965-426c-8e56-3fbff3f0e2b1"}}, "outputs": {"out1": {"id": "bc5321e794242265", "src": "hda", "uuid": "cf476034-65ba-4b21-81a1-433ef524ff2f"}, "out2": {"id": "3a89df031b696972", "src": "hda", "uuid": "2c2efefd-546c-4a24-ba50-9e45733e4dc9"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-untrimmed --minimum-length=1 --maximum-length=1000 --max-n=0.0 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.161 s (1624.122 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                    0 (0.0%)\nPairs with too many N:                       0 (0.0%)\nPairs written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):            998 bp (2.0%)\n  Read 1:           496 bp\n  Read 2:           502 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-untrimmed --minimum-length=1 --maximum-length=1000 --max-n=0.0 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.161 s (1624.122 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                    0 (0.0%)\nPairs with too many N:                       0 (0.0%)\nPairs written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):            998 bp (2.0%)\n  Read 1:           496 bp\n  Read 2:           502 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:58:21", "plugin": "core", "name": "start_epoch", "raw_value": "1741589901.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:58:22", "plugin": "core", "name": "end_epoch", "raw_value": "1741589902.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-14", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 14, "time_seconds": 37.634361028671265, "inputs": {"library|input_1": {"src": "hda", "id": "2a0342980d529318"}, "library|input_2": {"src": "hda", "id": "d22ac497c765688d"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|discard_untrimmed": true, "filter_options|minimum_length": "1", "filter_options|maximum_length": "1000", "filter_options|max_n": "0", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "aa98df4f0c70a60d", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:26:22.923949", "update_time": "2025-03-10T07:26:37.757767", "galaxy_version": "24.2", "external_id": "gxy-lgcsq", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/7/1/dataset_6719610b-8251-4c72-9c4a-72048bb699ab.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/4/8/9/dataset_489509b4-b839-45d7-b2e5-e999061e3332.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim       --discard-untrimmed  --minimum-length=1 --maximum-length=1000 --max-n=0.0  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 246, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 247, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": true, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"0.0\", \"maximum_length\": \"1000\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"both\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "2a0342980d529318", "src": "hda", "uuid": "6719610b-8251-4c72-9c4a-72048bb699ab"}, "library|input_2": {"id": "d22ac497c765688d", "src": "hda", "uuid": "489509b4-b839-45d7-b2e5-e999061e3332"}}, "outputs": {"out1": {"id": "fd8d15306772ec1a", "src": "hda", "uuid": "dc15e834-0e2c-4c99-b7b9-700a71673a7d"}, "out2": {"id": "6dfc4de14cacc21a", "src": "hda", "uuid": "bee3556c-7b04-4ddc-8645-d5c86dadac5b"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-untrimmed --minimum-length=1 --maximum-length=1000 --max-n=0.0 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.166 s (1681.297 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                    0 (0.0%)\nPairs with too many N:                       0 (0.0%)\nPairs written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):            998 bp (2.0%)\n  Read 1:           496 bp\n  Read 2:           502 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-untrimmed --minimum-length=1 --maximum-length=1000 --max-n=0.0 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.166 s (1681.297 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                    0 (0.0%)\nPairs with too many N:                       0 (0.0%)\nPairs written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):            998 bp (2.0%)\n  Read 1:           496 bp\n  Read 2:           502 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:26:24", "plugin": "core", "name": "start_epoch", "raw_value": "1741591584.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:26:25", "plugin": "core", "name": "end_epoch", "raw_value": "1741591585.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-15", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 15, "time_seconds": 35.67509436607361, "inputs": {"library|input_1": {"src": "hda", "id": "182264b17ea79434"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|cut": "5"}, "job": {"model_class": "Job", "id": "ef6a0bcab3ab1090", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:58:55.482099", "update_time": "2025-03-10T06:59:10.403668", "galaxy_version": "24.2", "external_id": "gxy-2jcbt", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/e/1/7/dataset_e17f6eb1-f2f7-4148-9a84-d6f03207a614.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --cut=5       --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 117, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"5\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "182264b17ea79434", "src": "hda", "uuid": "e17f6eb1-f2f7-4148-9a84-d6f03207a614"}}, "outputs": {"out1": {"id": "2198c1aaf9efbc39", "src": "hda", "uuid": "42ea53a8-7207-43ef-b528-07f1c06147dd"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.050 s (16598.066 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.050 s (16598.066 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:58:58", "plugin": "core", "name": "start_epoch", "raw_value": "1741589938.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:58:58", "plugin": "core", "name": "end_epoch", "raw_value": "1741589938.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-15", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 15, "time_seconds": 34.496331214904785, "inputs": {"library|input_1": {"src": "hda", "id": "02af809e7a06f3ff"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|cut": "5"}, "job": {"model_class": "Job", "id": "51db97d1fb148654", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:26:58.007451", "update_time": "2025-03-10T07:27:11.909309", "galaxy_version": "24.2", "external_id": "gxy-6w5ms", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/a/1/dataset_8a111d89-d8ab-4c96-819c-b1ff4c99acb4.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --cut=5       --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 250, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"5\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "02af809e7a06f3ff", "src": "hda", "uuid": "8a111d89-d8ab-4c96-819c-b1ff4c99acb4"}}, "outputs": {"out1": {"id": "291c92363c136da6", "src": "hda", "uuid": "b6b0cfd6-ef2b-4f3f-9ec7-f2a5d882fdce"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (14470.816 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (14470.816 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:26:59", "plugin": "core", "name": "start_epoch", "raw_value": "1741591619.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:27:00", "plugin": "core", "name": "end_epoch", "raw_value": "1741591620.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-16", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 16, "time_seconds": 35.930771827697754, "inputs": {"library|input_1": {"src": "hda", "id": "c1f05fb2a9c3e7d1"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|cut": "5", "read_mod_options|rename": "{id} barcode={cut_prefix}"}, "job": {"model_class": "Job", "id": "9aea3e389dd2dd43", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:59:31.753295", "update_time": "2025-03-10T06:59:46.190970", "galaxy_version": "24.2", "external_id": "gxy-tk6gq", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/e/5/0/dataset_e50606b2-3b4d-45e8-9b82-35a18e75814e.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --cut=5       --minimum-length=1    --rename='{id} barcode={cut_prefix}'   -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 119, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"5\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": \"{id} barcode={cut_prefix}\", \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "c1f05fb2a9c3e7d1", "src": "hda", "uuid": "e50606b2-3b4d-45e8-9b82-35a18e75814e"}}, "outputs": {"out1": {"id": "1cf93f1da97c33fe", "src": "hda", "uuid": "04310725-5f35-476c-a6e3-346a305f1d6d"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 --rename={id} barcode={cut_prefix} -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.049 s (16459.068 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 --rename={id} barcode={cut_prefix} -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.049 s (16459.068 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:59:33", "plugin": "core", "name": "start_epoch", "raw_value": "1741589973.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:59:34", "plugin": "core", "name": "end_epoch", "raw_value": "1741589974.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-16", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 16, "time_seconds": 35.268441915512085, "inputs": {"library|input_1": {"src": "hda", "id": "f70cc5a1b206c129"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|cut": "5", "read_mod_options|rename": "{id} barcode={cut_prefix}"}, "job": {"model_class": "Job", "id": "45608ebb6d18efee", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:27:33.176801", "update_time": "2025-03-10T07:27:47.129246", "galaxy_version": "24.2", "external_id": "gxy-466tg", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/6/8/dataset_f6896c11-602d-44f2-9b90-f43978d86168.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --cut=5       --minimum-length=1    --rename='{id} barcode={cut_prefix}'   -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 252, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"5\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": \"{id} barcode={cut_prefix}\", \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "f70cc5a1b206c129", "src": "hda", "uuid": "f6896c11-602d-44f2-9b90-f43978d86168"}}, "outputs": {"out1": {"id": "236ec83ad331ad2b", "src": "hda", "uuid": "78e4a0db-5fa3-4819-9534-a5cf6fbd34b5"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 --rename={id} barcode={cut_prefix} -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (14223.814 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 --rename={id} barcode={cut_prefix} -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (14223.814 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:27:35", "plugin": "core", "name": "start_epoch", "raw_value": "1741591655.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:27:35", "plugin": "core", "name": "end_epoch", "raw_value": "1741591655.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-17", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 17, "time_seconds": 37.48513698577881, "inputs": {"library|input_1": {"src": "hda", "id": "6a196c7738cd03e7"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "retain"}, "job": {"model_class": "Job", "id": "fa3ee623a8464e83", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:00:08.726758", "update_time": "2025-03-10T07:00:24.030060", "galaxy_version": "24.2", "external_id": "gxy-5zbnh", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/c/a/dataset_6caeb0a7-ff28-4678-8e23-a398aa8e826a.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=retain         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 121, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"retain\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "6a196c7738cd03e7", "src": "hda", "uuid": "6caeb0a7-ff28-4678-8e23-a398aa8e826a"}}, "outputs": {"out1": {"id": "da5cbfa4bdbd302e", "src": "hda", "uuid": "a955ffd9-7534-43b9-9ab7-fbc7121fed18"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=retain --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.044 s (14688.174 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=retain --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.044 s (14688.174 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:00:10", "plugin": "core", "name": "start_epoch", "raw_value": "1741590010.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:00:11", "plugin": "core", "name": "end_epoch", "raw_value": "1741590011.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-17", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 17, "time_seconds": 64.42049407958984, "inputs": {"library|input_1": {"src": "hda", "id": "d6eddf131d819ab6"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "retain"}, "job": {"model_class": "Job", "id": "7ad5533412a345d3", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:28:07.769239", "update_time": "2025-03-10T07:28:51.887586", "galaxy_version": "24.2", "external_id": "gxy-q9wj5", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/f/3/dataset_5f3f4e2d-6040-4468-a1cb-990fef1227ba.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=retain         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 254, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"retain\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "d6eddf131d819ab6", "src": "hda", "uuid": "5f3f4e2d-6040-4468-a1cb-990fef1227ba"}}, "outputs": {"out1": {"id": "c4a0c4adacba4974", "src": "hda", "uuid": "fdb5fcae-6170-46c9-8bad-d2495ea687f5"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=retain --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (14424.960 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=retain --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (14424.960 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:28:39", "plugin": "core", "name": "start_epoch", "raw_value": "1741591719.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:28:40", "plugin": "core", "name": "end_epoch", "raw_value": "1741591720.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-18", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 18, "time_seconds": 36.06808137893677, "inputs": {"library|input_1": {"src": "hda", "id": "9147a55dfa0310c8"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "mask"}, "job": {"model_class": "Job", "id": "dd7b9e027915e5dd", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:00:45.086909", "update_time": "2025-03-10T07:00:59.926009", "galaxy_version": "24.2", "external_id": "gxy-lkmr6", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/e/f/3/dataset_ef3a0656-0ce2-40a6-893b-cca4c5137185.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=mask         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 123, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"mask\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "9147a55dfa0310c8", "src": "hda", "uuid": "ef3a0656-0ce2-40a6-893b-cca4c5137185"}}, "outputs": {"out1": {"id": "4f1ce8bbc7a00a36", "src": "hda", "uuid": "26344efe-cce2-420a-8899-a794c75ccec9"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=mask --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.048 s (16109.943 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=mask --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.048 s (16109.943 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:00:47", "plugin": "core", "name": "start_epoch", "raw_value": "1741590047.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:00:47", "plugin": "core", "name": "end_epoch", "raw_value": "1741590047.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-18", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 18, "time_seconds": 34.4398410320282, "inputs": {"library|input_1": {"src": "hda", "id": "78994c08d8d79737"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "mask"}, "job": {"model_class": "Job", "id": "baafba81519eb49d", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:29:12.248922", "update_time": "2025-03-10T07:29:26.394797", "galaxy_version": "24.2", "external_id": "gxy-chfd2", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/8/2/dataset_982daf79-8345-443b-9cf4-9bdf4f926c55.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=mask         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 256, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"mask\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "78994c08d8d79737", "src": "hda", "uuid": "982daf79-8345-443b-9cf4-9bdf4f926c55"}}, "outputs": {"out1": {"id": "ef5d4776ec2dad64", "src": "hda", "uuid": "22376e30-6c62-4584-9367-51c1fa86c6c9"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=mask --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.052 s (17220.974 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=mask --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.052 s (17220.974 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:29:13", "plugin": "core", "name": "start_epoch", "raw_value": "1741591753.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:29:14", "plugin": "core", "name": "end_epoch", "raw_value": "1741591754.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-19", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 19, "time_seconds": 37.64559078216553, "inputs": {"library|input_1": {"src": "hda", "id": "00c3e7e755158ba3"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "lowercase"}, "job": {"model_class": "Job", "id": "22b15ad9f43a4c1d", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:01:22.873476", "update_time": "2025-03-10T07:01:37.827280", "galaxy_version": "24.2", "external_id": "gxy-m5lmx", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/3/4/dataset_63493a05-4742-4616-92ef-08ca5b72a443.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=lowercase         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 125, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"lowercase\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "00c3e7e755158ba3", "src": "hda", "uuid": "63493a05-4742-4616-92ef-08ca5b72a443"}}, "outputs": {"out1": {"id": "d34fa52469f72a56", "src": "hda", "uuid": "048374f0-38d3-4fb6-9ee4-740830a7f112"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=lowercase --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.046 s (15212.933 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=lowercase --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.046 s (15212.933 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:01:25", "plugin": "core", "name": "start_epoch", "raw_value": "1741590085.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:01:25", "plugin": "core", "name": "end_epoch", "raw_value": "1741590085.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-19", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 19, "time_seconds": 34.70249271392822, "inputs": {"library|input_1": {"src": "hda", "id": "e97bb79db87b2717"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "lowercase"}, "job": {"model_class": "Job", "id": "974217c50cb38161", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:29:47.013457", "update_time": "2025-03-10T07:30:01.070291", "galaxy_version": "24.2", "external_id": "gxy-vvs5m", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/3/5/5/dataset_355918c2-2743-4c12-8631-31257973df31.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=lowercase         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 258, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"lowercase\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "e97bb79db87b2717", "src": "hda", "uuid": "355918c2-2743-4c12-8631-31257973df31"}}, "outputs": {"out1": {"id": "255e610f44c31089", "src": "hda", "uuid": "0ef6ad5f-0995-4101-aaf6-bbe4b127340a"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=lowercase --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.051 s (17011.166 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=lowercase --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.051 s (17011.166 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:29:48", "plugin": "core", "name": "start_epoch", "raw_value": "1741591788.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:29:49", "plugin": "core", "name": "end_epoch", "raw_value": "1741591789.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-2", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 2, "time_seconds": 37.57202124595642, "inputs": {"library|input_1": {"src": "hda", "id": "1fa77da59a84386f"}, "library|input_2": {"src": "hda", "id": "22b15ad9f43a4c1d"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "1ca01a4eed04c266", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:51:25.336805", "update_time": "2025-03-10T06:51:39.868311", "galaxy_version": "24.2", "external_id": "gxy-rjzhm", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/d/3/c/dataset_d3c9abc6-c449-492c-8e7c-8e6f224e91eb.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/6/9/b/dataset_69bfb75e-f299-48af-85e5-5807aa00dfda.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 74, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 75, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "1fa77da59a84386f", "src": "hda", "uuid": "d3c9abc6-c449-492c-8e7c-8e6f224e91eb"}, "library|input_2": {"id": "22b15ad9f43a4c1d", "src": "hda", "uuid": "69bfb75e-f299-48af-85e5-5807aa00dfda"}}, "outputs": {"out1": {"id": "f3031084c9fc4832", "src": "hda", "uuid": "e7f80f72-b827-457c-8fa4-d56b8e553274"}, "out2": {"id": "9af6934ea923b282", "src": "hda", "uuid": "3cb3ca89-6f89-4c06-a0d3-cd2f9463deef"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.182 s (1837.066 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.182 s (1837.066 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:51:27", "plugin": "core", "name": "start_epoch", "raw_value": "1741589487.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:51:27", "plugin": "core", "name": "end_epoch", "raw_value": "1741589487.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-2", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 2, "time_seconds": 36.90043640136719, "inputs": {"library|input_1": {"src": "hda", "id": "837f7d5510ba8ce4"}, "library|input_2": {"src": "hda", "id": "650dd608a2dbcbdc"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "89fdb1ad6744d36a", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:19:39.651832", "update_time": "2025-03-10T07:19:54.536337", "galaxy_version": "24.2", "external_id": "gxy-nbdf9", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/d/b/a/dataset_dba1915d-7396-4dda-bad2-afa5640a78c9.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/a/7/f/dataset_a7fd0bd3-e930-4b97-8739-fee537c6ace0.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 207, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 208, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "837f7d5510ba8ce4", "src": "hda", "uuid": "dba1915d-7396-4dda-bad2-afa5640a78c9"}, "library|input_2": {"id": "650dd608a2dbcbdc", "src": "hda", "uuid": "a7fd0bd3-e930-4b97-8739-fee537c6ace0"}}, "outputs": {"out1": {"id": "430465d7eb27d99c", "src": "hda", "uuid": "c894ed91-a22b-43b9-a6b7-0ed2eb6e6d9a"}, "out2": {"id": "7ac6be9c578aa302", "src": "hda", "uuid": "b6d5fcdf-4dd1-4f4d-b4c1-b1882b72675f"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.186 s (1883.473 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.186 s (1883.473 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:19:41", "plugin": "core", "name": "start_epoch", "raw_value": "1741591181.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:19:42", "plugin": "core", "name": "end_epoch", "raw_value": "1741591182.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-20", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 20, "time_seconds": 36.80967688560486, "inputs": {"library|input_1": {"src": "hda", "id": "7315f6d9be664c69"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "crop"}, "job": {"model_class": "Job", "id": "9af6934ea923b282", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:02:00.200799", "update_time": "2025-03-10T07:02:14.422774", "galaxy_version": "24.2", "external_id": "gxy-m4b84", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/3/1/1/dataset_31121289-be8c-420e-b36d-874a67bb33a9.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=crop         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 127, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"crop\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "7315f6d9be664c69", "src": "hda", "uuid": "31121289-be8c-420e-b36d-874a67bb33a9"}}, "outputs": {"out1": {"id": "5354253c2edd4b77", "src": "hda", "uuid": "a3857fd7-96c2-4f89-8f66-195c2bf34cda"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=crop --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.048 s (16136.090 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=crop --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.048 s (16136.090 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:02:02", "plugin": "core", "name": "start_epoch", "raw_value": "1741590122.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:02:02", "plugin": "core", "name": "end_epoch", "raw_value": "1741590122.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-20", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 20, "time_seconds": 37.06302857398987, "inputs": {"library|input_1": {"src": "hda", "id": "9fa14082497a6b86"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "crop"}, "job": {"model_class": "Job", "id": "12c376a42b694ba2", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:30:22.642057", "update_time": "2025-03-10T07:30:38.151270", "galaxy_version": "24.2", "external_id": "gxy-bc4lv", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/3/d/dataset_83d581db-b1ee-4de6-affc-13acde5cc0da.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=crop         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 260, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"crop\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "9fa14082497a6b86", "src": "hda", "uuid": "83d581db-b1ee-4de6-affc-13acde5cc0da"}}, "outputs": {"out1": {"id": "094aa5d303239f90", "src": "hda", "uuid": "4afda41c-7612-4a9b-9ec7-1b09d81cb466"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=crop --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (14481.306 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=crop --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (14481.306 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:30:24", "plugin": "core", "name": "start_epoch", "raw_value": "1741591824.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:30:25", "plugin": "core", "name": "end_epoch", "raw_value": "1741591825.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-21", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 21, "time_seconds": 36.71729826927185, "inputs": {"library|input_1": {"src": "hda", "id": "f372a9962501eaa2"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "none"}, "job": {"model_class": "Job", "id": "181bc82ab58f64af", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:02:37.116231", "update_time": "2025-03-10T07:02:51.298758", "galaxy_version": "24.2", "external_id": "gxy-62dwq", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/9/3/dataset_993b49fd-9dd9-4e00-8224-6cbb7bc305d6.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=none         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 129, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"none\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "f372a9962501eaa2", "src": "hda", "uuid": "993b49fd-9dd9-4e00-8224-6cbb7bc305d6"}}, "outputs": {"out1": {"id": "3d405da0d0267d2f", "src": "hda", "uuid": "77eb6b40-f767-4e69-9d31-b5e29ea23200"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=none --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.050 s (16787.370 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=none --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.050 s (16787.370 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:02:38", "plugin": "core", "name": "start_epoch", "raw_value": "1741590158.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:02:39", "plugin": "core", "name": "end_epoch", "raw_value": "1741590159.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-21", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 21, "time_seconds": 35.84277367591858, "inputs": {"library|input_1": {"src": "hda", "id": "bf1b590c06deadd8"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "none"}, "job": {"model_class": "Job", "id": "0e9eae24fcb54678", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:30:59.975426", "update_time": "2025-03-10T07:31:13.926695", "galaxy_version": "24.2", "external_id": "gxy-xqtww", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/5/7/dataset_857bf765-fab9-457c-9137-b8a815dcc2b2.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=none         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 262, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"none\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "bf1b590c06deadd8", "src": "hda", "uuid": "857bf765-fab9-457c-9137-b8a815dcc2b2"}}, "outputs": {"out1": {"id": "00738eb38358c32b", "src": "hda", "uuid": "e0bbeec7-a06f-4b4f-93c2-9e843ad6ec7b"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=none --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (14470.498 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=none --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (14470.498 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:31:01", "plugin": "core", "name": "start_epoch", "raw_value": "1741591861.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:31:02", "plugin": "core", "name": "end_epoch", "raw_value": "1741591862.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-22", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 22, "time_seconds": 36.266701459884644, "inputs": {"library|input_1": {"src": "hda", "id": "e67d7d8cedcf3d1e"}, "library|r1|adapters_0|adapter_source|adapter": "TAAACAGATTAGT", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|revcomp": true}, "job": {"model_class": "Job", "id": "790723ecdaa71cf2", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:03:12.789582", "update_time": "2025-03-10T07:03:27.816956", "galaxy_version": "24.2", "external_id": "gxy-fd88z", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/8/f/dataset_78f591bb-c6fd-47f8-a765-6aa70d97a37a.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'TAAACAGATTAGT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim --rc        --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 131, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"TAAACAGATTAGT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": true, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "e67d7d8cedcf3d1e", "src": "hda", "uuid": "78f591bb-c6fd-47f8-a765-6aa70d97a37a"}}, "outputs": {"out1": {"id": "8b6ef612fbf1cfb2", "src": "hda", "uuid": "a2552d08-4312-4f7e-ba25-776d92c14b9d"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a TAAACAGATTAGT --error-rate=0.1 --times=1 --overlap=3 --action=trim --rc --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.047 s (15575.171 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReverse-complemented:                        0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             97 bp (95.1%)\n\n=== Adapter 1 ===\n\nSequence: TAAACAGATTAGT; Type: regular 3'; Length: 13; Trimmed: 1 times; Reverse-complemented: 0 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n5\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a TAAACAGATTAGT --error-rate=0.1 --times=1 --overlap=3 --action=trim --rc --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.047 s (15575.171 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReverse-complemented:                        0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             97 bp (95.1%)\n\n=== Adapter 1 ===\n\nSequence: TAAACAGATTAGT; Type: regular 3'; Length: 13; Trimmed: 1 times; Reverse-complemented: 0 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n5\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:03:15", "plugin": "core", "name": "start_epoch", "raw_value": "1741590195.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:03:15", "plugin": "core", "name": "end_epoch", "raw_value": "1741590195.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-22", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 22, "time_seconds": 34.65920424461365, "inputs": {"library|input_1": {"src": "hda", "id": "17b95a801d7023b3"}, "library|r1|adapters_0|adapter_source|adapter": "TAAACAGATTAGT", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|revcomp": true}, "job": {"model_class": "Job", "id": "bfd714093b27eee4", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:31:35.023430", "update_time": "2025-03-10T07:31:48.708309", "galaxy_version": "24.2", "external_id": "gxy-pk6k8", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/1/0/8/dataset_108f342d-8034-4cae-9318-69bbb6d647ba.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'TAAACAGATTAGT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim --rc        --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 264, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"TAAACAGATTAGT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": true, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "17b95a801d7023b3", "src": "hda", "uuid": "108f342d-8034-4cae-9318-69bbb6d647ba"}}, "outputs": {"out1": {"id": "51741733bbb46ce7", "src": "hda", "uuid": "5edf2056-c8bc-4a18-8ec4-8dcc91a99519"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a TAAACAGATTAGT --error-rate=0.1 --times=1 --overlap=3 --action=trim --rc --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.046 s (15424.252 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReverse-complemented:                        0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             97 bp (95.1%)\n\n=== Adapter 1 ===\n\nSequence: TAAACAGATTAGT; Type: regular 3'; Length: 13; Trimmed: 1 times; Reverse-complemented: 0 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n5\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a TAAACAGATTAGT --error-rate=0.1 --times=1 --overlap=3 --action=trim --rc --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.046 s (15424.252 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReverse-complemented:                        0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             97 bp (95.1%)\n\n=== Adapter 1 ===\n\nSequence: TAAACAGATTAGT; Type: regular 3'; Length: 13; Trimmed: 1 times; Reverse-complemented: 0 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n5\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:31:37", "plugin": "core", "name": "start_epoch", "raw_value": "1741591897.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:31:37", "plugin": "core", "name": "end_epoch", "raw_value": "1741591897.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-23", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 23, "time_seconds": 37.23236107826233, "inputs": {"library|input_1": {"src": "hda", "id": "cd917cf1febb5a8a"}, "library|input_2": {"src": "hda", "id": "0582da14c35f7b74"}, "library|r1|adapters_0|adapter_source|adapter": "ATCTGGTTCC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "CTACAAG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "30", "filter_options|minimum_length2": "10", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "38e86852487664f4", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:03:49.750831", "update_time": "2025-03-10T07:04:04.752477", "galaxy_version": "24.2", "external_id": "gxy-hg2jm", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/2/c/dataset_42c13e10-8fc6-4418-8ab7-3b05145cdf37.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/9/2/4/dataset_924591f9-3b64-4ce4-ad43-f49b5d906eb0.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'ATCTGGTTCC'    -A 'CTACAAG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=30:10  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 133, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 134, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"ATCTGGTTCC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CTACAAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"30\", \"minimum_length2\": \"10\", \"pair_filter\": \"both\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "cd917cf1febb5a8a", "src": "hda", "uuid": "42c13e10-8fc6-4418-8ab7-3b05145cdf37"}, "library|input_2": {"id": "0582da14c35f7b74", "src": "hda", "uuid": "924591f9-3b64-4ce4-ad43-f49b5d906eb0"}}, "outputs": {"out1": {"id": "f70c9cefd41e4ed3", "src": "hda", "uuid": "0a1da436-b58c-43d2-9e95-c3439d78c678"}, "out2": {"id": "5f60e95cd49495c8", "src": "hda", "uuid": "d793bb26-6fc3-4ca3-bbca-e79738b0de49"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a ATCTGGTTCC -A CTACAAG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=30:10 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.181 s (1830.236 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                      32 (32.3%)\n  Read 2 with adapter:                      15 (15.2%)\n\n== Read fate breakdown ==\nPairs that were too short:                   3 (3.0%)\nPairs written (passing filters):            96 (97.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         38,492 bp (79.7%)\n  Read 1:        17,741 bp\n  Read 2:        20,751 bp\n\n=== First read: Adapter 1 ===\n\nSequence: ATCTGGTTCC; Type: regular 3'; Length: 10; Trimmed: 32 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 90.6%\n  G: 3.1%\n  T: 0.0%\n  none/other: 6.2%\nWARNING:\n    The adapter is preceded by 'C' extremely often.\n    The provided adapter sequence could be incomplete at its 5' end.\n    Ignore this warning when trimming primers.\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n13\t1\t0.0\t1\t1\n14\t1\t0.0\t1\t1\n201\t1\t0.0\t1\t1\n203\t1\t0.0\t1\t1\n208\t2\t0.0\t1\t2\n209\t1\t0.0\t1\t1\n211\t1\t0.0\t1\t1\n214\t2\t0.0\t1\t2\n217\t2\t0.0\t1\t2\n218\t1\t0.0\t1\t1\n222\t1\t0.0\t1\t1\n226\t1\t0.0\t1\t1\n227\t2\t0.0\t1\t2\n228\t1\t0.0\t1\t1\n229\t1\t0.0\t1\t1\n232\t2\t0.0\t1\t2\n238\t1\t0.0\t1\t1\n242\t7\t0.0\t1\t7\n251\t1\t0.0\t1\t0 1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: CTACAAG; Type: regular 3'; Length: 7; Trimmed: 15 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 73.3%\n  G: 0.0%\n  T: 0.0%\n  none/other: 26.7%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t1\t0.0\t0\t1\n228\t2\t0.0\t0\t2\n229\t1\t0.0\t0\t1\n238\t3\t0.0\t0\t3\n241\t1\t0.0\t0\t1\n243\t1\t0.0\t0\t1\n246\t1\t0.0\t0\t1\n248\t1\t0.0\t0\t1\n250\t1\t0.0\t0\t1\n251\t3\t0.0\t0\t3\n\n\nWARNING:\n    One or more of your adapter sequences may be incomplete.\n    Please see the detailed output above.\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a ATCTGGTTCC -A CTACAAG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=30:10 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.181 s (1830.236 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                      32 (32.3%)\n  Read 2 with adapter:                      15 (15.2%)\n\n== Read fate breakdown ==\nPairs that were too short:                   3 (3.0%)\nPairs written (passing filters):            96 (97.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         38,492 bp (79.7%)\n  Read 1:        17,741 bp\n  Read 2:        20,751 bp\n\n=== First read: Adapter 1 ===\n\nSequence: ATCTGGTTCC; Type: regular 3'; Length: 10; Trimmed: 32 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 90.6%\n  G: 3.1%\n  T: 0.0%\n  none/other: 6.2%\nWARNING:\n    The adapter is preceded by 'C' extremely often.\n    The provided adapter sequence could be incomplete at its 5' end.\n    Ignore this warning when trimming primers.\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n13\t1\t0.0\t1\t1\n14\t1\t0.0\t1\t1\n201\t1\t0.0\t1\t1\n203\t1\t0.0\t1\t1\n208\t2\t0.0\t1\t2\n209\t1\t0.0\t1\t1\n211\t1\t0.0\t1\t1\n214\t2\t0.0\t1\t2\n217\t2\t0.0\t1\t2\n218\t1\t0.0\t1\t1\n222\t1\t0.0\t1\t1\n226\t1\t0.0\t1\t1\n227\t2\t0.0\t1\t2\n228\t1\t0.0\t1\t1\n229\t1\t0.0\t1\t1\n232\t2\t0.0\t1\t2\n238\t1\t0.0\t1\t1\n242\t7\t0.0\t1\t7\n251\t1\t0.0\t1\t0 1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: CTACAAG; Type: regular 3'; Length: 7; Trimmed: 15 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 73.3%\n  G: 0.0%\n  T: 0.0%\n  none/other: 26.7%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t1\t0.0\t0\t1\n228\t2\t0.0\t0\t2\n229\t1\t0.0\t0\t1\n238\t3\t0.0\t0\t3\n241\t1\t0.0\t0\t1\n243\t1\t0.0\t0\t1\n246\t1\t0.0\t0\t1\n248\t1\t0.0\t0\t1\n250\t1\t0.0\t0\t1\n251\t3\t0.0\t0\t3\n\n\nWARNING:\n    One or more of your adapter sequences may be incomplete.\n    Please see the detailed output above.\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:03:51", "plugin": "core", "name": "start_epoch", "raw_value": "1741590231.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:03:52", "plugin": "core", "name": "end_epoch", "raw_value": "1741590232.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-23", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 23, "time_seconds": 35.85985493659973, "inputs": {"library|input_1": {"src": "hda", "id": "e4e9ac4280389b36"}, "library|input_2": {"src": "hda", "id": "b34be74b9b143c22"}, "library|r1|adapters_0|adapter_source|adapter": "ATCTGGTTCC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "CTACAAG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "30", "filter_options|minimum_length2": "10", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "b0af067ca2e206cb", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:32:09.737163", "update_time": "2025-03-10T07:32:24.356264", "galaxy_version": "24.2", "external_id": "gxy-84ptt", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/1/d/dataset_f1d419ac-29a8-4d2b-a593-39d155fb0fbc.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/c/c/5/dataset_cc553e65-dc92-4387-aa25-622718655f54.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'ATCTGGTTCC'    -A 'CTACAAG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=30:10  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 266, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 267, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"ATCTGGTTCC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CTACAAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"30\", \"minimum_length2\": \"10\", \"pair_filter\": \"both\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "e4e9ac4280389b36", "src": "hda", "uuid": "f1d419ac-29a8-4d2b-a593-39d155fb0fbc"}, "library|input_2": {"id": "b34be74b9b143c22", "src": "hda", "uuid": "cc553e65-dc92-4387-aa25-622718655f54"}}, "outputs": {"out1": {"id": "28892c97dbfe1941", "src": "hda", "uuid": "08975a9d-a75b-4211-9799-2f9c416afc8c"}, "out2": {"id": "64ceec58c2ced0f8", "src": "hda", "uuid": "8fd6fe16-5c8e-4cd5-a341-4a7a8f87ff76"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a ATCTGGTTCC -A CTACAAG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=30:10 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.181 s (1830.325 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                      32 (32.3%)\n  Read 2 with adapter:                      15 (15.2%)\n\n== Read fate breakdown ==\nPairs that were too short:                   3 (3.0%)\nPairs written (passing filters):            96 (97.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         38,492 bp (79.7%)\n  Read 1:        17,741 bp\n  Read 2:        20,751 bp\n\n=== First read: Adapter 1 ===\n\nSequence: ATCTGGTTCC; Type: regular 3'; Length: 10; Trimmed: 32 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 90.6%\n  G: 3.1%\n  T: 0.0%\n  none/other: 6.2%\nWARNING:\n    The adapter is preceded by 'C' extremely often.\n    The provided adapter sequence could be incomplete at its 5' end.\n    Ignore this warning when trimming primers.\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n13\t1\t0.0\t1\t1\n14\t1\t0.0\t1\t1\n201\t1\t0.0\t1\t1\n203\t1\t0.0\t1\t1\n208\t2\t0.0\t1\t2\n209\t1\t0.0\t1\t1\n211\t1\t0.0\t1\t1\n214\t2\t0.0\t1\t2\n217\t2\t0.0\t1\t2\n218\t1\t0.0\t1\t1\n222\t1\t0.0\t1\t1\n226\t1\t0.0\t1\t1\n227\t2\t0.0\t1\t2\n228\t1\t0.0\t1\t1\n229\t1\t0.0\t1\t1\n232\t2\t0.0\t1\t2\n238\t1\t0.0\t1\t1\n242\t7\t0.0\t1\t7\n251\t1\t0.0\t1\t0 1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: CTACAAG; Type: regular 3'; Length: 7; Trimmed: 15 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 73.3%\n  G: 0.0%\n  T: 0.0%\n  none/other: 26.7%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t1\t0.0\t0\t1\n228\t2\t0.0\t0\t2\n229\t1\t0.0\t0\t1\n238\t3\t0.0\t0\t3\n241\t1\t0.0\t0\t1\n243\t1\t0.0\t0\t1\n246\t1\t0.0\t0\t1\n248\t1\t0.0\t0\t1\n250\t1\t0.0\t0\t1\n251\t3\t0.0\t0\t3\n\n\nWARNING:\n    One or more of your adapter sequences may be incomplete.\n    Please see the detailed output above.\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a ATCTGGTTCC -A CTACAAG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=30:10 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.181 s (1830.325 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                      32 (32.3%)\n  Read 2 with adapter:                      15 (15.2%)\n\n== Read fate breakdown ==\nPairs that were too short:                   3 (3.0%)\nPairs written (passing filters):            96 (97.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         38,492 bp (79.7%)\n  Read 1:        17,741 bp\n  Read 2:        20,751 bp\n\n=== First read: Adapter 1 ===\n\nSequence: ATCTGGTTCC; Type: regular 3'; Length: 10; Trimmed: 32 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 90.6%\n  G: 3.1%\n  T: 0.0%\n  none/other: 6.2%\nWARNING:\n    The adapter is preceded by 'C' extremely often.\n    The provided adapter sequence could be incomplete at its 5' end.\n    Ignore this warning when trimming primers.\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n13\t1\t0.0\t1\t1\n14\t1\t0.0\t1\t1\n201\t1\t0.0\t1\t1\n203\t1\t0.0\t1\t1\n208\t2\t0.0\t1\t2\n209\t1\t0.0\t1\t1\n211\t1\t0.0\t1\t1\n214\t2\t0.0\t1\t2\n217\t2\t0.0\t1\t2\n218\t1\t0.0\t1\t1\n222\t1\t0.0\t1\t1\n226\t1\t0.0\t1\t1\n227\t2\t0.0\t1\t2\n228\t1\t0.0\t1\t1\n229\t1\t0.0\t1\t1\n232\t2\t0.0\t1\t2\n238\t1\t0.0\t1\t1\n242\t7\t0.0\t1\t7\n251\t1\t0.0\t1\t0 1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: CTACAAG; Type: regular 3'; Length: 7; Trimmed: 15 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 73.3%\n  G: 0.0%\n  T: 0.0%\n  none/other: 26.7%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t1\t0.0\t0\t1\n228\t2\t0.0\t0\t2\n229\t1\t0.0\t0\t1\n238\t3\t0.0\t0\t3\n241\t1\t0.0\t0\t1\n243\t1\t0.0\t0\t1\n246\t1\t0.0\t0\t1\n248\t1\t0.0\t0\t1\n250\t1\t0.0\t0\t1\n251\t3\t0.0\t0\t3\n\n\nWARNING:\n    One or more of your adapter sequences may be incomplete.\n    Please see the detailed output above.\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:32:12", "plugin": "core", "name": "start_epoch", "raw_value": "1741591932.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:32:12", "plugin": "core", "name": "end_epoch", "raw_value": "1741591932.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-24", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 24, "time_seconds": 37.408981800079346, "inputs": {"library|input_1": {"src": "hda", "id": "261c800160c9c5b7"}, "library|input_2": {"src": "hda", "id": "c64ebebbc065a692"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|maximum_length": "50", "filter_options|maximum_length2": "30", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "9879aed3b56ed0b7", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:04:28.111250", "update_time": "2025-03-10T07:04:42.190734", "galaxy_version": "24.2", "external_id": "gxy-n29k6", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/9/4/dataset_99419e4b-f8c4-4172-8cab-3a3430928c5d.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/4/5/e/dataset_45e85afe-e507-4678-ad97-5fc7edcfa931.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1 --maximum-length=50:30  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 137, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 138, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"50\", \"maximum_length2\": \"30\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"both\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "261c800160c9c5b7", "src": "hda", "uuid": "99419e4b-f8c4-4172-8cab-3a3430928c5d"}, "library|input_2": {"id": "c64ebebbc065a692", "src": "hda", "uuid": "45e85afe-e507-4678-ad97-5fc7edcfa931"}}, "outputs": {"out1": {"id": "92ed1ad05d4a6341", "src": "hda", "uuid": "bc8009a8-4211-48eb-b14d-724c66bd7cfb"}, "out2": {"id": "9f84f7d9e844ff91", "src": "hda", "uuid": "727dd438-5e01-414e-abe5-ae52de175c90"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.187 s (1884.778 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.187 s (1884.778 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:04:30", "plugin": "core", "name": "start_epoch", "raw_value": "1741590270.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:04:30", "plugin": "core", "name": "end_epoch", "raw_value": "1741590270.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-24", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 24, "time_seconds": 37.25983786582947, "inputs": {"library|input_1": {"src": "hda", "id": "982da76066ebc5fc"}, "library|input_2": {"src": "hda", "id": "cb1a96210f52d6c9"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|maximum_length": "50", "filter_options|maximum_length2": "30", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "6deb2de97c293471", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:32:47.379244", "update_time": "2025-03-10T07:33:01.761783", "galaxy_version": "24.2", "external_id": "gxy-kgml5", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/b/5/dataset_2b5db431-571b-44ae-aaf3-b67f255878ff.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/5/3/a/dataset_53a076c5-1143-413c-b56c-799c13795707.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1 --maximum-length=50:30  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 270, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 271, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"50\", \"maximum_length2\": \"30\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"both\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "982da76066ebc5fc", "src": "hda", "uuid": "2b5db431-571b-44ae-aaf3-b67f255878ff"}, "library|input_2": {"id": "cb1a96210f52d6c9", "src": "hda", "uuid": "53a076c5-1143-413c-b56c-799c13795707"}}, "outputs": {"out1": {"id": "f63eb170e9c97574", "src": "hda", "uuid": "214c4a3c-ae1c-4a64-b305-9f15e491f077"}, "out2": {"id": "388bd07397b18118", "src": "hda", "uuid": "b79ea4b2-ff89-438c-b151-e2a2d2faaf4a"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.181 s (1831.683 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.181 s (1831.683 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:32:48", "plugin": "core", "name": "start_epoch", "raw_value": "1741591968.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:32:49", "plugin": "core", "name": "end_epoch", "raw_value": "1741591969.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-25", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 25, "time_seconds": 36.24160170555115, "inputs": {"library|input_1": {"src": "hda", "id": "d59d2cbe132bacac"}, "library|input_2": {"src": "hda", "id": "50c5bd130308f37a"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "10", "filter_options|maximum_length": "50", "filter_options|maximum_length2": "30", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "90ebfe7c419d8b49", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:05:04.197808", "update_time": "2025-03-10T07:05:18.510488", "galaxy_version": "24.2", "external_id": "gxy-4878r", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/a/3/dataset_4a3af3b8-a1e8-4de3-b106-c414a61e9080.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/c/3/0/dataset_c30b22c5-2b66-4dc7-84b3-056d151bb3aa.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=10 --maximum-length=50:30  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 141, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 142, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"50\", \"maximum_length2\": \"30\", \"minimum_length\": \"10\", \"minimum_length2\": \"\", \"pair_filter\": \"both\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "d59d2cbe132bacac", "src": "hda", "uuid": "4a3af3b8-a1e8-4de3-b106-c414a61e9080"}, "library|input_2": {"id": "50c5bd130308f37a", "src": "hda", "uuid": "c30b22c5-2b66-4dc7-84b3-056d151bb3aa"}}, "outputs": {"out1": {"id": "ff0303eceef84217", "src": "hda", "uuid": "247249ce-044d-46c6-b9ce-c1c0a950b931"}, "out2": {"id": "5c7350eaea385562", "src": "hda", "uuid": "a71f6225-5ca9-4f41-9893-f5c7bbc6673f"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.162 s (1634.966 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.162 s (1634.966 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:05:06", "plugin": "core", "name": "start_epoch", "raw_value": "1741590306.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:05:06", "plugin": "core", "name": "end_epoch", "raw_value": "1741590306.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-25", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 25, "time_seconds": 36.8054358959198, "inputs": {"library|input_1": {"src": "hda", "id": "58d60148680c92ed"}, "library|input_2": {"src": "hda", "id": "260bea3a044cece0"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "10", "filter_options|maximum_length": "50", "filter_options|maximum_length2": "30", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "49f0e68ccf77ed68", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:33:25.394892", "update_time": "2025-03-10T07:33:38.537515", "galaxy_version": "24.2", "external_id": "gxy-54dfw", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/5/d/dataset_75d1f940-1c09-451e-ae7a-7d9df7d81aaa.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/b/3/d/dataset_b3d49a14-12cf-4b51-a0df-ca86a41735bc.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=10 --maximum-length=50:30  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 274, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 275, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"50\", \"maximum_length2\": \"30\", \"minimum_length\": \"10\", \"minimum_length2\": \"\", \"pair_filter\": \"both\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "58d60148680c92ed", "src": "hda", "uuid": "75d1f940-1c09-451e-ae7a-7d9df7d81aaa"}, "library|input_2": {"id": "260bea3a044cece0", "src": "hda", "uuid": "b3d49a14-12cf-4b51-a0df-ca86a41735bc"}}, "outputs": {"out1": {"id": "d76e6fdb880b20ce", "src": "hda", "uuid": "bacbfbc6-ff61-4ad9-ac02-c5e1f633aa88"}, "out2": {"id": "10c8b2322f3173ab", "src": "hda", "uuid": "f72ab225-6729-49da-9204-d07ee4c6f12d"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.159 s (1607.864 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.159 s (1607.864 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:33:27", "plugin": "core", "name": "start_epoch", "raw_value": "1741592007.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:33:27", "plugin": "core", "name": "end_epoch", "raw_value": "1741592007.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-26", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 26, "time_seconds": 36.78182291984558, "inputs": {"library|input_1": {"src": "hda", "id": "89fdb1ad6744d36a"}, "library|input_2": {"src": "hda", "id": "91a0b9dbc13687a1"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "10", "filter_options|minimum_length2": "10", "filter_options|maximum_length": "50", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "56038d25fbd413e6", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:05:40.452735", "update_time": "2025-03-10T07:05:55.219430", "galaxy_version": "24.2", "external_id": "gxy-5wrcx", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/f/1/dataset_0f1d3a69-e306-4cb7-a8b5-48592ece528a.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/c/a/5/dataset_ca50f2ff-5fb0-418c-a9cb-d5c7bae5a584.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=10:10 --maximum-length=50  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 145, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 146, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"50\", \"maximum_length2\": \"\", \"minimum_length\": \"10\", \"minimum_length2\": \"10\", \"pair_filter\": \"both\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "89fdb1ad6744d36a", "src": "hda", "uuid": "0f1d3a69-e306-4cb7-a8b5-48592ece528a"}, "library|input_2": {"id": "91a0b9dbc13687a1", "src": "hda", "uuid": "ca50f2ff-5fb0-418c-a9cb-d5c7bae5a584"}}, "outputs": {"out1": {"id": "a257f756bbdf4e07", "src": "hda", "uuid": "e2b1902a-1899-4b61-9870-8337a15a8c0d"}, "out2": {"id": "51aa4f37065ec43c", "src": "hda", "uuid": "cce043a1-d1de-4b07-9411-19bbecee8543"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10:10 --maximum-length=50 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.158 s (1597.089 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10:10 --maximum-length=50 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.158 s (1597.089 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:05:42", "plugin": "core", "name": "start_epoch", "raw_value": "1741590342.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:05:43", "plugin": "core", "name": "end_epoch", "raw_value": "1741590343.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-26", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 26, "time_seconds": 34.961302280426025, "inputs": {"library|input_1": {"src": "hda", "id": "c555cef3745bb687"}, "library|input_2": {"src": "hda", "id": "9d2710c29776f82d"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "10", "filter_options|minimum_length2": "10", "filter_options|maximum_length": "50", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "cf3e255041e783b0", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:33:59.829758", "update_time": "2025-03-10T07:34:13.656969", "galaxy_version": "24.2", "external_id": "gxy-pgk88", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/8/e/dataset_78e4cf14-eb8f-4744-96c6-14f1bb4eb465.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/e/5/c/dataset_e5cb74eb-30d6-4dcb-9d46-88132169f13b.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=10:10 --maximum-length=50  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 278, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 279, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"50\", \"maximum_length2\": \"\", \"minimum_length\": \"10\", \"minimum_length2\": \"10\", \"pair_filter\": \"both\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "c555cef3745bb687", "src": "hda", "uuid": "78e4cf14-eb8f-4744-96c6-14f1bb4eb465"}, "library|input_2": {"id": "9d2710c29776f82d", "src": "hda", "uuid": "e5cb74eb-30d6-4dcb-9d46-88132169f13b"}}, "outputs": {"out1": {"id": "e31dc1353b4cc67f", "src": "hda", "uuid": "2e7b5c64-8bd6-44a2-9e67-062a70ef2396"}, "out2": {"id": "716ce50d1e86b9ea", "src": "hda", "uuid": "e38a831d-5794-41d1-af37-4c1c65870fe1"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10:10 --maximum-length=50 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.166 s (1680.523 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10:10 --maximum-length=50 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.166 s (1680.523 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:34:01", "plugin": "core", "name": "start_epoch", "raw_value": "1741592041.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:34:02", "plugin": "core", "name": "end_epoch", "raw_value": "1741592042.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-27", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 27, "time_seconds": 35.963642835617065, "inputs": {"library|input_1": {"src": "hda", "id": "2a91f759e303fe6f"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "3prime", "other_trimming_options|shorten_options|shorten_values": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "df630fcb8d78f84e", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:06:17.288603", "update_time": "2025-03-10T07:06:31.899041", "galaxy_version": "24.2", "external_id": "gxy-l9kh8", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/f/b/dataset_5fb38d20-0a6a-4d91-9851-871826d95c80.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=10          -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 149, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"3prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "2a91f759e303fe6f", "src": "hda", "uuid": "5fb38d20-0a6a-4d91-9851-871826d95c80"}}, "outputs": {"out1": {"id": "17c411294e5862d2", "src": "hda", "uuid": "05c50401-2d9f-4215-b6de-8d9a9916eb60"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (14225.324 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (14225.324 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:06:19", "plugin": "core", "name": "start_epoch", "raw_value": "1741590379.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:06:20", "plugin": "core", "name": "end_epoch", "raw_value": "1741590380.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-27", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 27, "time_seconds": 34.390604734420776, "inputs": {"library|input_1": {"src": "hda", "id": "db6a3d6fe7440002"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "3prime", "other_trimming_options|shorten_options|shorten_values": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "c85d3ddb1a061845", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:34:34.411257", "update_time": "2025-03-10T07:34:48.486589", "galaxy_version": "24.2", "external_id": "gxy-bn7qp", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/2/3/dataset_823ac454-29a7-4f35-8d6d-936d2e05c053.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=10          -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 282, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"3prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "db6a3d6fe7440002", "src": "hda", "uuid": "823ac454-29a7-4f35-8d6d-936d2e05c053"}}, "outputs": {"out1": {"id": "1d700fadcb248475", "src": "hda", "uuid": "73f0f279-f846-4c85-a05a-7b7445b2c78d"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.042 s (13915.300 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.042 s (13915.300 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:34:36", "plugin": "core", "name": "start_epoch", "raw_value": "1741592076.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:34:36", "plugin": "core", "name": "end_epoch", "raw_value": "1741592076.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-28", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 28, "time_seconds": 34.179598569869995, "inputs": {"library|input_1": {"src": "hda", "id": "0777ac095c667f83"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "5prime", "other_trimming_options|shorten_options|shorten_values": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "3eddf4b9feb35612", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:06:51.537273", "update_time": "2025-03-10T07:07:06.169420", "galaxy_version": "24.2", "external_id": "gxy-fbx4r", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/0/9/dataset_9093fb03-6b1d-4ca4-85b7-5fe7ae883f09.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=-10          -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 151, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"5prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "0777ac095c667f83", "src": "hda", "uuid": "9093fb03-6b1d-4ca4-85b7-5fe7ae883f09"}}, "outputs": {"out1": {"id": "ff80167fcbcf49b3", "src": "hda", "uuid": "d249174c-2b7e-444c-8074-ebf3977e27e8"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=-10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.044 s (14559.269 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=-10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.044 s (14559.269 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:06:53", "plugin": "core", "name": "start_epoch", "raw_value": "1741590413.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:06:53", "plugin": "core", "name": "end_epoch", "raw_value": "1741590413.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-28", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 28, "time_seconds": 34.44649696350098, "inputs": {"library|input_1": {"src": "hda", "id": "4116c3de7bec1995"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "5prime", "other_trimming_options|shorten_options|shorten_values": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "8696bb55a9118c46", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:35:08.960487", "update_time": "2025-03-10T07:35:23.089220", "galaxy_version": "24.2", "external_id": "gxy-dv4cq", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/4/4/dataset_044d4461-6b17-46e7-ba17-d19fd654db61.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=-10          -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 284, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"5prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "4116c3de7bec1995", "src": "hda", "uuid": "044d4461-6b17-46e7-ba17-d19fd654db61"}}, "outputs": {"out1": {"id": "e4432dda2fba5c59", "src": "hda", "uuid": "d20f67fe-ec27-4e8e-9b05-e21614e0016a"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=-10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.046 s (15423.059 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=-10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.046 s (15423.059 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:35:10", "plugin": "core", "name": "start_epoch", "raw_value": "1741592110.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:35:11", "plugin": "core", "name": "end_epoch", "raw_value": "1741592111.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-29", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 29, "time_seconds": 35.33301830291748, "inputs": {"library|input_1": {"src": "hda", "id": "65f59b0e20f13045"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "3prime", "other_trimming_options|shorten_options|shorten_values": "True", "other_trimming_options|shorten_options_r2|length2": "10", "other_trimming_options|shorten_options_r2|shorten_end_r2": "5prime", "other_trimming_options|shorten_options_r2|shorten_values_r2": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "6effcfa21ac05130", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:07:27.061608", "update_time": "2025-03-10T07:07:40.998290", "galaxy_version": "24.2", "external_id": "gxy-p9vwr", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/6/1/dataset_f619fb6c-c063-49da-a5c5-6b769abde351.dat' 'cutadapt_small_fastq_1.fq' && ln -f -s '/galaxy/server/database/objects/f/6/1/dataset_f619fb6c-c063-49da-a5c5-6b769abde351.dat' 'cutadapt_small_fastq_2.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    -A 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=10 -L -10          -o 'out1.fq' -p 'out2.fq'  'cutadapt_small_fastq_1.fq' 'cutadapt_small_fastq_2.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 153, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 153, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"3prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 0, \"length2\": \"10\", \"shorten_end_r2\": \"5prime\", \"shorten_values_r2\": \"True\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "65f59b0e20f13045", "src": "hda", "uuid": "f619fb6c-c063-49da-a5c5-6b769abde351"}, "library|input_2": {"id": "65f59b0e20f13045", "src": "hda", "uuid": "f619fb6c-c063-49da-a5c5-6b769abde351"}}, "outputs": {"out1": {"id": "d2780f7acf12fc74", "src": "hda", "uuid": "87e646df-0398-4d98-b5eb-d0ca3d58cfb8"}, "out2": {"id": "8ab5e12faaa90dde", "src": "hda", "uuid": "87d67563-58bb-4479-962b-eeef411b1cbc"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCCGCTANGACG -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -L -10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 8 cores ...\nFinished in 0.078 s (25973.399 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 1 with adapter:                       1 (33.3%)\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):             40 bp (19.6%)\n  Read 1:            20 bp\n  Read 2:            20 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCCGCTANGACG -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -L -10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 8 cores ...\nFinished in 0.078 s (25973.399 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 1 with adapter:                       1 (33.3%)\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):             40 bp (19.6%)\n  Read 1:            20 bp\n  Read 2:            20 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:07:28", "plugin": "core", "name": "start_epoch", "raw_value": "1741590448.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:07:29", "plugin": "core", "name": "end_epoch", "raw_value": "1741590449.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-29", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 29, "time_seconds": 36.23103618621826, "inputs": {"library|input_1": {"src": "hda", "id": "fb18be5026df19e4"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "3prime", "other_trimming_options|shorten_options|shorten_values": "True", "other_trimming_options|shorten_options_r2|length2": "10", "other_trimming_options|shorten_options_r2|shorten_end_r2": "5prime", "other_trimming_options|shorten_options_r2|shorten_values_r2": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "7710bfc7f8ac9bf5", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:35:44.765838", "update_time": "2025-03-10T07:35:58.760670", "galaxy_version": "24.2", "external_id": "gxy-7txlv", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/a/c/dataset_9ac9c628-c4d8-4bfb-bc1b-b2fbed03de6b.dat' 'cutadapt_small_fastq_1.fq' && ln -f -s '/galaxy/server/database/objects/9/a/c/dataset_9ac9c628-c4d8-4bfb-bc1b-b2fbed03de6b.dat' 'cutadapt_small_fastq_2.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    -A 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=10 -L -10          -o 'out1.fq' -p 'out2.fq'  'cutadapt_small_fastq_1.fq' 'cutadapt_small_fastq_2.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 286, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 286, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"3prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 0, \"length2\": \"10\", \"shorten_end_r2\": \"5prime\", \"shorten_values_r2\": \"True\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "fb18be5026df19e4", "src": "hda", "uuid": "9ac9c628-c4d8-4bfb-bc1b-b2fbed03de6b"}, "library|input_2": {"id": "fb18be5026df19e4", "src": "hda", "uuid": "9ac9c628-c4d8-4bfb-bc1b-b2fbed03de6b"}}, "outputs": {"out1": {"id": "ec1444753aa02574", "src": "hda", "uuid": "93d88274-bae7-49cd-9220-ea396bd620bf"}, "out2": {"id": "573ba5c255b32169", "src": "hda", "uuid": "8d60df7d-02ac-4ab9-a8a2-8422c473cced"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCCGCTANGACG -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -L -10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 8 cores ...\nFinished in 0.068 s (22540.808 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 1 with adapter:                       1 (33.3%)\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):             40 bp (19.6%)\n  Read 1:            20 bp\n  Read 2:            20 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCCGCTANGACG -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -L -10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 8 cores ...\nFinished in 0.068 s (22540.808 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 1 with adapter:                       1 (33.3%)\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):             40 bp (19.6%)\n  Read 1:            20 bp\n  Read 2:            20 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:35:46", "plugin": "core", "name": "start_epoch", "raw_value": "1741592146.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:35:47", "plugin": "core", "name": "end_epoch", "raw_value": "1741592147.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-3", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 3, "time_seconds": 39.156519174575806, "inputs": {"library|input_1": {"src": "hdca", "id": "000606222d0b11b4"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired_collection"}, "job": {"model_class": "Job", "id": "23ab2a21b150c0ec", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:52:03.926753", "update_time": "2025-03-10T06:52:19.482834", "galaxy_version": "24.2", "external_id": "gxy-nc955", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/d/f/dataset_5df52191-2982-4580-aeeb-8cc2d3372a15.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/b/d/f/dataset_bdfda5e1-70ff-4cd2-9ef1-cb8a9d490c63.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 5, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_11": {"id": "9eaaca687a141f82", "src": "hda", "uuid": "5df52191-2982-4580-aeeb-8cc2d3372a15"}, "library|input_12": {"id": "181bc82ab58f64af", "src": "hda", "uuid": "bdfda5e1-70ff-4cd2-9ef1-cb8a9d490c63"}}, "outputs": {"out_pairs|__part__|forward": {"id": "f18ef6fc793ac154", "src": "hda", "uuid": "33bd57a0-7ac2-421c-a9dc-f3656252deb5"}, "out_pairs|__part__|reverse": {"id": "790723ecdaa71cf2", "src": "hda", "uuid": "b3483b49-22d3-4666-a080-198993910c9b"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "e0c42f7948734cb5"}}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.183 s (1851.294 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.183 s (1851.294 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:52:06", "plugin": "core", "name": "start_epoch", "raw_value": "1741589526.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:52:06", "plugin": "core", "name": "end_epoch", "raw_value": "1741589526.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-3", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 3, "time_seconds": 37.7352979183197, "inputs": {"library|input_1": {"src": "hdca", "id": "d8650d63f0929c8d"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired_collection"}, "job": {"model_class": "Job", "id": "51aa4f37065ec43c", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:20:18.538419", "update_time": "2025-03-10T07:20:32.749522", "galaxy_version": "24.2", "external_id": "gxy-5x5l2", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/9/a/dataset_f9a32b9f-ccfb-4b00-82e5-5b37fe4755b7.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/3/a/3/dataset_3a3e2a13-d602-47f6-9514-4263f65ee724.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 15, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_11": {"id": "798904bba62215a0", "src": "hda", "uuid": "f9a32b9f-ccfb-4b00-82e5-5b37fe4755b7"}, "library|input_12": {"id": "a0f68f728b74a057", "src": "hda", "uuid": "3a3e2a13-d602-47f6-9514-4263f65ee724"}}, "outputs": {"out_pairs|__part__|forward": {"id": "a641c9855529050d", "src": "hda", "uuid": "f96176eb-24ea-424f-b350-18f1b483f53c"}, "out_pairs|__part__|reverse": {"id": "9491c293f1cc33fe", "src": "hda", "uuid": "a6489880-d618-40ff-8069-42b731663341"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "a97da8298d05a6eb"}}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.182 s (1834.323 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.182 s (1834.323 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:20:21", "plugin": "core", "name": "start_epoch", "raw_value": "1741591221.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:20:21", "plugin": "core", "name": "end_epoch", "raw_value": "1741591221.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-30", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 30, "time_seconds": 36.533945083618164, "inputs": {"library|input_1": {"src": "hda", "id": "2d48e0e5ea6f16db"}, "library|r2|adapters2_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "other_trimming_options|shorten_options_r2|length2": "10", "other_trimming_options|shorten_options_r2|shorten_end_r2": "3prime", "other_trimming_options|shorten_options_r2|shorten_values_r2": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "2497c697700eb0bf", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:08:02.415463", "update_time": "2025-03-10T07:08:17.662509", "galaxy_version": "24.2", "external_id": "gxy-85ggs", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/d/0/b/dataset_d0b25e42-7d2c-4eee-8528-6aaa71306659.dat' 'cutadapt_small_fastq_1.fq' && ln -f -s '/galaxy/server/database/objects/d/0/b/dataset_d0b25e42-7d2c-4eee-8528-6aaa71306659.dat' 'cutadapt_small_fastq_2.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    -A 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     -L 10          -o 'out1.fq' -p 'out2.fq'  'cutadapt_small_fastq_1.fq' 'cutadapt_small_fastq_2.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 156, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 156, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 0, \"length2\": \"10\", \"shorten_end_r2\": \"3prime\", \"shorten_values_r2\": \"True\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "2d48e0e5ea6f16db", "src": "hda", "uuid": "d0b25e42-7d2c-4eee-8528-6aaa71306659"}, "library|input_2": {"id": "2d48e0e5ea6f16db", "src": "hda", "uuid": "d0b25e42-7d2c-4eee-8528-6aaa71306659"}}, "outputs": {"out1": {"id": "23c5ee77ece25c59", "src": "hda", "uuid": "52f47ca9-c8e1-476d-9710-acd3fc02d66e"}, "out2": {"id": "30327aee8dac1ed9", "src": "hda", "uuid": "98556393-b2ad-4bf2-8756-2cf356aa2fd5"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim -L 10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 8 cores ...\nFinished in 0.053 s (17713.070 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):            122 bp (59.8%)\n  Read 1:           102 bp\n  Read 2:            20 bp\n\n=== Second read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim -L 10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 8 cores ...\nFinished in 0.053 s (17713.070 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):            122 bp (59.8%)\n  Read 1:           102 bp\n  Read 2:            20 bp\n\n=== Second read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:08:04", "plugin": "core", "name": "start_epoch", "raw_value": "1741590484.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:08:05", "plugin": "core", "name": "end_epoch", "raw_value": "1741590485.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-30", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 30, "time_seconds": 33.53951048851013, "inputs": {"library|input_1": {"src": "hda", "id": "8c96a72027001804"}, "library|r2|adapters2_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "other_trimming_options|shorten_options_r2|length2": "10", "other_trimming_options|shorten_options_r2|shorten_end_r2": "3prime", "other_trimming_options|shorten_options_r2|shorten_values_r2": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "837f7d5510ba8ce4", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:36:18.399240", "update_time": "2025-03-10T07:36:32.633623", "galaxy_version": "24.2", "external_id": "gxy-w8br4", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/3/4/dataset_43474519-4115-42e3-9102-edc988286606.dat' 'cutadapt_small_fastq_1.fq' && ln -f -s '/galaxy/server/database/objects/4/3/4/dataset_43474519-4115-42e3-9102-edc988286606.dat' 'cutadapt_small_fastq_2.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    -A 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     -L 10          -o 'out1.fq' -p 'out2.fq'  'cutadapt_small_fastq_1.fq' 'cutadapt_small_fastq_2.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 289, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 289, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 0, \"length2\": \"10\", \"shorten_end_r2\": \"3prime\", \"shorten_values_r2\": \"True\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\"", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}"}, "inputs": {"library|input_1": {"id": "8c96a72027001804", "src": "hda", "uuid": "43474519-4115-42e3-9102-edc988286606"}, "library|input_2": {"id": "8c96a72027001804", "src": "hda", "uuid": "43474519-4115-42e3-9102-edc988286606"}}, "outputs": {"out1": {"id": "bef3ca8350ba3bf2", "src": "hda", "uuid": "1c918a05-5e17-4f79-8929-01e02e26141b"}, "out2": {"id": "af9c60a7ca9b364f", "src": "hda", "uuid": "9e380412-a89e-47ac-8f1d-c4a76da41fe6"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim -L 10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 8 cores ...\nFinished in 0.052 s (17332.554 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):            122 bp (59.8%)\n  Read 1:           102 bp\n  Read 2:            20 bp\n\n=== Second read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim -L 10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 8 cores ...\nFinished in 0.052 s (17332.554 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):            122 bp (59.8%)\n  Read 1:           102 bp\n  Read 2:            20 bp\n\n=== Second read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:36:20", "plugin": "core", "name": "start_epoch", "raw_value": "1741592180.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:36:20", "plugin": "core", "name": "end_epoch", "raw_value": "1741592180.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-31", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 31, "time_seconds": 33.942954540252686, "inputs": {"library|input_1": {"src": "hda", "id": "2b502a1031a4edca"}, "library|r1|adapters_0|adapter_source|adapter": "AGCGGCTTAGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "filter_options|max_expected_errors": "10"}, "job": {"model_class": "Job", "id": "5c31800ccce4afd8", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:08:38.268951", "update_time": "2025-03-10T07:08:52.073612", "galaxy_version": "24.2", "external_id": "gxy-jsxw4", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/1/4/dataset_414878bb-82b2-4ee0-acd5-28bf2480205d.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCGGCTTAGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1 --max-ee=10.0      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 159, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCGGCTTAGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"10.0\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "2b502a1031a4edca", "src": "hda", "uuid": "414878bb-82b2-4ee0-acd5-28bf2480205d"}}, "outputs": {"out1": {"id": "d4c2a658b10850b5", "src": "hda", "uuid": "367e3ff8-1cc4-4644-9bd7-5cb2469c6c80"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCGGCTTAGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --max-ee=10.0 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.046 s (15312.354 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads with too many exp. errors:             0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGCGGCTTAGACG; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCGGCTTAGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --max-ee=10.0 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.046 s (15312.354 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads with too many exp. errors:             0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGCGGCTTAGACG; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:08:39", "plugin": "core", "name": "start_epoch", "raw_value": "1741590519.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:08:40", "plugin": "core", "name": "end_epoch", "raw_value": "1741590520.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-31", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 31, "time_seconds": 32.26200771331787, "inputs": {"library|input_1": {"src": "hda", "id": "8b34c68f9a19e24d"}, "library|r1|adapters_0|adapter_source|adapter": "AGCGGCTTAGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "filter_options|max_expected_errors": "10"}, "job": {"model_class": "Job", "id": "430465d7eb27d99c", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:36:52.324009", "update_time": "2025-03-10T07:37:05.279586", "galaxy_version": "24.2", "external_id": "gxy-t9qwl", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/c/a/dataset_7ca8f900-10b7-4b15-83d1-1bab7ff21e9c.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCGGCTTAGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1 --max-ee=10.0      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 292, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCGGCTTAGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"10.0\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "8b34c68f9a19e24d", "src": "hda", "uuid": "7ca8f900-10b7-4b15-83d1-1bab7ff21e9c"}}, "outputs": {"out1": {"id": "6a0c1d529e9bcf0a", "src": "hda", "uuid": "f09dc36f-00a9-4e4c-acfc-929010ff747d"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCGGCTTAGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --max-ee=10.0 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (14246.305 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads with too many exp. errors:             0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGCGGCTTAGACG; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGCGGCTTAGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --max-ee=10.0 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (14246.305 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads with too many exp. errors:             0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGCGGCTTAGACG; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:36:54", "plugin": "core", "name": "start_epoch", "raw_value": "1741592214.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:36:54", "plugin": "core", "name": "end_epoch", "raw_value": "1741592214.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-32", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 32, "time_seconds": 36.731586933135986, "inputs": {"library|input_1": {"src": "hda", "id": "39931889e8555bf7"}, "library|r1|adapters_0|adapter_source|adapter": "GAANTAGCTACCACX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "8d6ce220db791341", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:09:14.379530", "update_time": "2025-03-10T07:09:28.987472", "galaxy_version": "24.2", "external_id": "gxy-vmjvh", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/7/7/dataset_2774866e-19c3-4ad4-b570-41fc4d2149db.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'GAANTAGCTACCACX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 161, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"GAANTAGCTACCACX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "39931889e8555bf7", "src": "hda", "uuid": "2774866e-19c3-4ad4-b570-41fc4d2149db"}}, "outputs": {"out1": {"id": "b597a558341f5f42", "src": "hda", "uuid": "ecbeaed8-f495-40ac-8ab9-9f91aca90209"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a GAANTAGCTACCACX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.044 s (14671.008 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: GAANTAGCTACCAC; Type: non-internal 3'; Length: 14; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a GAANTAGCTACCACX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.044 s (14671.008 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: GAANTAGCTACCAC; Type: non-internal 3'; Length: 14; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:09:16", "plugin": "core", "name": "start_epoch", "raw_value": "1741590556.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:09:17", "plugin": "core", "name": "end_epoch", "raw_value": "1741590557.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-32", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 32, "time_seconds": 33.61262822151184, "inputs": {"library|input_1": {"src": "hda", "id": "d0f60ffa430269fe"}, "library|r1|adapters_0|adapter_source|adapter": "GAANTAGCTACCACX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "798904bba62215a0", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:37:24.973731", "update_time": "2025-03-10T07:37:39.047289", "galaxy_version": "24.2", "external_id": "gxy-2hgtp", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/7/b/dataset_67b3bd69-da0b-46e1-9623-44de5a08be69.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'GAANTAGCTACCACX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 294, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"GAANTAGCTACCACX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "d0f60ffa430269fe", "src": "hda", "uuid": "67b3bd69-da0b-46e1-9623-44de5a08be69"}}, "outputs": {"out1": {"id": "cbac837da3cbd99b", "src": "hda", "uuid": "01c0713b-627e-43b0-9647-49a0e815ab15"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a GAANTAGCTACCACX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.042 s (14020.046 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: GAANTAGCTACCAC; Type: non-internal 3'; Length: 14; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a GAANTAGCTACCACX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.042 s (14020.046 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: GAANTAGCTACCAC; Type: non-internal 3'; Length: 14; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:37:27", "plugin": "core", "name": "start_epoch", "raw_value": "1741592247.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:37:27", "plugin": "core", "name": "end_epoch", "raw_value": "1741592247.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-33", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 33, "time_seconds": 37.91887378692627, "inputs": {"library|input_1": {"src": "hda", "id": "e3d2e2d89eb60afd"}, "library|input_2": {"src": "hda", "id": "2d1c515c7efbbbe1"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGCX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGCX", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "ad2a85b4165b30b7", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:09:50.767591", "update_time": "2025-03-10T07:10:06.450569", "galaxy_version": "24.2", "external_id": "gxy-xk9pg", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/b/a/4/dataset_ba4ecb76-cf33-464f-b389-6ee2d319d5ef.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/d/7/7/dataset_d7704ad4-330a-401b-8739-a778936e3006.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGCX'    -A 'AGATCGGAAGAGCX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 163, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 164, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGCX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGCX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "e3d2e2d89eb60afd", "src": "hda", "uuid": "ba4ecb76-cf33-464f-b389-6ee2d319d5ef"}, "library|input_2": {"id": "2d1c515c7efbbbe1", "src": "hda", "uuid": "d7704ad4-330a-401b-8739-a778936e3006"}}, "outputs": {"out1": {"id": "43e1c17c5a3879b6", "src": "hda", "uuid": "a96981c8-8e22-4e98-8cf9-ec3bc6c9a9a4"}, "out2": {"id": "83004aefc5aacd71", "src": "hda", "uuid": "2ae5df84-e426-4c2e-bf08-cef7d7ae4e4f"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGCX -A AGATCGGAAGAGCX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.187 s (1890.317 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         48,270 bp (100.0%)\n  Read 1:        24,141 bp\n  Read 2:        24,129 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGCX -A AGATCGGAAGAGCX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.187 s (1890.317 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         48,270 bp (100.0%)\n  Read 1:        24,141 bp\n  Read 2:        24,129 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:09:52", "plugin": "core", "name": "start_epoch", "raw_value": "1741590592.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:09:53", "plugin": "core", "name": "end_epoch", "raw_value": "1741590593.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-33", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 33, "time_seconds": 35.25437879562378, "inputs": {"library|input_1": {"src": "hda", "id": "350dc757f74c2d9f"}, "library|input_2": {"src": "hda", "id": "59a3683414a3bc86"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGCX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGCX", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "9491c293f1cc33fe", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:38:00.010807", "update_time": "2025-03-10T07:38:13.876620", "galaxy_version": "24.2", "external_id": "gxy-4t5rd", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/8/3/dataset_483c38a6-30a2-4cd1-aa8d-45f19b30ac7a.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/e/1/0/dataset_e10359ed-01b1-4803-a0d4-4393b925baf8.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGCX'    -A 'AGATCGGAAGAGCX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 296, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 297, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGCX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGCX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "350dc757f74c2d9f", "src": "hda", "uuid": "483c38a6-30a2-4cd1-aa8d-45f19b30ac7a"}, "library|input_2": {"id": "59a3683414a3bc86", "src": "hda", "uuid": "e10359ed-01b1-4803-a0d4-4393b925baf8"}}, "outputs": {"out1": {"id": "cd5aa1caf6e4b5d5", "src": "hda", "uuid": "bb7b460d-770a-410f-8417-701c711816d6"}, "out2": {"id": "63180866ad2ff844", "src": "hda", "uuid": "d0a17bea-4430-4c52-8ab2-fd5c27d93011"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGCX -A AGATCGGAAGAGCX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.178 s (1802.444 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         48,270 bp (100.0%)\n  Read 1:        24,141 bp\n  Read 2:        24,129 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGCX -A AGATCGGAAGAGCX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.178 s (1802.444 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         48,270 bp (100.0%)\n  Read 1:        24,141 bp\n  Read 2:        24,129 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:38:01", "plugin": "core", "name": "start_epoch", "raw_value": "1741592281.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:38:02", "plugin": "core", "name": "end_epoch", "raw_value": "1741592282.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-34", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 34, "status": "skip"}}, {"id": "cutadapt/4.9+galaxy1-34", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 34, "status": "skip"}}, {"id": "cutadapt/4.9+galaxy1-35", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 35, "time_seconds": 38.411810636520386, "inputs": {"library|input_1": {"src": "hdca", "id": "c73c9c43b0e0aaa0"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r1|adapters_0|single_noindels": true, "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|single_noindels": true, "library|type": "paired_collection"}, "job": {"model_class": "Job", "id": "17290125749b6efe", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:10:29.430807", "update_time": "2025-03-10T07:10:45.326485", "galaxy_version": "24.2", "external_id": "gxy-44xrq", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/f/4/dataset_8f4b0273-2f09-4aee-91f0-eb1d1b5f62da.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/6/e/4/dataset_6e4d1eb2-46ac-4e71-871a-138ecc067b9b.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC;noindels'    -A 'AGATCGGAAGAGC;noindels'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 9, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": true}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": true}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_11": {"id": "4675d51c8296d9ff", "src": "hda", "uuid": "8f4b0273-2f09-4aee-91f0-eb1d1b5f62da"}, "library|input_12": {"id": "be8e8cb759f0be0e", "src": "hda", "uuid": "6e4d1eb2-46ac-4e71-871a-138ecc067b9b"}}, "outputs": {"out_pairs|__part__|forward": {"id": "c780463e1a78ffa3", "src": "hda", "uuid": "2eac2a59-8479-48a6-8f4c-d7adab58cff9"}, "out_pairs|__part__|reverse": {"id": "223f6f46381400a2", "src": "hda", "uuid": "68c9cf11-36f4-409b-813e-2afccecf0e29"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "4a764beaf96fb32f"}}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC;noindels -A AGATCGGAAGAGC;noindels --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.180 s (1822.946 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC;noindels -A AGATCGGAAGAGC;noindels --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.180 s (1822.946 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:10:32", "plugin": "core", "name": "start_epoch", "raw_value": "1741590632.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:10:32", "plugin": "core", "name": "end_epoch", "raw_value": "1741590632.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-35", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 35, "time_seconds": 35.30835843086243, "inputs": {"library|input_1": {"src": "hdca", "id": "427360be0c1c69a5"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r1|adapters_0|single_noindels": true, "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|single_noindels": true, "library|type": "paired_collection"}, "job": {"model_class": "Job", "id": "7b57c59ed2086a6b", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:38:35.559261", "update_time": "2025-03-10T07:38:49.751500", "galaxy_version": "24.2", "external_id": "gxy-tzbks", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/2/7/dataset_5276dbe7-2cce-49f6-9396-75f53d6f41de.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/2/9/1/dataset_2913e1e5-2367-4b68-873a-b90c50d95e83.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC;noindels'    -A 'AGATCGGAAGAGC;noindels'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 19, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": true}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": true}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_11": {"id": "dbc61596c508fd6a", "src": "hda", "uuid": "5276dbe7-2cce-49f6-9396-75f53d6f41de"}, "library|input_12": {"id": "a3190b019be1ced0", "src": "hda", "uuid": "2913e1e5-2367-4b68-873a-b90c50d95e83"}}, "outputs": {"out_pairs|__part__|forward": {"id": "427b5f2f9b56e798", "src": "hda", "uuid": "3604b8b4-89f4-43a1-b784-da1d6bf109e1"}, "out_pairs|__part__|reverse": {"id": "ddf18d5718e59d43", "src": "hda", "uuid": "6fc5e9e3-d26c-4090-9633-39668b34721f"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "6a0852436192a46e"}}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC;noindels -A AGATCGGAAGAGC;noindels --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.177 s (1791.364 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC;noindels -A AGATCGGAAGAGC;noindels --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.177 s (1791.364 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:38:37", "plugin": "core", "name": "start_epoch", "raw_value": "1741592317.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:38:38", "plugin": "core", "name": "end_epoch", "raw_value": "1741592318.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-36", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 36, "time_seconds": 37.82881999015808, "inputs": {"library|input_1": {"src": "hdca", "id": "6b0417b856053a99"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired_collection", "other_trimming_options|quality_cutoff": "5", "other_trimming_options|quality_cutoff2": "15,20"}, "job": {"model_class": "Job", "id": "a7d302e7a13f28c0", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:11:07.300606", "update_time": "2025-03-10T07:11:23.193973", "galaxy_version": "24.2", "external_id": "gxy-vtxqq", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/b/2/c/dataset_b2c4f553-4cf4-42e4-8371-c9d7c8d1ba60.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/5/f/7/dataset_5f7da767-1a19-4203-81b1-adbb4031a4a1.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=5 -Q 15,20       --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 11, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"5\", \"quality_cutoff2\": \"15,20\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_11": {"id": "aa98df4f0c70a60d", "src": "hda", "uuid": "b2c4f553-4cf4-42e4-8371-c9d7c8d1ba60"}, "library|input_12": {"id": "93476647764bae76", "src": "hda", "uuid": "5f7da767-1a19-4203-81b1-adbb4031a4a1"}}, "outputs": {"out_pairs|__part__|forward": {"id": "51db97d1fb148654", "src": "hda", "uuid": "a66d3dc7-cbe2-4ca6-8161-7207a5875e2f"}, "out_pairs|__part__|reverse": {"id": "5bb2431c729137fb", "src": "hda", "uuid": "76a1b06d-3873-49ac-a825-2724cc8e8c61"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "ff54edac015b108f"}}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=5 -Q 15,20 --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.184 s (1862.032 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nQuality-trimmed:                     747 bp (1.5%)\n  Read 1:             0 bp\n  Read 2:           747 bp\nTotal written (filtered):         48,938 bp (98.5%)\n  Read 1:        24,843 bp\n  Read 2:        24,095 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n4\t1\t0.4\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=5 -Q 15,20 --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.184 s (1862.032 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nQuality-trimmed:                     747 bp (1.5%)\n  Read 1:             0 bp\n  Read 2:           747 bp\nTotal written (filtered):         48,938 bp (98.5%)\n  Read 1:        24,843 bp\n  Read 2:        24,095 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n4\t1\t0.4\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:11:09", "plugin": "core", "name": "start_epoch", "raw_value": "1741590669.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:11:10", "plugin": "core", "name": "end_epoch", "raw_value": "1741590670.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-36", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 36, "time_seconds": 34.63961887359619, "inputs": {"library|input_1": {"src": "hdca", "id": "cf9a64477f7f1910"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired_collection", "other_trimming_options|quality_cutoff": "5", "other_trimming_options|quality_cutoff2": "15,20"}, "job": {"model_class": "Job", "id": "fb939f152bd164b3", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:39:10.600007", "update_time": "2025-03-10T07:39:24.411628", "galaxy_version": "24.2", "external_id": "gxy-wrdjm", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/3/3/dataset_73349d6d-1b1f-47e1-8c0e-9ce9ae7e4902.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/5/a/a/dataset_5aac3645-eda3-4252-b01e-c60ce7b776e8.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=5 -Q 15,20       --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 21, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"5\", \"quality_cutoff2\": \"15,20\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_11": {"id": "34c40358646ee439", "src": "hda", "uuid": "73349d6d-1b1f-47e1-8c0e-9ce9ae7e4902"}, "library|input_12": {"id": "7eeb93886f94e4b9", "src": "hda", "uuid": "5aac3645-eda3-4252-b01e-c60ce7b776e8"}}, "outputs": {"out_pairs|__part__|forward": {"id": "cb1723fe8e420812", "src": "hda", "uuid": "501842c5-41dd-40c4-be65-764950928586"}, "out_pairs|__part__|reverse": {"id": "0a950edaffbc4708", "src": "hda", "uuid": "665a7130-3043-4801-80fc-f43538689111"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "f7ef84d3cc41c8ac"}}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=5 -Q 15,20 --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.179 s (1803.085 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nQuality-trimmed:                     747 bp (1.5%)\n  Read 1:             0 bp\n  Read 2:           747 bp\nTotal written (filtered):         48,938 bp (98.5%)\n  Read 1:        24,843 bp\n  Read 2:        24,095 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n4\t1\t0.4\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=5 -Q 15,20 --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.179 s (1803.085 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nQuality-trimmed:                     747 bp (1.5%)\n  Read 1:             0 bp\n  Read 2:           747 bp\nTotal written (filtered):         48,938 bp (98.5%)\n  Read 1:        24,843 bp\n  Read 2:        24,095 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n4\t1\t0.4\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:39:12", "plugin": "core", "name": "start_epoch", "raw_value": "1741592352.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:39:13", "plugin": "core", "name": "end_epoch", "raw_value": "1741592353.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-37", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 37, "time_seconds": 37.112611293792725, "inputs": {"library|input_1": {"src": "hdca", "id": "eec5d6b98bddec5f"}, "library|type": "paired_collection", "other_trimming_options|poly_a": true}, "job": {"model_class": "Job", "id": "182264b17ea79434", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:11:45.802589", "update_time": "2025-03-10T07:12:00.397652", "galaxy_version": "24.2", "external_id": "gxy-56k7l", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/0/4/dataset_c040be93-9724-4382-b2d5-4e2ff8d12773.dat' 'Unnamed Collection_1.fa' && ln -f -s '/galaxy/server/database/objects/9/8/7/dataset_9871e240-f9b6-4f04-a6c8-9d308de56340.dat' 'Unnamed Collection_2.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}     --error-rate=0.1 --times=1 --overlap=3    --action=trim    --poly-a     --minimum-length=1      -o 'out1.fa' -p 'out2.fa'  'Unnamed Collection_1.fa' 'Unnamed Collection_2.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 13, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": true, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_11": {"id": "45608ebb6d18efee", "src": "hda", "uuid": "c040be93-9724-4382-b2d5-4e2ff8d12773"}, "library|input_12": {"id": "b9926d0ae27fa132", "src": "hda", "uuid": "9871e240-f9b6-4f04-a6c8-9d308de56340"}}, "outputs": {"out_pairs|__part__|forward": {"id": "7ad5533412a345d3", "src": "hda", "uuid": "99668fb9-3829-4680-9eee-8829d2b6332d"}, "out_pairs|__part__|reverse": {"id": "1bdc840890d572a8", "src": "hda", "uuid": "4cc2490f-bef5-459e-9bdf-bd1d45119a1a"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "033b4a3f9c56efe5"}}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa -p out2.fa Unnamed Collection_1.fa Unnamed Collection_2.fa\nProcessing paired-end reads on 8 cores ...\nFinished in 0.041 s (10275.424 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  4\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           369 bp\n  Read 1:           194 bp\n  Read 2:           175 bp\nPoly-A-trimmed:                      168 bp (45.5%)\n  Read 1:            84 bp\n  Read 2:            84 bp\nTotal written (filtered):            201 bp (54.5%)\n  Read 1:           110 bp\n  Read 2:            91 bp\n\n=== R1 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n\n\n=== R2 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa -p out2.fa Unnamed Collection_1.fa Unnamed Collection_2.fa\nProcessing paired-end reads on 8 cores ...\nFinished in 0.041 s (10275.424 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  4\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           369 bp\n  Read 1:           194 bp\n  Read 2:           175 bp\nPoly-A-trimmed:                      168 bp (45.5%)\n  Read 1:            84 bp\n  Read 2:            84 bp\nTotal written (filtered):            201 bp (54.5%)\n  Read 1:           110 bp\n  Read 2:            91 bp\n\n=== R1 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n\n\n=== R2 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:11:47", "plugin": "core", "name": "start_epoch", "raw_value": "1741590707.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:11:48", "plugin": "core", "name": "end_epoch", "raw_value": "1741590708.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-37", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 37, "time_seconds": 35.98586845397949, "inputs": {"library|input_1": {"src": "hdca", "id": "527a5204bab07410"}, "library|type": "paired_collection", "other_trimming_options|poly_a": true}, "job": {"model_class": "Job", "id": "016b642153550e7e", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:39:46.018222", "update_time": "2025-03-10T07:40:00.325640", "galaxy_version": "24.2", "external_id": "gxy-924hg", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/a/6/dataset_2a697de7-373f-4cc2-9509-b79d4f23cbaa.dat' 'Unnamed Collection_1.fa' && ln -f -s '/galaxy/server/database/objects/8/7/7/dataset_877a928f-6fcc-4ea2-9d6c-1d809417adf1.dat' 'Unnamed Collection_2.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}     --error-rate=0.1 --times=1 --overlap=3    --action=trim    --poly-a     --minimum-length=1      -o 'out1.fa' -p 'out2.fa'  'Unnamed Collection_1.fa' 'Unnamed Collection_2.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 23, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": true, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_11": {"id": "239ff2e516df1f69", "src": "hda", "uuid": "2a697de7-373f-4cc2-9509-b79d4f23cbaa"}, "library|input_12": {"id": "f61b768607dd0879", "src": "hda", "uuid": "877a928f-6fcc-4ea2-9d6c-1d809417adf1"}}, "outputs": {"out_pairs|__part__|forward": {"id": "c5233ba0ba0117dd", "src": "hda", "uuid": "53e3204e-c700-47d3-8e08-4866ad91ab80"}, "out_pairs|__part__|reverse": {"id": "40cee53c2394fa63", "src": "hda", "uuid": "859e82cc-2c8c-4612-b75b-80f23f49b99b"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "0b624fd2f5416a59"}}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa -p out2.fa Unnamed Collection_1.fa Unnamed Collection_2.fa\nProcessing paired-end reads on 8 cores ...\nFinished in 0.036 s (8926.809 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  4\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           369 bp\n  Read 1:           194 bp\n  Read 2:           175 bp\nPoly-A-trimmed:                      168 bp (45.5%)\n  Read 1:            84 bp\n  Read 2:            84 bp\nTotal written (filtered):            201 bp (54.5%)\n  Read 1:           110 bp\n  Read 2:            91 bp\n\n=== R1 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n\n\n=== R2 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa -p out2.fa Unnamed Collection_1.fa Unnamed Collection_2.fa\nProcessing paired-end reads on 8 cores ...\nFinished in 0.036 s (8926.809 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  4\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           369 bp\n  Read 1:           194 bp\n  Read 2:           175 bp\nPoly-A-trimmed:                      168 bp (45.5%)\n  Read 1:            84 bp\n  Read 2:            84 bp\nTotal written (filtered):            201 bp (54.5%)\n  Read 1:           110 bp\n  Read 2:            91 bp\n\n=== R1 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n\n\n=== R2 poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:39:48", "plugin": "core", "name": "start_epoch", "raw_value": "1741592388.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:39:48", "plugin": "core", "name": "end_epoch", "raw_value": "1741592388.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-38", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 38, "time_seconds": 36.96472454071045, "inputs": {"library|input_1": {"src": "hda", "id": "baafba81519eb49d"}, "library|r1|adapters_0|adapter_source|adapter": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|overlap": "10"}, "job": {"model_class": "Job", "id": "c1f05fb2a9c3e7d1", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:12:22.231792", "update_time": "2025-03-10T07:12:37.499061", "galaxy_version": "24.2", "external_id": "gxy-fkgvb", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/e/3/7/dataset_e37d30b4-d3dd-47d6-9c22-7056dacc0710.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'    --error-rate=0.1 --times=1 --overlap=10    --action=trim         --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 179, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"10\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "baafba81519eb49d", "src": "hda", "uuid": "e37d30b4-d3dd-47d6-9c22-7056dacc0710"}}, "outputs": {"out1": {"id": "b256009ddc488ac1", "src": "hda", "uuid": "1553b90a-b65d-4e04-b3b8-9a23e5502fd0"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.049 s (12357.414 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.049 s (12357.414 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:12:24", "plugin": "core", "name": "start_epoch", "raw_value": "1741590744.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:12:24", "plugin": "core", "name": "end_epoch", "raw_value": "1741590744.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-38", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 38, "time_seconds": 34.41368007659912, "inputs": {"library|input_1": {"src": "hda", "id": "b395e820e37eafb7"}, "library|r1|adapters_0|adapter_source|adapter": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|overlap": "10"}, "job": {"model_class": "Job", "id": "2016c64748187763", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:40:21.001021", "update_time": "2025-03-10T07:40:35.110860", "galaxy_version": "24.2", "external_id": "gxy-wdp58", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/d/3/dataset_4d31d906-e4d1-41af-9bc9-04cc4ca81f45.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'    --error-rate=0.1 --times=1 --overlap=10    --action=trim         --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 312, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"10\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "b395e820e37eafb7", "src": "hda", "uuid": "4d31d906-e4d1-41af-9bc9-04cc4ca81f45"}}, "outputs": {"out1": {"id": "84e56750b44939f0", "src": "hda", "uuid": "4168f4d6-93ba-4280-8ad9-01d63d935c46"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.044 s (11023.819 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.044 s (11023.819 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:40:22", "plugin": "core", "name": "start_epoch", "raw_value": "1741592422.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:40:23", "plugin": "core", "name": "end_epoch", "raw_value": "1741592423.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-39", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 39, "time_seconds": 37.58059287071228, "inputs": {"library|input_1": {"src": "hda", "id": "974217c50cb38161"}, "library|r1|adapters_0|adapter_source|adapter": "A{35}", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|overlap": "10"}, "job": {"model_class": "Job", "id": "6a196c7738cd03e7", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:12:59.978623", "update_time": "2025-03-10T07:13:15.314524", "galaxy_version": "24.2", "external_id": "gxy-j898t", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/b/6/dataset_8b638aaf-cec8-4caa-87a7-14bada4b629a.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'A{35}'    --error-rate=0.1 --times=1 --overlap=10    --action=trim         --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 181, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"A{35}\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"10\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "974217c50cb38161", "src": "hda", "uuid": "8b638aaf-cec8-4caa-87a7-14bada4b629a"}}, "outputs": {"out1": {"id": "02eb7c326a0045e6", "src": "hda", "uuid": "ff2f9ac7-c91b-4f90-bcc9-4312f2a6da0e"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a A{35} --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.046 s (11564.314 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a A{35} --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.046 s (11564.314 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:13:02", "plugin": "core", "name": "start_epoch", "raw_value": "1741590782.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:13:02", "plugin": "core", "name": "end_epoch", "raw_value": "1741590782.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-39", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 39, "time_seconds": 33.528422594070435, "inputs": {"library|input_1": {"src": "hda", "id": "8e6359043297c1f2"}, "library|r1|adapters_0|adapter_source|adapter": "A{35}", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|overlap": "10"}, "job": {"model_class": "Job", "id": "13c65d53d90a25d5", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:40:55.702875", "update_time": "2025-03-10T07:41:08.517187", "galaxy_version": "24.2", "external_id": "gxy-8d24n", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/b/5/d/dataset_b5d4f7e0-8d09-4538-879e-7efa97611482.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'A{35}'    --error-rate=0.1 --times=1 --overlap=10    --action=trim         --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 314, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"A{35}\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"10\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "8e6359043297c1f2", "src": "hda", "uuid": "b5d4f7e0-8d09-4538-879e-7efa97611482"}}, "outputs": {"out1": {"id": "0c17a2b012cae786", "src": "hda", "uuid": "a4378bd6-357f-4f94-9e54-e1297bf2e021"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a A{35} --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.042 s (10444.939 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a A{35} --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.042 s (10444.939 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:40:57", "plugin": "core", "name": "start_epoch", "raw_value": "1741592457.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:40:57", "plugin": "core", "name": "end_epoch", "raw_value": "1741592457.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-4", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 4, "status": "skip"}}, {"id": "cutadapt/4.9+galaxy1-4", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 4, "status": "skip"}}, {"id": "cutadapt/4.9+galaxy1-40", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 40, "time_seconds": 35.746034145355225, "inputs": {"library|input_1": {"src": "hda", "id": "12c376a42b694ba2"}, "library|type": "single", "other_trimming_options|poly_a": true}, "job": {"model_class": "Job", "id": "9147a55dfa0310c8", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:13:36.176122", "update_time": "2025-03-10T07:13:51.130868", "galaxy_version": "24.2", "external_id": "gxy-p2qhp", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/1/1/5/dataset_1151db1d-f72f-4b8a-9487-05744ba849c0.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim    --poly-a     --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 183, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": true, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "12c376a42b694ba2", "src": "hda", "uuid": "1151db1d-f72f-4b8a-9487-05744ba849c0"}}, "outputs": {"out1": {"id": "b87d6d790cce0673", "src": "hda", "uuid": "6956821f-a4b3-4414-8e17-c280b9db78d6"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.033 s (8358.061 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nPoly-A-trimmed:                       84 bp (43.3%)\nTotal written (filtered):            110 bp (56.7%)\n\n=== Poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.033 s (8358.061 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nPoly-A-trimmed:                       84 bp (43.3%)\nTotal written (filtered):            110 bp (56.7%)\n\n=== Poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:13:38", "plugin": "core", "name": "start_epoch", "raw_value": "1741590818.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:13:38", "plugin": "core", "name": "end_epoch", "raw_value": "1741590818.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-40", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 40, "time_seconds": 34.919880867004395, "inputs": {"library|input_1": {"src": "hda", "id": "6f5dc395a3d78ac7"}, "library|type": "single", "other_trimming_options|poly_a": true}, "job": {"model_class": "Job", "id": "406fab7270f6fc37", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:41:29.589710", "update_time": "2025-03-10T07:41:43.592516", "galaxy_version": "24.2", "external_id": "gxy-hfkng", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/1/8/f/dataset_18f7f65d-bc8a-4704-8e5c-cd92274b4e8f.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim    --poly-a     --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 316, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": true, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "6f5dc395a3d78ac7", "src": "hda", "uuid": "18f7f65d-bc8a-4704-8e5c-cd92274b4e8f"}}, "outputs": {"out1": {"id": "da785d2fb86ed595", "src": "hda", "uuid": "0d3fbe42-d969-4644-8187-f1d48b3d587c"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.032 s (7894.635 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nPoly-A-trimmed:                       84 bp (43.3%)\nTotal written (filtered):            110 bp (56.7%)\n\n=== Poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.032 s (7894.635 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nPoly-A-trimmed:                       84 bp (43.3%)\nTotal written (filtered):            110 bp (56.7%)\n\n=== Poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:41:31", "plugin": "core", "name": "start_epoch", "raw_value": "1741592491.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:41:31", "plugin": "core", "name": "end_epoch", "raw_value": "1741592491.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-41", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 41, "time_seconds": 34.29979062080383, "inputs": {"library|input_1": {"src": "hda", "id": "0e9eae24fcb54678"}, "library|type": "single"}, "job": {"model_class": "Job", "id": "00c3e7e755158ba3", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:14:11.962147", "update_time": "2025-03-10T07:14:25.564217", "galaxy_version": "24.2", "external_id": "gxy-4tmgx", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/d/9/c/dataset_d9cbfba5-301b-4cda-93df-949dacccb559.dat' 'simple_fasta_gz.fa.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fa.gz'  'simple_fasta_gz.fa.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 185, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "0e9eae24fcb54678", "src": "hda", "uuid": "d9cbfba5-301b-4cda-93df-949dacccb559"}}, "outputs": {"out1": {"id": "b18fe9d900dc8c2a", "src": "hda", "uuid": "8cdbebba-41ee-4850-8b1b-1c47b456d3d0"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fa.gz simple_fasta_gz.fa.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.086 s (43074.965 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            18 bp\nTotal written (filtered):             18 bp (100.0%)\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fa.gz simple_fasta_gz.fa.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.086 s (43074.965 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            18 bp\nTotal written (filtered):             18 bp (100.0%)\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:14:13", "plugin": "core", "name": "start_epoch", "raw_value": "1741590853.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:14:14", "plugin": "core", "name": "end_epoch", "raw_value": "1741590854.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-41", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 41, "time_seconds": 33.81371593475342, "inputs": {"library|input_1": {"src": "hda", "id": "df7b2c380045d9db"}, "library|type": "single"}, "job": {"model_class": "Job", "id": "621734c549ecb079", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:42:04.218496", "update_time": "2025-03-10T07:42:17.447319", "galaxy_version": "24.2", "external_id": "gxy-dhktx", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/4/f/dataset_c4fdd365-deae-4137-b345-1c76b2a1c97a.dat' 'simple_fasta_gz.fa.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fa.gz'  'simple_fasta_gz.fa.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 318, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "df7b2c380045d9db", "src": "hda", "uuid": "c4fdd365-deae-4137-b345-1c76b2a1c97a"}}, "outputs": {"out1": {"id": "fdcb9aef381a170e", "src": "hda", "uuid": "7b7e7645-2d33-4925-970b-25c8f25892a3"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fa.gz simple_fasta_gz.fa.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.083 s (41427.016 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            18 bp\nTotal written (filtered):             18 bp (100.0%)\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fa.gz simple_fasta_gz.fa.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.083 s (41427.016 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            18 bp\nTotal written (filtered):             18 bp (100.0%)\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:42:05", "plugin": "core", "name": "start_epoch", "raw_value": "1741592525.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:42:06", "plugin": "core", "name": "end_epoch", "raw_value": "1741592526.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-42", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 42, "time_seconds": 35.42523241043091, "inputs": {"library|input_1": {"src": "hda", "id": "bfd714093b27eee4"}, "library|r1|adapters_0|adapter_source|adapter": "XXXXXX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|quality_cutoff": "10", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "7315f6d9be664c69", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:14:46.409769", "update_time": "2025-03-10T07:15:00.956138", "galaxy_version": "24.2", "external_id": "gxy-4phwb", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/e/7/c/dataset_e7ccaaa8-99ec-4cb4-9fdc-425a9cc6fe96.dat' 'illumina64_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'XXXXXX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=10         --quality-base=64    -o 'out1.fq'  'illumina64_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 187, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"XXXXXX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"10\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "bfd714093b27eee4", "src": "hda", "uuid": "e7ccaaa8-99ec-4cb4-9fdc-425a9cc6fe96"}}, "outputs": {"out1": {"id": "a482aa0bf19fcd5f", "src": "hda", "uuid": "38038738-7665-4a90-b2d4-7575adb7c6eb"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a XXXXXX --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.045 s (2270.663 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n\n=== Adapter 1 ===\n\nSequence: XXXXXX; Type: regular 3'; Length: 6; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a XXXXXX --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.045 s (2270.663 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n\n=== Adapter 1 ===\n\nSequence: XXXXXX; Type: regular 3'; Length: 6; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:14:48", "plugin": "core", "name": "start_epoch", "raw_value": "1741590888.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:14:49", "plugin": "core", "name": "end_epoch", "raw_value": "1741590889.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-42", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 42, "time_seconds": 33.4765989780426, "inputs": {"library|input_1": {"src": "hda", "id": "34e00071f70b13ab"}, "library|r1|adapters_0|adapter_source|adapter": "XXXXXX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|quality_cutoff": "10", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "168a85e05326a845", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:42:36.758988", "update_time": "2025-03-10T07:42:51.240787", "galaxy_version": "24.2", "external_id": "gxy-kb6bf", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/4/0/dataset_f404bd18-761b-4a63-b9f6-5203116b51f1.dat' 'illumina64_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'XXXXXX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=10         --quality-base=64    -o 'out1.fq'  'illumina64_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 320, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"XXXXXX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"10\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "34e00071f70b13ab", "src": "hda", "uuid": "f404bd18-761b-4a63-b9f6-5203116b51f1"}}, "outputs": {"out1": {"id": "7b513071915cbe84", "src": "hda", "uuid": "bc2352e3-dfe5-4f8e-9873-622e6b4854fd"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a XXXXXX --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (2160.263 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n\n=== Adapter 1 ===\n\nSequence: XXXXXX; Type: regular 3'; Length: 6; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a XXXXXX --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.043 s (2160.263 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n\n=== Adapter 1 ===\n\nSequence: XXXXXX; Type: regular 3'; Length: 6; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:42:38", "plugin": "core", "name": "start_epoch", "raw_value": "1741592558.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:42:39", "plugin": "core", "name": "end_epoch", "raw_value": "1741592559.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-43", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 43, "time_seconds": 37.29676651954651, "inputs": {"library|input_1": {"src": "hda", "id": "349e0bc660657afd"}, "library|type": "single", "other_trimming_options|quality_cutoff": "10", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "f372a9962501eaa2", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:15:22.164153", "update_time": "2025-03-10T07:15:38.222935", "galaxy_version": "24.2", "external_id": "gxy-k4vwp", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/1/f/dataset_f1f85065-669e-41a9-9adf-61762919d702.dat' 'illumina64_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=10         --quality-base=64    -o 'out1.fq'  'illumina64_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 189, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"10\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "349e0bc660657afd", "src": "hda", "uuid": "f1f85065-669e-41a9-9adf-61762919d702"}}, "outputs": {"out1": {"id": "b0af067ca2e206cb", "src": "hda", "uuid": "831680cb-ff3d-4259-9d6b-8f9f7e46f97e"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.032 s (1581.061 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.032 s (1581.061 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:15:24", "plugin": "core", "name": "start_epoch", "raw_value": "1741590924.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:15:25", "plugin": "core", "name": "end_epoch", "raw_value": "1741590925.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-43", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 43, "time_seconds": 33.34520411491394, "inputs": {"library|input_1": {"src": "hda", "id": "ffdce711ea148ff4"}, "library|type": "single", "other_trimming_options|quality_cutoff": "10", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "8472a54e23b80c4c", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:43:10.729054", "update_time": "2025-03-10T07:43:24.417943", "galaxy_version": "24.2", "external_id": "gxy-bq8kx", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/a/e/dataset_2aeafacd-78c6-423e-aa6d-ef0dbcaf4148.dat' 'illumina64_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=10         --quality-base=64    -o 'out1.fq'  'illumina64_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 322, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"10\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "ffdce711ea148ff4", "src": "hda", "uuid": "2aeafacd-78c6-423e-aa6d-ef0dbcaf4148"}}, "outputs": {"out1": {"id": "9ef63747b433afd8", "src": "hda", "uuid": "2bd3db2f-f48a-4129-8ce3-f4a254e42a38"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.031 s (1534.593 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.031 s (1534.593 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:43:12", "plugin": "core", "name": "start_epoch", "raw_value": "1741592592.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:43:12", "plugin": "core", "name": "end_epoch", "raw_value": "1741592592.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-44", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 44, "time_seconds": 36.51718997955322, "inputs": {"library|input_1": {"src": "hda", "id": "37b035d387eb600f"}, "library|type": "single", "filter_options|minimum_length": "0", "filter_options|max_expected_errors": "0.9", "output_selector": ["report", "info_file"]}, "job": {"model_class": "Job", "id": "e67d7d8cedcf3d1e", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:15:59.151894", "update_time": "2025-03-10T07:16:14.286948", "galaxy_version": "24.2", "external_id": "gxy-l99cr", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/b/1/0/dataset_b109343f-dcef-4ba0-896c-d38dbf5ba9f1.dat' 'maxee_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --max-ee=0.9   --quality-base=64    --info-file='/galaxy/server/database/jobs_directory/000/131/outputs/dataset_7c10a501-d275-40b4-acd2-b6f987896bd4.dat' -o 'out1.fq'  'maxee_fastq.fq'  > report.txt", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 191, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"0.9\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": "[\"report\", \"info_file\"]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "37b035d387eb600f", "src": "hda", "uuid": "b109343f-dcef-4ba0-896c-d38dbf5ba9f1"}}, "outputs": {"out1": {"id": "cb459746ac3fd031", "src": "hda", "uuid": "ff3717a2-2426-4022-84a2-eac9686b7266"}, "report": {"id": "6deb2de97c293471", "src": "hda", "uuid": "7ffca351-02b0-4e44-9377-92b55b9639de"}, "info_file": {"id": "76e88fef86cacf7d", "src": "hda", "uuid": "7c10a501-d275-40b4-acd2-b6f987896bd4"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:16:01", "plugin": "core", "name": "start_epoch", "raw_value": "1741590961.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:16:02", "plugin": "core", "name": "end_epoch", "raw_value": "1741590962.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-44", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 44, "time_seconds": 33.92254614830017, "inputs": {"library|input_1": {"src": "hda", "id": "54fed70f12de151c"}, "library|type": "single", "filter_options|minimum_length": "0", "filter_options|max_expected_errors": "0.9", "output_selector": ["report", "info_file"]}, "job": {"model_class": "Job", "id": "753f80a0ab1f3bac", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:43:44.808451", "update_time": "2025-03-10T07:43:57.904068", "galaxy_version": "24.2", "external_id": "gxy-98x4f", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/a/3/8/dataset_a38442d6-8147-40cb-b845-adc71aadf711.dat' 'maxee_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --max-ee=0.9   --quality-base=64    --info-file='/galaxy/server/database/jobs_directory/000/237/outputs/dataset_62a9deed-4ca4-436d-b2ba-e5c5b969517b.dat' -o 'out1.fq'  'maxee_fastq.fq'  > report.txt", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 324, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"0.9\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": "[\"report\", \"info_file\"]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "54fed70f12de151c", "src": "hda", "uuid": "a38442d6-8147-40cb-b845-adc71aadf711"}}, "outputs": {"out1": {"id": "1222010688f0ee92", "src": "hda", "uuid": "50dd426d-4ed1-4754-b9c9-29b9ded6861e"}, "report": {"id": "90d5a17d03a3cd14", "src": "hda", "uuid": "9016fbe9-9ab9-45a9-8d0c-a39afbe9220a"}, "info_file": {"id": "663ff8da8472cb89", "src": "hda", "uuid": "62a9deed-4ca4-436d-b2ba-e5c5b969517b"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:43:46", "plugin": "core", "name": "start_epoch", "raw_value": "1741592626.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:43:47", "plugin": "core", "name": "end_epoch", "raw_value": "1741592627.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-45", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 45, "time_seconds": 36.081172466278076, "inputs": {"library|input_1": {"src": "hda", "id": "f6f71ea59a605e2f"}, "library|r1|anywhere_adapters_0|adapter_source|adapter": "ACGTACGT", "library|r1|anywhere_adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|match_read_wildcards": true}, "job": {"model_class": "Job", "id": "cd917cf1febb5a8a", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:16:36.188268", "update_time": "2025-03-10T07:16:51.231880", "galaxy_version": "24.2", "external_id": "gxy-fm9g8", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/3/c/8/dataset_3c8188c5-bfd7-40a9-bdc2-bd425b1f3a5f.dat' 'wildcard_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -b 'ACGTACGT'    --error-rate=0.1 --times=1 --overlap=3  --match-read-wildcards  --action=trim         --minimum-length=1      -o 'out1.fa'  'wildcard_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 195, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"ACGTACGT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": true, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "f6f71ea59a605e2f", "src": "hda", "uuid": "3c8188c5-bfd7-40a9-bdc2-bd425b1f3a5f"}}, "outputs": {"out1": {"id": "49f0e68ccf77ed68", "src": "hda", "uuid": "e92dd4b2-3339-4b1b-805a-d154861b9827"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -b ACGTACGT --error-rate=0.1 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcard_fa.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.044 s (22236.109 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         2 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            32 bp\nTotal written (filtered):             16 bp (50.0%)\n\n=== Adapter 1 ===\n\nSequence: ACGTACGT; Type: variable 5'/3'; Length: 8; Trimmed: 2 times\n2 times, it overlapped the 5' end of a read\n0 times, it overlapped the 3' end or was within the read\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-8 bp: 0\n\nOverview of removed sequences (5')\nlength\tcount\texpect\tmax.err\terror counts\n8\t2\t0.0\t0\t2\n\n\n\nOverview of removed sequences (3' or within)\nlength\tcount\texpect\tmax.err\terror counts\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -b ACGTACGT --error-rate=0.1 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcard_fa.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.044 s (22236.109 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         2 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            32 bp\nTotal written (filtered):             16 bp (50.0%)\n\n=== Adapter 1 ===\n\nSequence: ACGTACGT; Type: variable 5'/3'; Length: 8; Trimmed: 2 times\n2 times, it overlapped the 5' end of a read\n0 times, it overlapped the 3' end or was within the read\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-8 bp: 0\n\nOverview of removed sequences (5')\nlength\tcount\texpect\tmax.err\terror counts\n8\t2\t0.0\t0\t2\n\n\n\nOverview of removed sequences (3' or within)\nlength\tcount\texpect\tmax.err\terror counts\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:16:38", "plugin": "core", "name": "start_epoch", "raw_value": "1741590998.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:16:38", "plugin": "core", "name": "end_epoch", "raw_value": "1741590998.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-45", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 45, "time_seconds": 34.0943067073822, "inputs": {"library|input_1": {"src": "hda", "id": "3ca369557a1b516e"}, "library|r1|anywhere_adapters_0|adapter_source|adapter": "ACGTACGT", "library|r1|anywhere_adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|match_read_wildcards": true}, "job": {"model_class": "Job", "id": "e45338cbbef513d6", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:44:18.225212", "update_time": "2025-03-10T07:44:32.522768", "galaxy_version": "24.2", "external_id": "gxy-lc9w5", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/d/f/dataset_0df8c215-3dbf-4a2a-934f-c7b2233df979.dat' 'wildcard_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -b 'ACGTACGT'    --error-rate=0.1 --times=1 --overlap=3  --match-read-wildcards  --action=trim         --minimum-length=1      -o 'out1.fa'  'wildcard_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 328, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"ACGTACGT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": true, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "3ca369557a1b516e", "src": "hda", "uuid": "0df8c215-3dbf-4a2a-934f-c7b2233df979"}}, "outputs": {"out1": {"id": "0957bd53cb0f4424", "src": "hda", "uuid": "8a726bca-4da6-4b5b-a967-d7f233d90118"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -b ACGTACGT --error-rate=0.1 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcard_fa.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.044 s (21951.079 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         2 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            32 bp\nTotal written (filtered):             16 bp (50.0%)\n\n=== Adapter 1 ===\n\nSequence: ACGTACGT; Type: variable 5'/3'; Length: 8; Trimmed: 2 times\n2 times, it overlapped the 5' end of a read\n0 times, it overlapped the 3' end or was within the read\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-8 bp: 0\n\nOverview of removed sequences (5')\nlength\tcount\texpect\tmax.err\terror counts\n8\t2\t0.0\t0\t2\n\n\n\nOverview of removed sequences (3' or within)\nlength\tcount\texpect\tmax.err\terror counts\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -b ACGTACGT --error-rate=0.1 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcard_fa.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.044 s (21951.079 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         2 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            32 bp\nTotal written (filtered):             16 bp (50.0%)\n\n=== Adapter 1 ===\n\nSequence: ACGTACGT; Type: variable 5'/3'; Length: 8; Trimmed: 2 times\n2 times, it overlapped the 5' end of a read\n0 times, it overlapped the 3' end or was within the read\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-8 bp: 0\n\nOverview of removed sequences (5')\nlength\tcount\texpect\tmax.err\terror counts\n8\t2\t0.0\t0\t2\n\n\n\nOverview of removed sequences (3' or within)\nlength\tcount\texpect\tmax.err\terror counts\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:44:20", "plugin": "core", "name": "start_epoch", "raw_value": "1741592660.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:44:20", "plugin": "core", "name": "end_epoch", "raw_value": "1741592660.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-46", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 46, "time_seconds": 36.3758065700531, "inputs": {"library|input_1": {"src": "hda", "id": "aa7075fd216ee19e"}, "library|r1|adapters_0|adapter_source|adapter": "GGGGGGG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|error_rate": "0", "adapter_options|match_read_wildcards": true}, "job": {"model_class": "Job", "id": "f70c9cefd41e4ed3", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:17:12.261442", "update_time": "2025-03-10T07:17:27.617783", "galaxy_version": "24.2", "external_id": "gxy-7cvjn", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/a/5/9/dataset_a599f9bd-0d32-4635-ab48-0613c88ed3ae.dat' 'wildcardN_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'GGGGGGG'    --error-rate=0.0 --times=1 --overlap=3  --match-read-wildcards  --action=trim         --minimum-length=1      -o 'out1.fa'  'wildcardN_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 197, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"GGGGGGG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.0\", \"match_read_wildcards\": true, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "aa7075fd216ee19e", "src": "hda", "uuid": "a599f9bd-0d32-4635-ab48-0613c88ed3ae"}}, "outputs": {"out1": {"id": "df858d4087ca5be2", "src": "hda", "uuid": "af6834ea-5a5e-40a3-851a-e9cd79e63fa7"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a GGGGGGG --error-rate=0.0 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcardN_fa.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.046 s (15193.780 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:            30 bp\nTotal written (filtered):             16 bp (53.3%)\n\n=== Adapter 1 ===\n\nSequence: GGGGGGG; Type: regular 3'; Length: 7; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t2\t0.0\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a GGGGGGG --error-rate=0.0 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcardN_fa.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.046 s (15193.780 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:            30 bp\nTotal written (filtered):             16 bp (53.3%)\n\n=== Adapter 1 ===\n\nSequence: GGGGGGG; Type: regular 3'; Length: 7; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t2\t0.0\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:17:14", "plugin": "core", "name": "start_epoch", "raw_value": "1741591034.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:17:15", "plugin": "core", "name": "end_epoch", "raw_value": "1741591035.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-46", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 46, "time_seconds": 34.169336557388306, "inputs": {"library|input_1": {"src": "hda", "id": "39e34d999873cf13"}, "library|r1|adapters_0|adapter_source|adapter": "GGGGGGG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|error_rate": "0", "adapter_options|match_read_wildcards": true}, "job": {"model_class": "Job", "id": "2dd9b350550e7d24", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:44:53.175179", "update_time": "2025-03-10T07:45:06.916081", "galaxy_version": "24.2", "external_id": "gxy-5k458", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/d/0/e/dataset_d0ecd55c-3879-4163-8f9c-952ba6456882.dat' 'wildcardN_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'GGGGGGG'    --error-rate=0.0 --times=1 --overlap=3  --match-read-wildcards  --action=trim         --minimum-length=1      -o 'out1.fa'  'wildcardN_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\"", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 330, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"GGGGGGG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.0\", \"match_read_wildcards\": true, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}"}, "inputs": {"library|input_1": {"id": "39e34d999873cf13", "src": "hda", "uuid": "d0ecd55c-3879-4163-8f9c-952ba6456882"}}, "outputs": {"out1": {"id": "cdaed8e44581c532", "src": "hda", "uuid": "2cb5ce53-9c02-4c11-8866-a2aa262f96fd"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a GGGGGGG --error-rate=0.0 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcardN_fa.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.049 s (16195.615 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:            30 bp\nTotal written (filtered):             16 bp (53.3%)\n\n=== Adapter 1 ===\n\nSequence: GGGGGGG; Type: regular 3'; Length: 7; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t2\t0.0\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a GGGGGGG --error-rate=0.0 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcardN_fa.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.049 s (16195.615 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:            30 bp\nTotal written (filtered):             16 bp (53.3%)\n\n=== Adapter 1 ===\n\nSequence: GGGGGGG; Type: regular 3'; Length: 7; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t2\t0.0\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:44:55", "plugin": "core", "name": "start_epoch", "raw_value": "1741592695.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:44:55", "plugin": "core", "name": "end_epoch", "raw_value": "1741592695.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-47", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 47, "time_seconds": 37.68184518814087, "inputs": {"library|input_1": {"src": "hda", "id": "cf3e255041e783b0"}, "library|input_2": {"src": "hda", "id": "8d4b65023e187f38"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "c64ebebbc065a692", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "error", "exit_code": 1, "create_time": "2025-03-10T07:17:50.474486", "update_time": "2025-03-10T07:18:05.856356", "galaxy_version": "24.2", "external_id": "gxy-rct8n", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/b/9/3/dataset_b936f2d1-a956-453f-94d9-7a95c246e8fb.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/3/3/a/dataset_33ab90cd-417d-41bf-9640-75b38460d26b.dat' 'bwa-mem-fastq_mispaired2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq_mispaired2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 199, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 200, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "cf3e255041e783b0", "src": "hda", "uuid": "b936f2d1-a956-453f-94d9-7a95c246e8fb"}, "library|input_2": {"id": "8d4b65023e187f38", "src": "hda", "uuid": "33ab90cd-417d-41bf-9640-75b38460d26b"}}, "outputs": {"out1": {"id": "c85d3ddb1a061845", "src": "hda", "uuid": "6a28fcc1-0f0f-4dad-9289-2f3de8b82ae9"}, "out2": {"id": "f6917dcae0909945", "src": "hda", "uuid": "b9275717-6a34-40ff-954f-a693b7cf63f3"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq_mispaired2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\n", "tool_stderr": "Error in sequence file at unknown line: Reads are improperly paired. Read name 'M01368:8:000000000-A3GHV:1:1101:6911:8255/1' in file 1 does not match 'M01368:8:000000000-A3GHV:1:1101:14518:9998/2' in file 2.\n", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq_mispaired2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\n", "stderr": "Error in sequence file at unknown line: Reads are improperly paired. Read name 'M01368:8:000000000-A3GHV:1:1101:6911:8255/1' in file 1 does not match 'M01368:8:000000000-A3GHV:1:1101:14518:9998/2' in file 2.\n", "job_messages": [{"code_desc": "", "desc": "Fatal error: Exit code 1 ()", "error_level": 3, "exit_code": 1, "type": "exit_code"}], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:17:52", "plugin": "core", "name": "start_epoch", "raw_value": "1741591072.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:17:53", "plugin": "core", "name": "end_epoch", "raw_value": "1741591073.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-47", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 47, "time_seconds": 35.733877658843994, "inputs": {"library|input_1": {"src": "hda", "id": "d442a9a9d96e340e"}, "library|input_2": {"src": "hda", "id": "897358f860e49ce5"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "53fb0b1e8c2c9c86", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "error", "exit_code": 1, "create_time": "2025-03-10T07:45:28.646830", "update_time": "2025-03-10T07:45:43.221176", "galaxy_version": "24.2", "external_id": "gxy-2p9zw", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/5/1/dataset_651cebac-e974-4a73-8d11-237e2e61937b.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/9/c/f/dataset_9cf11f50-882e-49ae-8e9a-0889b6a9839a.dat' 'bwa-mem-fastq_mispaired2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq_mispaired2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 332, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 333, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "d442a9a9d96e340e", "src": "hda", "uuid": "651cebac-e974-4a73-8d11-237e2e61937b"}, "library|input_2": {"id": "897358f860e49ce5", "src": "hda", "uuid": "9cf11f50-882e-49ae-8e9a-0889b6a9839a"}}, "outputs": {"out1": {"id": "a65b2fc42ea4ad82", "src": "hda", "uuid": "60d81138-aa86-41fd-a645-cd977de672e9"}, "out2": {"id": "d49a00d281bc9035", "src": "hda", "uuid": "5556fb42-2c6b-4217-ac66-e898ef089318"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq_mispaired2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\n", "tool_stderr": "Error in sequence file at unknown line: Reads are improperly paired. Read name 'M01368:8:000000000-A3GHV:1:1101:6911:8255/1' in file 1 does not match 'M01368:8:000000000-A3GHV:1:1101:14518:9998/2' in file 2.\n", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq_mispaired2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\n", "stderr": "Error in sequence file at unknown line: Reads are improperly paired. Read name 'M01368:8:000000000-A3GHV:1:1101:6911:8255/1' in file 1 does not match 'M01368:8:000000000-A3GHV:1:1101:14518:9998/2' in file 2.\n", "job_messages": [{"code_desc": "", "desc": "Fatal error: Exit code 1 ()", "error_level": 3, "exit_code": 1, "type": "exit_code"}], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:45:31", "plugin": "core", "name": "start_epoch", "raw_value": "1741592731.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:45:31", "plugin": "core", "name": "end_epoch", "raw_value": "1741592731.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-5", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 5, "time_seconds": 37.94969916343689, "inputs": {"library|input_1": {"src": "hda", "id": "0116d08bb2ae35fc"}, "library|r1|adapters_0|adapter_source|adapter": "TTAGACATATCTCCGTCG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "filter_options|discard_trimmed": true}, "job": {"model_class": "Job", "id": "144e9c4b587ea381", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:52:41.948327", "update_time": "2025-03-10T06:52:57.813802", "galaxy_version": "24.2", "external_id": "gxy-t62l6", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/1/2/dataset_9122875f-744d-4138-929c-bd39d43e9572.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'TTAGACATATCTCCGTCG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim      --discard-trimmed   --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"filter_options": "{\"discard_casava\": false, \"discard_trimmed\": true, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 82, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"TTAGACATATCTCCGTCG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "0116d08bb2ae35fc", "src": "hda", "uuid": "9122875f-744d-4138-929c-bd39d43e9572"}}, "outputs": {"out1": {"id": "48b1c7432b3c6ff1", "src": "hda", "uuid": "41dac347-585c-44bb-bae6-46f519d13675"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a TTAGACATATCTCCGTCG --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-trimmed --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.047 s (15659.491 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             34 bp (33.3%)\n\n=== Adapter 1 ===\n\nSequence: TTAGACATATCTCCGTCG; Type: regular 3'; Length: 18; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-18 bp: 1\n\nBases preceding removed adapters:\n  A: 50.0%\n  C: 50.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n10\t1\t0.0\t1\t0 1\n12\t1\t0.0\t1\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a TTAGACATATCTCCGTCG --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-trimmed --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.047 s (15659.491 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             34 bp (33.3%)\n\n=== Adapter 1 ===\n\nSequence: TTAGACATATCTCCGTCG; Type: regular 3'; Length: 18; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-18 bp: 1\n\nBases preceding removed adapters:\n  A: 50.0%\n  C: 50.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n10\t1\t0.0\t1\t0 1\n12\t1\t0.0\t1\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:52:44", "plugin": "core", "name": "start_epoch", "raw_value": "1741589564.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:52:45", "plugin": "core", "name": "end_epoch", "raw_value": "1741589565.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-5", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 5, "time_seconds": 35.217095613479614, "inputs": {"library|input_1": {"src": "hda", "id": "c53a116f71c40379"}, "library|r1|adapters_0|adapter_source|adapter": "TTAGACATATCTCCGTCG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "filter_options|discard_trimmed": true}, "job": {"model_class": "Job", "id": "17c411294e5862d2", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:20:54.131312", "update_time": "2025-03-10T07:21:08.330254", "galaxy_version": "24.2", "external_id": "gxy-vpktl", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/b/f/f/dataset_bff98f0b-d955-43a3-be88-114e39a991dc.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'TTAGACATATCTCCGTCG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim      --discard-trimmed   --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 215, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"TTAGACATATCTCCGTCG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": true, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "c53a116f71c40379", "src": "hda", "uuid": "bff98f0b-d955-43a3-be88-114e39a991dc"}}, "outputs": {"out1": {"id": "9dc49b7f38119f3b", "src": "hda", "uuid": "d97e6433-47f8-4e40-a11c-3082814eae34"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a TTAGACATATCTCCGTCG --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-trimmed --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.047 s (15592.257 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             34 bp (33.3%)\n\n=== Adapter 1 ===\n\nSequence: TTAGACATATCTCCGTCG; Type: regular 3'; Length: 18; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-18 bp: 1\n\nBases preceding removed adapters:\n  A: 50.0%\n  C: 50.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n10\t1\t0.0\t1\t0 1\n12\t1\t0.0\t1\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a TTAGACATATCTCCGTCG --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-trimmed --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 8 cores ...\nFinished in 0.047 s (15592.257 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             34 bp (33.3%)\n\n=== Adapter 1 ===\n\nSequence: TTAGACATATCTCCGTCG; Type: regular 3'; Length: 18; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-18 bp: 1\n\nBases preceding removed adapters:\n  A: 50.0%\n  C: 50.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n10\t1\t0.0\t1\t0 1\n12\t1\t0.0\t1\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:20:55", "plugin": "core", "name": "start_epoch", "raw_value": "1741591255.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:20:56", "plugin": "core", "name": "end_epoch", "raw_value": "1741591256.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-6", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 6, "time_seconds": 38.208067417144775, "inputs": {"library|input_1": {"src": "hda", "id": "38e86852487664f4"}, "library|input_2": {"src": "hda", "id": "87d36bad88eb5268"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|pair_adapters": true, "library|type": "paired"}, "job": {"model_class": "Job", "id": "4985481e35de3c50", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:53:20.581611", "update_time": "2025-03-10T06:53:35.419323", "galaxy_version": "24.2", "external_id": "gxy-9vrkn", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/2/9/dataset_829e3d46-d170-4628-99f9-7aa38e677e86.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/b/8/2/dataset_b8241315-0381-43f0-85ef-d14dc7225d5d.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'  --pair-adapters  --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 84, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 85, \"src\": \"hda\"}]}, \"pair_adapters\": true, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "38e86852487664f4", "src": "hda", "uuid": "829e3d46-d170-4628-99f9-7aa38e677e86"}, "library|input_2": {"id": "87d36bad88eb5268", "src": "hda", "uuid": "b8241315-0381-43f0-85ef-d14dc7225d5d"}}, "outputs": {"out1": {"id": "a681b1bf180c818d", "src": "hda", "uuid": "e367ba05-833f-4281-ae20-3f1e02ff3ead"}, "out2": {"id": "9879aed3b56ed0b7", "src": "hda", "uuid": "12e60435-24c6-489c-8735-a67f92a23dfa"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --pair-adapters --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.194 s (1959.497 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       1 (1.0%)\n  Read 2 with adapter:                       1 (1.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,692 bp (100.0%)\n  Read 1:        24,846 bp\n  Read 2:        24,846 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --pair-adapters --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.194 s (1959.497 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       1 (1.0%)\n  Read 2 with adapter:                       1 (1.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,692 bp (100.0%)\n  Read 1:        24,846 bp\n  Read 2:        24,846 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:53:22", "plugin": "core", "name": "start_epoch", "raw_value": "1741589602.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:53:23", "plugin": "core", "name": "end_epoch", "raw_value": "1741589603.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-6", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 6, "time_seconds": 38.16776704788208, "inputs": {"library|input_1": {"src": "hda", "id": "7b57c59ed2086a6b"}, "library|input_2": {"src": "hda", "id": "bd94a49253794989"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|pair_adapters": true, "library|type": "paired"}, "job": {"model_class": "Job", "id": "65f59b0e20f13045", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:21:30.407571", "update_time": "2025-03-10T07:21:46.028985", "galaxy_version": "24.2", "external_id": "gxy-brc4q", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/a/8/6/dataset_a86d1c7f-3f30-481f-88c0-03c3d082f255.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/9/e/3/dataset_9e34012b-a5b1-40ef-8347-2df413f58fc5.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'  --pair-adapters  --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 217, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 218, \"src\": \"hda\"}]}, \"pair_adapters\": true, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "7b57c59ed2086a6b", "src": "hda", "uuid": "a86d1c7f-3f30-481f-88c0-03c3d082f255"}, "library|input_2": {"id": "bd94a49253794989", "src": "hda", "uuid": "9e34012b-a5b1-40ef-8347-2df413f58fc5"}}, "outputs": {"out1": {"id": "d7454c4347c0bc74", "src": "hda", "uuid": "7a499564-c38a-4c7e-b028-6f9e48910773"}, "out2": {"id": "fb939f152bd164b3", "src": "hda", "uuid": "88c99d1e-12f2-424e-8ae8-f554b5be9b95"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --pair-adapters --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.185 s (1868.212 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       1 (1.0%)\n  Read 2 with adapter:                       1 (1.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,692 bp (100.0%)\n  Read 1:        24,846 bp\n  Read 2:        24,846 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --pair-adapters --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 8 cores ...\nFinished in 0.185 s (1868.212 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       1 (1.0%)\n  Read 2 with adapter:                       1 (1.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,692 bp (100.0%)\n  Read 1:        24,846 bp\n  Read 2:        24,846 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:21:32", "plugin": "core", "name": "start_epoch", "raw_value": "1741591292.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:21:33", "plugin": "core", "name": "end_epoch", "raw_value": "1741591293.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-7", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 7, "time_seconds": 38.05686402320862, "inputs": {"library|input_1": {"src": "hda", "id": "0cf5d198e28a5b13"}, "library|r1|adapters_0|adapter_source|adapter": "AAAGATG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "output_selector": ["rest_file", "json_stats"]}, "job": {"model_class": "Job", "id": "5143f3ff6c6b85ca", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:53:58.474779", "update_time": "2025-03-10T06:54:13.206935", "galaxy_version": "24.2", "external_id": "gxy-xkst7", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/6/5/dataset_76507be7-54b4-483a-9075-727b52830aad.dat' 'cutadapt_rest_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAGATG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --json=stats.json -r='rest_output.fa' -o 'out1.fa'  'cutadapt_rest_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 88, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAGATG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": "[\"rest_file\", \"json_stats\"]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "0cf5d198e28a5b13", "src": "hda", "uuid": "76507be7-54b4-483a-9075-727b52830aad"}}, "outputs": {"out1": {"id": "bfde9653d870cd45", "src": "hda", "uuid": "e67233c4-1a2e-489a-a757-ffb05e1b30d6"}, "rest_output": {"id": "90ebfe7c419d8b49", "src": "hda", "uuid": "3f24d85c-6fde-41a1-ba34-4f7f52cb37f2"}, "json_stats": {"id": "1d694f65db544156", "src": "hda", "uuid": "c722e05f-f1f6-49d6-9889-6644658d978e"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AAAGATG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --json=stats.json -r=rest_output.fa -o out1.fa cutadapt_rest_fa.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.052 s (10425.234 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       5\nReads with adapters:                         5 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             5 (100.0%)\n\nTotal basepairs processed:            97 bp\nTotal written (filtered):             35 bp (36.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t1\t0.0\t0\t1\n12\t1\t0.0\t0\t1\n14\t2\t0.0\t0\t2\n15\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AAAGATG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --json=stats.json -r=rest_output.fa -o out1.fa cutadapt_rest_fa.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.052 s (10425.234 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       5\nReads with adapters:                         5 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             5 (100.0%)\n\nTotal basepairs processed:            97 bp\nTotal written (filtered):             35 bp (36.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t1\t0.0\t0\t1\n12\t1\t0.0\t0\t1\n14\t2\t0.0\t0\t2\n15\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:54:00", "plugin": "core", "name": "start_epoch", "raw_value": "1741589640.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:54:00", "plugin": "core", "name": "end_epoch", "raw_value": "1741589640.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-7", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 7, "time_seconds": 36.561707973480225, "inputs": {"library|input_1": {"src": "hda", "id": "1d4d2249580303d7"}, "library|r1|adapters_0|adapter_source|adapter": "AAAGATG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "output_selector": ["rest_file", "json_stats"]}, "job": {"model_class": "Job", "id": "8ab5e12faaa90dde", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:22:07.537887", "update_time": "2025-03-10T07:22:22.017820", "galaxy_version": "24.2", "external_id": "gxy-p4n2b", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/e/c/dataset_4ecff8e2-8544-4216-84cb-1cf111b29fc4.dat' 'cutadapt_rest_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAGATG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --json=stats.json -r='rest_output.fa' -o 'out1.fa'  'cutadapt_rest_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 221, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAGATG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": "[\"rest_file\", \"json_stats\"]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "1d4d2249580303d7", "src": "hda", "uuid": "4ecff8e2-8544-4216-84cb-1cf111b29fc4"}}, "outputs": {"out1": {"id": "2bd7ae7acd9c4400", "src": "hda", "uuid": "ae513fce-008a-404c-9a81-eb7f42824a6a"}, "rest_output": {"id": "016b642153550e7e", "src": "hda", "uuid": "988141d8-f03f-4f65-a99c-366db33b12a0"}, "json_stats": {"id": "ca678191f5bdd9a0", "src": "hda", "uuid": "76db2384-c1ad-488e-9433-d2576779e38d"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AAAGATG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --json=stats.json -r=rest_output.fa -o out1.fa cutadapt_rest_fa.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.051 s (10233.641 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       5\nReads with adapters:                         5 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             5 (100.0%)\n\nTotal basepairs processed:            97 bp\nTotal written (filtered):             35 bp (36.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t1\t0.0\t0\t1\n12\t1\t0.0\t0\t1\n14\t2\t0.0\t0\t2\n15\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AAAGATG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --json=stats.json -r=rest_output.fa -o out1.fa cutadapt_rest_fa.fa\nProcessing single-end reads on 8 cores ...\nFinished in 0.051 s (10233.641 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       5\nReads with adapters:                         5 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             5 (100.0%)\n\nTotal basepairs processed:            97 bp\nTotal written (filtered):             35 bp (36.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t1\t0.0\t0\t1\n12\t1\t0.0\t0\t1\n14\t2\t0.0\t0\t2\n15\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:22:09", "plugin": "core", "name": "start_epoch", "raw_value": "1741591329.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:22:10", "plugin": "core", "name": "end_epoch", "raw_value": "1741591330.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-8", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 8, "time_seconds": 36.918696641922, "inputs": {"library|input_1": {"src": "hda", "id": "16a605596228344a"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|nextseq_trim": "20"}, "job": {"model_class": "Job", "id": "260ca900204ecbf7", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:54:36.524118", "update_time": "2025-03-10T06:54:51.044673", "galaxy_version": "24.2", "external_id": "gxy-7pdm2", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/f/b/dataset_2fb8c483-0c98-4308-8a79-2c4d4218acea.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --nextseq-trim=20       --minimum-length=1      -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 92, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"20\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "16a605596228344a", "src": "hda", "uuid": "2fb8c483-0c98-4308-8a79-2c4d4218acea"}}, "outputs": {"out1": {"id": "56038d25fbd413e6", "src": "hda", "uuid": "6e10d471-8a95-48d5-9f60-d970fdbeef00"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --nextseq-trim=20 --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.104 s (1049.155 \u00b5s/read; 0.06 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         4 (4.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     286 bp (1.2%)\nTotal written (filtered):         24,550 bp (98.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 75.0%\n  G: 25.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t3\t1.5\t0\t3\n4\t1\t0.4\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --nextseq-trim=20 --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.104 s (1049.155 \u00b5s/read; 0.06 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         4 (4.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     286 bp (1.2%)\nTotal written (filtered):         24,550 bp (98.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 75.0%\n  G: 25.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t3\t1.5\t0\t3\n4\t1\t0.4\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:54:38", "plugin": "core", "name": "start_epoch", "raw_value": "1741589678.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:54:39", "plugin": "core", "name": "end_epoch", "raw_value": "1741589679.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-8", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 8, "time_seconds": 35.24373149871826, "inputs": {"library|input_1": {"src": "hda", "id": "2016c64748187763"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|nextseq_trim": "20"}, "job": {"model_class": "Job", "id": "23c5ee77ece25c59", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:22:44.519982", "update_time": "2025-03-10T07:22:58.310586", "galaxy_version": "24.2", "external_id": "gxy-4swsq", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/a/6/9/dataset_a694525c-ff74-4755-bfe3-40f6455521ef.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --nextseq-trim=20       --minimum-length=1      -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 225, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"20\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "2016c64748187763", "src": "hda", "uuid": "a694525c-ff74-4755-bfe3-40f6455521ef"}}, "outputs": {"out1": {"id": "3e716a5bc61b6fc5", "src": "hda", "uuid": "5fce1520-974d-403e-99f0-4121fd26092a"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --nextseq-trim=20 --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.104 s (1050.735 \u00b5s/read; 0.06 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         4 (4.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     286 bp (1.2%)\nTotal written (filtered):         24,550 bp (98.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 75.0%\n  G: 25.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t3\t1.5\t0\t3\n4\t1\t0.4\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.8\nCommand line parameters: -j=8 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --nextseq-trim=20 --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 8 cores ...\nFinished in 0.104 s (1050.735 \u00b5s/read; 0.06 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         4 (4.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     286 bp (1.2%)\nTotal written (filtered):         24,550 bp (98.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 75.0%\n  G: 25.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t3\t1.5\t0\t3\n4\t1\t0.4\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:22:46", "plugin": "core", "name": "start_epoch", "raw_value": "1741591366.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:22:47", "plugin": "core", "name": "end_epoch", "raw_value": "1741591367.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-9", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 9, "time_seconds": 37.55032157897949, "inputs": {"library|input_1": {"src": "hda", "id": "a35b10e93a873683"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": ["report", "info_file"]}, "job": {"model_class": "Job", "id": "8fa935d8c8d3e585", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:55:12.431396", "update_time": "2025-03-10T06:55:28.046243", "galaxy_version": "24.2", "external_id": "gxy-c8qq4", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/1/b/7/dataset_1b724902-d8c1-4294-86c3-dbd29f3c02be.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --info-file='/galaxy/server/database/jobs_directory/000/53/outputs/dataset_559795eb-30a3-4065-aee4-f1c21bc27dcd.dat' -o 'out1.fq'  'cutadapt_small_fastq.fq'  > report.txt", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 94, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": "[\"report\", \"info_file\"]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "a35b10e93a873683", "src": "hda", "uuid": "1b724902-d8c1-4294-86c3-dbd29f3c02be"}}, "outputs": {"out1": {"id": "df630fcb8d78f84e", "src": "hda", "uuid": "22f999dc-8acc-43d4-8c41-d28b98f9e1b3"}, "report": {"id": "3659538d73320700", "src": "hda", "uuid": "08f10ed2-0189-4836-a1c4-c3f773aa6e56"}, "info_file": {"id": "3eddf4b9feb35612", "src": "hda", "uuid": "559795eb-30a3-4065-aee4-f1c21bc27dcd"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:55:14", "plugin": "core", "name": "start_epoch", "raw_value": "1741589714.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:55:15", "plugin": "core", "name": "end_epoch", "raw_value": "1741589715.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-9", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 9, "time_seconds": 35.44958996772766, "inputs": {"library|input_1": {"src": "hda", "id": "13c65d53d90a25d5"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": ["report", "info_file"]}, "job": {"model_class": "Job", "id": "2b502a1031a4edca", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:23:19.044898", "update_time": "2025-03-10T07:23:33.003397", "galaxy_version": "24.2", "external_id": "gxy-rxh5q", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/8/9/dataset_f895fd72-28c0-4c17-aae6-08bd62d1d4c9.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --info-file='/galaxy/server/database/jobs_directory/000/159/outputs/dataset_7bba6c85-e8f8-4b87-917e-4ded4610eaca.dat' -o 'out1.fq'  'cutadapt_small_fastq.fq'  > report.txt", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 227, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "output_selector": "[\"report\", \"info_file\"]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"library|input_1": {"id": "13c65d53d90a25d5", "src": "hda", "uuid": "f895fd72-28c0-4c17-aae6-08bd62d1d4c9"}}, "outputs": {"out1": {"id": "5d3c75c0e1514d3f", "src": "hda", "uuid": "5b1dfef6-e70a-4821-8ce2-804dad9309d4"}, "report": {"id": "406fab7270f6fc37", "src": "hda", "uuid": "b71043e3-e6fe-4e8c-9f98-bc2c2144bf56"}, "info_file": {"id": "e8067f52e9b71206", "src": "hda", "uuid": "7bba6c85-e8f8-4b87-917e-4ded4610eaca"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/cutadapt:4.9--py312h0fa9677_3"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "30064", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "30064.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:23:20", "plugin": "core", "name": "start_epoch", "raw_value": "1741591400.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:23:21", "plugin": "core", "name": "end_epoch", "raw_value": "1741591401.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "deeptools_bam_compare/3.5.4+galaxy0-0", "has_data": true, "data": {"tool_id": "deeptools_bam_compare", "tool_version": "3.5.4+galaxy0", "test_index": 0, "time_seconds": 54.14513373374939, "inputs": {"bamFile1": {"src": "hda", "id": "b927b323c244c6ba"}, "bamFile2": {"src": "hda", "id": "b927b323c244c6ba"}, "binSize": "5", "comparison|type": "ratio", "outFileFormat": "bedgraph", "advancedOpt|showAdvancedOpt": "no"}, "job": {"model_class": "Job", "id": "ff69b4bca548f4f4", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare/3.5.4+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:48:33.057931", "update_time": "2025-03-10T06:49:04.946030", "galaxy_version": "24.2", "external_id": "gxy-zrnpt", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/3/8/a/dataset_38a4e41b-9c23-440d-8498-a8d10efb13a2.dat' one.bam && ln -s '/galaxy/server/database/objects/_metadata_files/e/5/4/metadata_e54be615-8f1a-4e62-aff6-d0a7293b170d.dat' one.bam.bai && ln -s '/galaxy/server/database/objects/3/8/a/dataset_38a4e41b-9c23-440d-8498-a8d10efb13a2.dat' two.bam && ln -s '/galaxy/server/database/objects/_metadata_files/e/5/4/metadata_e54be615-8f1a-4e62-aff6-d0a7293b170d.dat' two.bam.bai &&  bamCompare --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfile1 one.bam --bamfile2 two.bam  --outFileName '/galaxy/server/database/jobs_directory/000/30/outputs/dataset_79aed48c-ca34-4944-b237-1b883303d5d8.dat' --outFileFormat 'bedgraph'  --binSize 5  --scaleFactorsMethod readCount  --operation ratio   --pseudocount 1 1", "user_email": "tests@fake.org", "command_version": "bamCompare 3.5.4", "params": {"binSize": "\"5\"", "scaling": "{\"__current_case__\": 1, \"method\": \"readCount\"}", "comparison": "{\"__current_case__\": 1, \"pseudocount\": \"1 1\", \"type\": \"ratio\"}", "exactScaling": "false", "outFileFormat": "\"bedgraph\"", "region": "\"\"", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"bamFile1": {"id": "b927b323c244c6ba", "src": "hda", "uuid": "38a4e41b-9c23-440d-8498-a8d10efb13a2"}, "bamFile2": {"id": "b927b323c244c6ba", "src": "hda", "uuid": "38a4e41b-9c23-440d-8498-a8d10efb13a2"}}, "outputs": {"outFileName": {"id": "ef6a0bcab3ab1090", "src": "hda", "uuid": "79aed48c-ca34-4944-b237-1b883303d5d8"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 5\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: None\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 5\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 5\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: None\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 5\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-eb9e7907c7a753917c1e4d7a64384c047429618a:bcea566aaf2a8cd09765df369b45c50e0b7e9f18-1", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-eb9e7907c7a753917c1e4d7a64384c047429618a:bcea566aaf2a8cd09765df369b45c50e0b7e9f18-1"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:48:48", "plugin": "core", "name": "start_epoch", "raw_value": "1741589328.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:48:49", "plugin": "core", "name": "end_epoch", "raw_value": "1741589329.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "deeptools_bam_compare/3.5.4+galaxy0-1", "has_data": true, "data": {"tool_id": "deeptools_bam_compare", "tool_version": "3.5.4+galaxy0", "test_index": 1, "time_seconds": 36.595128536224365, "inputs": {"bamFile1": {"src": "hda", "id": "6a2ce586a3be1bb9"}, "bamFile2": {"src": "hda", "id": "6a2ce586a3be1bb9"}, "binSize": "10", "comparison|type": "ratio", "outFileFormat": "bigwig", "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "a6418e2670735033", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare/3.5.4+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:49:28.053178", "update_time": "2025-03-10T06:49:41.483610", "galaxy_version": "24.2", "external_id": "gxy-mv5nr", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/2/c/1/dataset_2c13a0e6-12ff-42d9-b490-56f66d4bd5be.dat' one.bam && ln -s '/galaxy/server/database/objects/_metadata_files/b/8/b/metadata_b8b98a4c-032e-43f6-b76d-3994847a7719.dat' one.bam.bai && ln -s '/galaxy/server/database/objects/2/c/1/dataset_2c13a0e6-12ff-42d9-b490-56f66d4bd5be.dat' two.bam && ln -s '/galaxy/server/database/objects/_metadata_files/b/8/b/metadata_b8b98a4c-032e-43f6-b76d-3994847a7719.dat' two.bam.bai &&  bamCompare --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfile1 one.bam --bamfile2 two.bam  --outFileName '/galaxy/server/database/jobs_directory/000/32/outputs/dataset_04cfa6d9-1e51-44cd-a8d0-7f32ef575156.dat' --outFileFormat 'bigwig'  --binSize 10  --scaleFactorsMethod readCount  --operation ratio   --pseudocount 1 1       --minMappingQuality '1'", "user_email": "tests@fake.org", "command_version": "bamCompare 3.5.4", "params": {"binSize": "\"10\"", "scaling": "{\"__current_case__\": 1, \"method\": \"readCount\"}", "comparison": "{\"__current_case__\": 1, \"pseudocount\": \"1 1\", \"type\": \"ratio\"}", "exactScaling": "false", "outFileFormat": "\"bigwig\"", "region": "\"\"", "advancedOpt": "{\"__current_case__\": 1, \"blackListFileName\": null, \"centerReads\": false, \"doExtendCustom\": {\"__current_case__\": 0, \"doExtend\": \"no\"}, \"ignoreDuplicates\": false, \"ignoreForNormalization\": \"\", \"maxFragmentLength\": \"0\", \"minFragmentLength\": \"0\", \"minMappingQuality\": \"1\", \"samFlagExclude\": \"\", \"samFlagInclude\": \"\", \"showAdvancedOpt\": \"yes\", \"skipNAs\": false, \"skipZeroOverZero\": \"\", \"smoothLength\": \"\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"bamFile1": {"id": "6a2ce586a3be1bb9", "src": "hda", "uuid": "2c13a0e6-12ff-42d9-b490-56f66d4bd5be"}, "bamFile2": {"id": "6a2ce586a3be1bb9", "src": "hda", "uuid": "2c13a0e6-12ff-42d9-b490-56f66d4bd5be"}}, "outputs": {"outFileName": {"id": "9aea3e389dd2dd43", "src": "hda", "uuid": "04cfa6d9-1e51-44cd-a8d0-7f32ef575156"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\nDue to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\n", "tool_stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 10\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: 1\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 10\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_stdout": "", "job_stderr": "", "stdout": "Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\nDue to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\n", "stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 10\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: 1\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 10\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-eb9e7907c7a753917c1e4d7a64384c047429618a:bcea566aaf2a8cd09765df369b45c50e0b7e9f18-1", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-eb9e7907c7a753917c1e4d7a64384c047429618a:bcea566aaf2a8cd09765df369b45c50e0b7e9f18-1"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:49:29", "plugin": "core", "name": "start_epoch", "raw_value": "1741589369.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:49:30", "plugin": "core", "name": "end_epoch", "raw_value": "1741589370.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-0", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 0, "time_seconds": 58.2920298576355, "inputs": {"input_file": {"src": "hda", "id": "2ee062c1caeb795e"}}, "job": {"model_class": "Job", "id": "2a0342980d529318", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:46:04.575455", "update_time": "2025-03-10T07:46:41.391971", "galaxy_version": "24.2", "external_id": "gxy-bm796", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/c/5/0/dataset_c50be9dc-176b-406f-a287-fe3cc9de9dc0.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/jobs_directory/000/246/outputs/dataset_937ed57d-b17c-4fc7-8a70-8f63aee0e375_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/246/outputs/dataset_937ed57d-b17c-4fc7-8a70-8f63aee0e375_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/jobs_directory/000/246/outputs/dataset_937ed57d-b17c-4fc7-8a70-8f63aee0e375_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/246/outputs/dataset_937ed57d-b17c-4fc7-8a70-8f63aee0e375_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"contaminants": null, "adapters": null, "limits": null, "nogroup": "false", "min_length": "\"\"", "kmers": "\"7\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "2ee062c1caeb795e", "src": "hda", "uuid": "c50be9dc-176b-406f-a287-fe3cc9de9dc0"}}, "outputs": {"html_file": {"id": "70b5127071603801", "src": "hda", "uuid": "937ed57d-b17c-4fc7-8a70-8f63aee0e375"}, "text_file": {"id": "adb49a0a03c097dd", "src": "hda", "uuid": "39ab37c9-53da-40f3-a664-5955db828146"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:46:22", "plugin": "core", "name": "start_epoch", "raw_value": "1741592782.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:46:25", "plugin": "core", "name": "end_epoch", "raw_value": "1741592785.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-0", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 0, "time_seconds": 39.90934991836548, "inputs": {"input_file": {"src": "hda", "id": "bcfac19ae2b4ec8f"}}, "job": {"model_class": "Job", "id": "e4e9ac4280389b36", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:51:41.216552", "update_time": "2025-03-10T07:51:58.932793", "galaxy_version": "24.2", "external_id": "gxy-lvzzs", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/5/8/f/dataset_58f39aa6-e23b-4357-80b0-7921241c09b6.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/jobs_directory/000/266/outputs/dataset_d581e546-fff7-4025-a7cc-b24f944d97a2_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/266/outputs/dataset_d581e546-fff7-4025-a7cc-b24f944d97a2_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/jobs_directory/000/266/outputs/dataset_d581e546-fff7-4025-a7cc-b24f944d97a2_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/266/outputs/dataset_d581e546-fff7-4025-a7cc-b24f944d97a2_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"contaminants": null, "adapters": null, "limits": null, "nogroup": "false", "min_length": "\"\"", "kmers": "\"7\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "bcfac19ae2b4ec8f", "src": "hda", "uuid": "58f39aa6-e23b-4357-80b0-7921241c09b6"}}, "outputs": {"html_file": {"id": "1a6ac7ec0e22d905", "src": "hda", "uuid": "d581e546-fff7-4025-a7cc-b24f944d97a2"}, "text_file": {"id": "40b2bef6c2306bb5", "src": "hda", "uuid": "726be200-5af4-4faf-94cd-5ffdf0272e09"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:51:43", "plugin": "core", "name": "start_epoch", "raw_value": "1741593103.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:51:47", "plugin": "core", "name": "end_epoch", "raw_value": "1741593107.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "4 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-1", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 1, "time_seconds": 39.05664944648743, "inputs": {"input_file": {"src": "hda", "id": "d78cc85272fb0f86"}, "contaminants": {"src": "hda", "id": "1069295083508d6a"}}, "job": {"model_class": "Job", "id": "6dfc4de14cacc21a", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:47:03.909709", "update_time": "2025-03-10T07:47:20.645534", "galaxy_version": "24.2", "external_id": "gxy-tsmnh", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/5/b/8/dataset_5b83389e-1aa8-47ad-a571-1a8792b72134.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/jobs_directory/000/249/outputs/dataset_022514a0-9984-4801-97ea-25bd8ae2bf26_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/249/outputs/dataset_022514a0-9984-4801-97ea-25bd8ae2bf26_files' --contaminants '/galaxy/server/database/objects/2/c/b/dataset_2cb869e2-b96e-4fae-9419-02abdfd2b4d8.dat'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/jobs_directory/000/249/outputs/dataset_022514a0-9984-4801-97ea-25bd8ae2bf26_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/249/outputs/dataset_022514a0-9984-4801-97ea-25bd8ae2bf26_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"adapters": null, "limits": null, "nogroup": "false", "min_length": "\"\"", "kmers": "\"7\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "d78cc85272fb0f86", "src": "hda", "uuid": "5b83389e-1aa8-47ad-a571-1a8792b72134"}, "contaminants": {"id": "1069295083508d6a", "src": "hda", "uuid": "2cb869e2-b96e-4fae-9419-02abdfd2b4d8"}}, "outputs": {"html_file": {"id": "698eb5d3739f5a56", "src": "hda", "uuid": "022514a0-9984-4801-97ea-25bd8ae2bf26"}, "text_file": {"id": "85515cff0274d1d8", "src": "hda", "uuid": "af3c168c-0ea2-4d3d-9d8f-899f01cc744f"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:47:05", "plugin": "core", "name": "start_epoch", "raw_value": "1741592825.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:47:09", "plugin": "core", "name": "end_epoch", "raw_value": "1741592829.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "4 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-1", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 1, "time_seconds": 40.62653183937073, "inputs": {"input_file": {"src": "hda", "id": "10f7941b1d22eb0b"}, "contaminants": {"src": "hda", "id": "73c91d6da9d8bb55"}}, "job": {"model_class": "Job", "id": "64ceec58c2ced0f8", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:52:22.418557", "update_time": "2025-03-10T07:52:39.774419", "galaxy_version": "24.2", "external_id": "gxy-mb294", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/3/8/1/dataset_381303c1-73c1-4273-bb42-ea984f18bc77.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/jobs_directory/000/269/outputs/dataset_986e473f-1ca5-4fd9-8243-692901ccb3a8_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/269/outputs/dataset_986e473f-1ca5-4fd9-8243-692901ccb3a8_files' --contaminants '/galaxy/server/database/objects/a/b/a/dataset_aba0ce40-e439-40e1-8f02-d12bb1218c39.dat'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/jobs_directory/000/269/outputs/dataset_986e473f-1ca5-4fd9-8243-692901ccb3a8_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/269/outputs/dataset_986e473f-1ca5-4fd9-8243-692901ccb3a8_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"adapters": null, "limits": null, "nogroup": "false", "min_length": "\"\"", "kmers": "\"7\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "10f7941b1d22eb0b", "src": "hda", "uuid": "381303c1-73c1-4273-bb42-ea984f18bc77"}, "contaminants": {"id": "73c91d6da9d8bb55", "src": "hda", "uuid": "aba0ce40-e439-40e1-8f02-d12bb1218c39"}}, "outputs": {"html_file": {"id": "2ec5e33b48d5765d", "src": "hda", "uuid": "986e473f-1ca5-4fd9-8243-692901ccb3a8"}, "text_file": {"id": "5019904b3d6cc06a", "src": "hda", "uuid": "2b03a539-47ac-4689-90dc-0bf30658b7ca"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:52:24", "plugin": "core", "name": "start_epoch", "raw_value": "1741593144.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:52:28", "plugin": "core", "name": "end_epoch", "raw_value": "1741593148.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "4 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-2", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 2, "time_seconds": 40.43835949897766, "inputs": {"input_file": {"src": "hda", "id": "5f5c6c76413d15e5"}, "adapters": {"src": "hda", "id": "91d2981a99571a5f"}}, "job": {"model_class": "Job", "id": "f70cc5a1b206c129", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:47:43.058651", "update_time": "2025-03-10T07:48:01.030814", "galaxy_version": "24.2", "external_id": "gxy-gspk5", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/4/f/2/dataset_4f266814-8808-4b69-b89a-fc3c7a67023e.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/jobs_directory/000/252/outputs/dataset_94753f8c-79b8-4c73-bf5a-49a3fb58cdd4_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/252/outputs/dataset_94753f8c-79b8-4c73-bf5a-49a3fb58cdd4_files'  --adapters '/galaxy/server/database/objects/0/f/e/dataset_0fe876a4-dea7-48ee-9ab3-1aabb2576a61.dat'  --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/jobs_directory/000/252/outputs/dataset_94753f8c-79b8-4c73-bf5a-49a3fb58cdd4_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/252/outputs/dataset_94753f8c-79b8-4c73-bf5a-49a3fb58cdd4_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"contaminants": null, "limits": null, "nogroup": "false", "min_length": "\"\"", "kmers": "\"7\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "5f5c6c76413d15e5", "src": "hda", "uuid": "4f266814-8808-4b69-b89a-fc3c7a67023e"}, "adapters": {"id": "91d2981a99571a5f", "src": "hda", "uuid": "0fe876a4-dea7-48ee-9ab3-1aabb2576a61"}}, "outputs": {"html_file": {"id": "2ab86bde6df174ba", "src": "hda", "uuid": "94753f8c-79b8-4c73-bf5a-49a3fb58cdd4"}, "text_file": {"id": "8868547ad8fbd482", "src": "hda", "uuid": "9196898a-8b4f-44ef-842b-bc2385102840"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:47:44", "plugin": "core", "name": "start_epoch", "raw_value": "1741592864.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:47:49", "plugin": "core", "name": "end_epoch", "raw_value": "1741592869.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "5 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-2", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 2, "time_seconds": 41.01320552825928, "inputs": {"input_file": {"src": "hda", "id": "6132a4cdba713c5f"}, "adapters": {"src": "hda", "id": "3cd1097b06949863"}}, "job": {"model_class": "Job", "id": "f63eb170e9c97574", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:53:02.655010", "update_time": "2025-03-10T07:53:20.657825", "galaxy_version": "24.2", "external_id": "gxy-cwfl8", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/d/3/3/dataset_d33d4e88-db1a-4870-9c36-0cec3d596fdb.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/jobs_directory/000/272/outputs/dataset_53f7c971-08ba-4fae-b43f-c40272dfb8ff_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/272/outputs/dataset_53f7c971-08ba-4fae-b43f-c40272dfb8ff_files'  --adapters '/galaxy/server/database/objects/5/6/a/dataset_56a484c5-c6a5-4a4c-9e4b-78c199fe1a88.dat'  --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/jobs_directory/000/272/outputs/dataset_53f7c971-08ba-4fae-b43f-c40272dfb8ff_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/272/outputs/dataset_53f7c971-08ba-4fae-b43f-c40272dfb8ff_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"contaminants": null, "limits": null, "nogroup": "false", "min_length": "\"\"", "kmers": "\"7\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "6132a4cdba713c5f", "src": "hda", "uuid": "d33d4e88-db1a-4870-9c36-0cec3d596fdb"}, "adapters": {"id": "3cd1097b06949863", "src": "hda", "uuid": "56a484c5-c6a5-4a4c-9e4b-78c199fe1a88"}}, "outputs": {"html_file": {"id": "3cb535fa8865f049", "src": "hda", "uuid": "53f7c971-08ba-4fae-b43f-c40272dfb8ff"}, "text_file": {"id": "8d2d34b2c37082f6", "src": "hda", "uuid": "0581bdb3-a550-4f2f-83f9-c91f8e2b54dc"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:53:04", "plugin": "core", "name": "start_epoch", "raw_value": "1741593184.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:53:09", "plugin": "core", "name": "end_epoch", "raw_value": "1741593189.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "5 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-3", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 3, "time_seconds": 39.06049609184265, "inputs": {"input_file": {"src": "hda", "id": "3071b82efce67c14"}, "limits": {"src": "hda", "id": "bc55093f6839f753"}}, "job": {"model_class": "Job", "id": "c4a0c4adacba4974", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:48:23.566475", "update_time": "2025-03-10T07:48:40.282864", "galaxy_version": "24.2", "external_id": "gxy-42lgf", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/f/1/a/dataset_f1a9c7a2-65c3-4dfc-a8a7-398a15c09825.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/jobs_directory/000/255/outputs/dataset_0a33696e-bddc-4f5d-9a50-682c78ec147e_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/255/outputs/dataset_0a33696e-bddc-4f5d-9a50-682c78ec147e_files'   --limits '/galaxy/server/database/objects/3/7/1/dataset_371be3df-622b-4107-a53a-956c622e754c.dat' --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/jobs_directory/000/255/outputs/dataset_0a33696e-bddc-4f5d-9a50-682c78ec147e_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/255/outputs/dataset_0a33696e-bddc-4f5d-9a50-682c78ec147e_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"contaminants": null, "adapters": null, "nogroup": "false", "min_length": "\"\"", "kmers": "\"7\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "3071b82efce67c14", "src": "hda", "uuid": "f1a9c7a2-65c3-4dfc-a8a7-398a15c09825"}, "limits": {"id": "bc55093f6839f753", "src": "hda", "uuid": "371be3df-622b-4107-a53a-956c622e754c"}}, "outputs": {"html_file": {"id": "35518e3f426a1803", "src": "hda", "uuid": "0a33696e-bddc-4f5d-9a50-682c78ec147e"}, "text_file": {"id": "8117c84075567284", "src": "hda", "uuid": "95d01d82-e777-4963-9f84-ccae432cb119"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:48:25", "plugin": "core", "name": "start_epoch", "raw_value": "1741592905.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:48:29", "plugin": "core", "name": "end_epoch", "raw_value": "1741592909.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "4 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-3", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 3, "time_seconds": 40.06879138946533, "inputs": {"input_file": {"src": "hda", "id": "1271727ad8fe3363"}, "limits": {"src": "hda", "id": "9fdcb932a22fcffa"}}, "job": {"model_class": "Job", "id": "260bea3a044cece0", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:53:42.854905", "update_time": "2025-03-10T07:54:00.975620", "galaxy_version": "24.2", "external_id": "gxy-pfgfz", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/7/8/d/dataset_78da028f-e6a6-4805-a9bc-35fc35441af5.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/jobs_directory/000/275/outputs/dataset_0b4c13a8-2b9e-4ad3-9029-5803fd4977b6_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/275/outputs/dataset_0b4c13a8-2b9e-4ad3-9029-5803fd4977b6_files'   --limits '/galaxy/server/database/objects/c/e/4/dataset_ce476c8e-195e-4dbf-a5ff-1e95f654a0d6.dat' --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/jobs_directory/000/275/outputs/dataset_0b4c13a8-2b9e-4ad3-9029-5803fd4977b6_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/275/outputs/dataset_0b4c13a8-2b9e-4ad3-9029-5803fd4977b6_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"contaminants": null, "adapters": null, "nogroup": "false", "min_length": "\"\"", "kmers": "\"7\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "1271727ad8fe3363", "src": "hda", "uuid": "78da028f-e6a6-4805-a9bc-35fc35441af5"}, "limits": {"id": "9fdcb932a22fcffa", "src": "hda", "uuid": "ce476c8e-195e-4dbf-a5ff-1e95f654a0d6"}}, "outputs": {"html_file": {"id": "ecaa8b91731689a8", "src": "hda", "uuid": "0b4c13a8-2b9e-4ad3-9029-5803fd4977b6"}, "text_file": {"id": "1e84890e15ac3a45", "src": "hda", "uuid": "7cbd813b-a731-4241-9913-dca4061fb9a9"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:53:45", "plugin": "core", "name": "start_epoch", "raw_value": "1741593225.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:53:48", "plugin": "core", "name": "end_epoch", "raw_value": "1741593228.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-4", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 4, "time_seconds": 38.42562484741211, "inputs": {"input_file": {"src": "hda", "id": "75620d51faf0e467"}, "limits": {"src": "hda", "id": "936dd9606524e075"}, "kmers": "3"}, "job": {"model_class": "Job", "id": "e97bb79db87b2717", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:49:01.964490", "update_time": "2025-03-10T07:49:18.717649", "galaxy_version": "24.2", "external_id": "gxy-rjp7f", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/3/2/7/dataset_327cc7b3-09c6-4aad-abe4-61bdc41023be.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/jobs_directory/000/258/outputs/dataset_4cb56d06-fe64-4e8d-b955-625195226912_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/258/outputs/dataset_4cb56d06-fe64-4e8d-b955-625195226912_files'   --limits '/galaxy/server/database/objects/4/b/e/dataset_4be97957-5355-4a30-ab9f-97b395bb4835.dat' --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 3 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/jobs_directory/000/258/outputs/dataset_4cb56d06-fe64-4e8d-b955-625195226912_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/258/outputs/dataset_4cb56d06-fe64-4e8d-b955-625195226912_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"contaminants": null, "adapters": null, "nogroup": "false", "min_length": "\"\"", "kmers": "\"3\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "75620d51faf0e467", "src": "hda", "uuid": "327cc7b3-09c6-4aad-abe4-61bdc41023be"}, "limits": {"id": "936dd9606524e075", "src": "hda", "uuid": "4be97957-5355-4a30-ab9f-97b395bb4835"}}, "outputs": {"html_file": {"id": "ee9a9fd13b58ab11", "src": "hda", "uuid": "4cb56d06-fe64-4e8d-b955-625195226912"}, "text_file": {"id": "6ae9f2d2842de3db", "src": "hda", "uuid": "6df38750-d4a0-431b-bd86-78f5958c368e"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:49:03", "plugin": "core", "name": "start_epoch", "raw_value": "1741592943.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:49:06", "plugin": "core", "name": "end_epoch", "raw_value": "1741592946.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-4", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 4, "time_seconds": 38.102869749069214, "inputs": {"input_file": {"src": "hda", "id": "5f09ad47a593c3af"}, "limits": {"src": "hda", "id": "34b3bf634d055e7b"}, "kmers": "3"}, "job": {"model_class": "Job", "id": "c555cef3745bb687", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:54:23.276273", "update_time": "2025-03-10T07:54:39.143585", "galaxy_version": "24.2", "external_id": "gxy-qvdg5", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/5/7/b/dataset_57bda57a-dcaf-401c-a018-7e816e1b3bbe.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/jobs_directory/000/278/outputs/dataset_0f5a9ee6-90af-40b3-8931-6e42d0e5215d_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/278/outputs/dataset_0f5a9ee6-90af-40b3-8931-6e42d0e5215d_files'   --limits '/galaxy/server/database/objects/0/f/1/dataset_0f18277d-8df3-4746-ae60-c1dfd98a3692.dat' --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 3 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/jobs_directory/000/278/outputs/dataset_0f5a9ee6-90af-40b3-8931-6e42d0e5215d_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/278/outputs/dataset_0f5a9ee6-90af-40b3-8931-6e42d0e5215d_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"contaminants": null, "adapters": null, "nogroup": "false", "min_length": "\"\"", "kmers": "\"3\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "5f09ad47a593c3af", "src": "hda", "uuid": "57bda57a-dcaf-401c-a018-7e816e1b3bbe"}, "limits": {"id": "34b3bf634d055e7b", "src": "hda", "uuid": "0f18277d-8df3-4746-ae60-c1dfd98a3692"}}, "outputs": {"html_file": {"id": "a9165ce021ed0455", "src": "hda", "uuid": "0f5a9ee6-90af-40b3-8931-6e42d0e5215d"}, "text_file": {"id": "3120c16e4bd4dc10", "src": "hda", "uuid": "b2943210-ded5-412f-91b6-e05643d101f4"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:54:24", "plugin": "core", "name": "start_epoch", "raw_value": "1741593264.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:54:28", "plugin": "core", "name": "end_epoch", "raw_value": "1741593268.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "4 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-5", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 5, "time_seconds": 39.46641159057617, "inputs": {"input_file": {"src": "hda", "id": "9fb5cc8d363a551d"}, "min_length": "108"}, "job": {"model_class": "Job", "id": "9fa14082497a6b86", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:49:40.165014", "update_time": "2025-03-10T07:49:58.191700", "galaxy_version": "24.2", "external_id": "gxy-9wtm6", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/a/2/1/dataset_a21047db-e223-4efb-b07b-5c72cd869405.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/jobs_directory/000/260/outputs/dataset_5135bb10-3587-46bb-bf5f-7cc8e1f8ceb4_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/260/outputs/dataset_5135bb10-3587-46bb-bf5f-7cc8e1f8ceb4_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract --min_length 108  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/jobs_directory/000/260/outputs/dataset_5135bb10-3587-46bb-bf5f-7cc8e1f8ceb4_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/260/outputs/dataset_5135bb10-3587-46bb-bf5f-7cc8e1f8ceb4_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"contaminants": null, "adapters": null, "limits": null, "nogroup": "false", "min_length": "\"108\"", "kmers": "\"7\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "9fb5cc8d363a551d", "src": "hda", "uuid": "a21047db-e223-4efb-b07b-5c72cd869405"}}, "outputs": {"html_file": {"id": "cbb8005bc7fc1c0c", "src": "hda", "uuid": "5135bb10-3587-46bb-bf5f-7cc8e1f8ceb4"}, "text_file": {"id": "89f35b4e698ec2ff", "src": "hda", "uuid": "d20cf7b6-cb9a-4315-bf8e-a0ad018ccc46"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:49:41", "plugin": "core", "name": "start_epoch", "raw_value": "1741592981.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:49:46", "plugin": "core", "name": "end_epoch", "raw_value": "1741592986.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "5 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-5", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 5, "time_seconds": 38.705220222473145, "inputs": {"input_file": {"src": "hda", "id": "5ac1fe001295c65d"}, "min_length": "108"}, "job": {"model_class": "Job", "id": "e31dc1353b4cc67f", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:55:00.481974", "update_time": "2025-03-10T07:55:17.962847", "galaxy_version": "24.2", "external_id": "gxy-npg92", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/2/8/c/dataset_28c5d5a5-56f0-4844-a63c-3ebc482154c7.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/jobs_directory/000/280/outputs/dataset_e323522a-6105-4dc2-b58e-0d316df4b889_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/280/outputs/dataset_e323522a-6105-4dc2-b58e-0d316df4b889_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract --min_length 108  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/jobs_directory/000/280/outputs/dataset_e323522a-6105-4dc2-b58e-0d316df4b889_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/280/outputs/dataset_e323522a-6105-4dc2-b58e-0d316df4b889_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"contaminants": null, "adapters": null, "limits": null, "nogroup": "false", "min_length": "\"108\"", "kmers": "\"7\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "5ac1fe001295c65d", "src": "hda", "uuid": "28c5d5a5-56f0-4844-a63c-3ebc482154c7"}}, "outputs": {"html_file": {"id": "1c91171bb9547d75", "src": "hda", "uuid": "e323522a-6105-4dc2-b58e-0d316df4b889"}, "text_file": {"id": "b102f0a5791235c4", "src": "hda", "uuid": "b120b431-ec5a-4802-9bda-04a826301acd"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:55:02", "plugin": "core", "name": "start_epoch", "raw_value": "1741593302.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:55:06", "plugin": "core", "name": "end_epoch", "raw_value": "1741593306.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "4 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-6", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 6, "time_seconds": 39.58364152908325, "inputs": {"input_file": {"src": "hda", "id": "c608155fed9c78f9"}, "nogroup": true}, "job": {"model_class": "Job", "id": "bf1b590c06deadd8", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:50:20.132447", "update_time": "2025-03-10T07:50:37.886419", "galaxy_version": "24.2", "external_id": "gxy-67rm5", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/3/a/6/dataset_3a675d3d-6584-4560-9c97-c07da99dc4de.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/jobs_directory/000/262/outputs/dataset_ecd20bf6-919b-45b0-9042-b76b6bcbdb5c_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/262/outputs/dataset_ecd20bf6-919b-45b0-9042-b76b6bcbdb5c_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract --nogroup --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/jobs_directory/000/262/outputs/dataset_ecd20bf6-919b-45b0-9042-b76b6bcbdb5c_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/262/outputs/dataset_ecd20bf6-919b-45b0-9042-b76b6bcbdb5c_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"contaminants": null, "adapters": null, "limits": null, "nogroup": "true", "min_length": "\"\"", "kmers": "\"7\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "c608155fed9c78f9", "src": "hda", "uuid": "3a675d3d-6584-4560-9c97-c07da99dc4de"}}, "outputs": {"html_file": {"id": "88213d370856e3df", "src": "hda", "uuid": "ecd20bf6-919b-45b0-9042-b76b6bcbdb5c"}, "text_file": {"id": "51a28b08f7ee3233", "src": "hda", "uuid": "1e70aa09-8b59-425b-9e8d-470b819defca"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:50:21", "plugin": "core", "name": "start_epoch", "raw_value": "1741593021.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:50:26", "plugin": "core", "name": "end_epoch", "raw_value": "1741593026.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "5 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-6", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 6, "time_seconds": 39.85825228691101, "inputs": {"input_file": {"src": "hda", "id": "a77453e3d649fe0e"}, "nogroup": true}, "job": {"model_class": "Job", "id": "db6a3d6fe7440002", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:55:39.315098", "update_time": "2025-03-10T07:55:57.769824", "galaxy_version": "24.2", "external_id": "gxy-nj4pl", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/2/8/6/dataset_286437e3-3196-48a2-86e4-6569a6b2525c.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/jobs_directory/000/282/outputs/dataset_0fa373e1-2bda-45f4-9efb-d3eeed1a3bb3_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/282/outputs/dataset_0fa373e1-2bda-45f4-9efb-d3eeed1a3bb3_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract --nogroup --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/jobs_directory/000/282/outputs/dataset_0fa373e1-2bda-45f4-9efb-d3eeed1a3bb3_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/282/outputs/dataset_0fa373e1-2bda-45f4-9efb-d3eeed1a3bb3_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\"", "contaminants": null, "adapters": null, "limits": null, "nogroup": "true", "min_length": "\"\"", "kmers": "\"7\""}, "inputs": {"input_file": {"id": "a77453e3d649fe0e", "src": "hda", "uuid": "286437e3-3196-48a2-86e4-6569a6b2525c"}}, "outputs": {"html_file": {"id": "171550fbb753cdfc", "src": "hda", "uuid": "0fa373e1-2bda-45f4-9efb-d3eeed1a3bb3"}, "text_file": {"id": "218c21c8600d2615", "src": "hda", "uuid": "afa11b48-9a47-4a86-baf8-1e4dd56949d8"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:55:41", "plugin": "core", "name": "start_epoch", "raw_value": "1741593341.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:55:46", "plugin": "core", "name": "end_epoch", "raw_value": "1741593346.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "5 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-7", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 7, "time_seconds": 39.85530209541321, "inputs": {"input_file": {"src": "hda", "id": "fe46036ad4407376"}}, "job": {"model_class": "Job", "id": "17b95a801d7023b3", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:50:59.436644", "update_time": "2025-03-10T07:51:17.980128", "galaxy_version": "24.2", "external_id": "gxy-2fzjt", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/9/4/d/dataset_94dfa14a-ed14-4129-b0fb-9c9621da165e.dat' 'hisat_output_1_bam' && mkdir -p '/galaxy/server/database/jobs_directory/000/264/outputs/dataset_3d77396c-61e7-43c7-8575-1762ed1b9793_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/264/outputs/dataset_3d77396c-61e7-43c7-8575-1762ed1b9793_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'bam' 'hisat_output_1_bam'  && cp '/galaxy/server/database/jobs_directory/000/264/outputs/dataset_3d77396c-61e7-43c7-8575-1762ed1b9793_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/264/outputs/dataset_3d77396c-61e7-43c7-8575-1762ed1b9793_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"contaminants": null, "adapters": null, "limits": null, "nogroup": "false", "min_length": "\"\"", "kmers": "\"7\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "fe46036ad4407376", "src": "hda", "uuid": "94dfa14a-ed14-4129-b0fb-9c9621da165e"}}, "outputs": {"html_file": {"id": "456d83758fb6d415", "src": "hda", "uuid": "3d77396c-61e7-43c7-8575-1762ed1b9793"}, "text_file": {"id": "beccbda503e806ae", "src": "hda", "uuid": "d90339a1-89dd-4fc3-823c-e9254fbf7dae"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:51:01", "plugin": "core", "name": "start_epoch", "raw_value": "1741593061.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:51:06", "plugin": "core", "name": "end_epoch", "raw_value": "1741593066.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "5 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-7", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 7, "time_seconds": 39.79455327987671, "inputs": {"input_file": {"src": "hda", "id": "b6ff0ac7eb12022d"}}, "job": {"model_class": "Job", "id": "4116c3de7bec1995", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:56:19.951784", "update_time": "2025-03-10T07:56:37.688253", "galaxy_version": "24.2", "external_id": "gxy-p76ch", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/5/1/e/dataset_51e15524-cf7f-433c-90e4-190f6e918c81.dat' 'hisat_output_1_bam' && mkdir -p '/galaxy/server/database/jobs_directory/000/284/outputs/dataset_81d31459-2ae9-4578-af9e-9549d8f28d61_files' && fastqc --outdir '/galaxy/server/database/jobs_directory/000/284/outputs/dataset_81d31459-2ae9-4578-af9e-9549d8f28d61_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'bam' 'hisat_output_1_bam'  && cp '/galaxy/server/database/jobs_directory/000/284/outputs/dataset_81d31459-2ae9-4578-af9e-9549d8f28d61_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/jobs_directory/000/284/outputs/dataset_81d31459-2ae9-4578-af9e-9549d8f28d61_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"contaminants": null, "adapters": null, "limits": null, "nogroup": "false", "min_length": "\"\"", "kmers": "\"7\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "b6ff0ac7eb12022d", "src": "hda", "uuid": "51e15524-cf7f-433c-90e4-190f6e918c81"}}, "outputs": {"html_file": {"id": "47e7199693324971", "src": "hda", "uuid": "81d31459-2ae9-4578-af9e-9549d8f28d61"}, "text_file": {"id": "4fc628f290014f0c", "src": "hda", "uuid": "6567c85f-e468-44ab-a25d-1b92d720a6eb"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "6012", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "6012.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:56:22", "plugin": "core", "name": "start_epoch", "raw_value": "1741593382.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:56:26", "plugin": "core", "name": "end_epoch", "raw_value": "1741593386.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "4 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "jq/1.0-0", "has_data": true, "data": {"tool_id": "jq", "tool_version": "1.0", "test_index": 0, "time_seconds": 37.91639232635498, "inputs": {"input": {"src": "hda", "id": "90cec8a07c55d73c"}, "filter": ".[] | [.foo, .bar]", "tsv": true}, "job": {"model_class": "Job", "id": "3ea2d66e0c267a57", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/jq/jq/1.0", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:42:29.384262", "update_time": "2025-03-10T08:42:46.431396", "galaxy_version": "24.2", "external_id": "gxy-gjdhc", "handler": null, "job_runner_name": null, "command_line": "JQ_BIN=`which jq` && cat '/galaxy/server/database/objects/0/a/4/dataset_0a406f1e-b083-431a-9176-da84e0a7910a.dat' | env -i JQ_BIN=$JQ_BIN $JQ_BIN -r -S '.[] | [.foo, .bar] | @tsv' > '/galaxy/server/database/jobs_directory/000/504/outputs/dataset_d94985b4-49d9-43ff-aa9c-373aa63d7df4.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"filter": "\".[] | [.foo, .bar]\"", "tsv": "true", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"json\""}, "inputs": {"input": {"id": "90cec8a07c55d73c", "src": "hda", "uuid": "0a406f1e-b083-431a-9176-da84e0a7910a"}}, "outputs": {"output": {"id": "f4fb6d9988aadee3", "src": "hda", "uuid": "d94985b4-49d9-43ff-aa9c-373aa63d7df4"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/jq:1.5--4", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/jq:1.5--4"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:42:34", "plugin": "core", "name": "start_epoch", "raw_value": "1741596154.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:42:34", "plugin": "core", "name": "end_epoch", "raw_value": "1741596154.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "jq/1.0-1", "has_data": true, "data": {"tool_id": "jq", "tool_version": "1.0", "test_index": 1, "time_seconds": 33.06056880950928, "inputs": {"input": {"src": "hda", "id": "2d947f359ef2f625"}, "filter": "{\"a\": env}", "tsv": false}, "job": {"model_class": "Job", "id": "9bfd1022f5060e3a", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/jq/jq/1.0", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:43:05.976948", "update_time": "2025-03-10T08:43:19.737084", "galaxy_version": "24.2", "external_id": "gxy-lz5d7", "handler": null, "job_runner_name": null, "command_line": "JQ_BIN=`which jq` && cat '/galaxy/server/database/objects/b/4/e/dataset_b4ee4ea7-a887-4f0c-95b7-f17195d2e763.dat' | env -i JQ_BIN=$JQ_BIN $JQ_BIN -r -S '{\"a\": env} ' > '/galaxy/server/database/jobs_directory/000/506/outputs/dataset_41515415-fc63-48ae-8ce8-9d0c82f2c39e.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"filter": "\"{\\\"a\\\": env}\"", "tsv": "false", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"json\""}, "inputs": {"input": {"id": "2d947f359ef2f625", "src": "hda", "uuid": "b4ee4ea7-a887-4f0c-95b7-f17195d2e763"}}, "outputs": {"output": {"id": "1172531416e36f05", "src": "hda", "uuid": "41515415-fc63-48ae-8ce8-9d0c82f2c39e"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/jq:1.5--4", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/jq:1.5--4"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:43:08", "plugin": "core", "name": "start_epoch", "raw_value": "1741596188.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:43:08", "plugin": "core", "name": "end_epoch", "raw_value": "1741596188.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "poretools_hist/0.6.1a1.1-0", "has_data": true, "data": {"tool_id": "poretools_hist", "tool_version": "0.6.1a1.1", "test_index": 0, "time_seconds": 65.5757429599762, "inputs": {"input": {"src": "hda", "id": "2dbc947cb2814c6e"}, "extension": "png"}, "job": {"model_class": "Job", "id": "cf313566b300b7ef", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_hist/poretools_hist/0.6.1a1.1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:22:20.141847", "update_time": "2025-03-10T08:23:05.123565", "galaxy_version": "24.2", "external_id": "gxy-qjnxw", "handler": null, "job_runner_name": null, "command_line": "export MPLBACKEND=\"agg\" && poretools hist '/galaxy/server/database/objects/5/2/b/dataset_52b43aa5-6da8-4cb4-9048-b8dd7c36d3c0.dat' --saveas histogram.png --min-length 0 --max-length 1000000000 --num-bins 50  && mv histogram.png '/galaxy/server/database/jobs_directory/000/432/outputs/dataset_283aec30-5f47-4f19-b0a9-5638f3103615.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"extension": "\"png\"", "theme_bw": "false", "min_length": "\"0\"", "max_length": "\"1000000000\"", "num_bins": "\"50\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input": {"id": "2dbc947cb2814c6e", "src": "hda", "uuid": "52b43aa5-6da8-4cb4-9048-b8dd7c36d3c0"}}, "outputs": {"output": {"id": "ff696a857110039c", "src": "hda", "uuid": "283aec30-5f47-4f19-b0a9-5638f3103615"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/poretools:0.6.1a1--py_8", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/poretools:0.6.1a1--py_8"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:22:43", "plugin": "core", "name": "start_epoch", "raw_value": "1741594963.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:22:45", "plugin": "core", "name": "end_epoch", "raw_value": "1741594965.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}]}, "status": "success"}}, {"id": "poretools_hist/0.6.1a1.1-1", "has_data": true, "data": {"tool_id": "poretools_hist", "tool_version": "0.6.1a1.1", "test_index": 1, "time_seconds": 35.99597644805908, "inputs": {"input": {"src": "hda", "id": "c2d5c4d7c827f3fe"}, "extension": "pdf"}, "job": {"model_class": "Job", "id": "79db50d7a88f551c", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_hist/poretools_hist/0.6.1a1.1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:23:26.640197", "update_time": "2025-03-10T08:23:41.271901", "galaxy_version": "24.2", "external_id": "gxy-rhgm9", "handler": null, "job_runner_name": null, "command_line": "export MPLBACKEND=\"agg\" && poretools hist '/galaxy/server/database/objects/a/4/7/dataset_a4753e58-1d40-489b-ab71-66bfbec765c3.dat' --saveas histogram.pdf --min-length 0 --max-length 1000000000 --num-bins 50  && mv histogram.pdf '/galaxy/server/database/jobs_directory/000/434/outputs/dataset_5aeec8fa-7053-4a3e-88ac-e26d6513e016.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"extension": "\"pdf\"", "theme_bw": "false", "min_length": "\"0\"", "max_length": "\"1000000000\"", "num_bins": "\"50\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input": {"id": "c2d5c4d7c827f3fe", "src": "hda", "uuid": "a4753e58-1d40-489b-ab71-66bfbec765c3"}}, "outputs": {"output": {"id": "b78ec408d61d321c", "src": "hda", "uuid": "5aeec8fa-7053-4a3e-88ac-e26d6513e016"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/poretools:0.6.1a1--py_8", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/poretools:0.6.1a1--py_8"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:23:28", "plugin": "core", "name": "start_epoch", "raw_value": "1741595008.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:23:30", "plugin": "core", "name": "end_epoch", "raw_value": "1741595010.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}]}, "status": "success"}}, {"id": "poretools_hist/0.6.1a1.1-2", "has_data": true, "data": {"tool_id": "poretools_hist", "tool_version": "0.6.1a1.1", "test_index": 2, "time_seconds": 34.5989875793457, "inputs": {"input": {"src": "hda", "id": "df4895ab7128fd50"}, "extension": "svg"}, "job": {"model_class": "Job", "id": "6061ce6b5c715d6b", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_hist/poretools_hist/0.6.1a1.1", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:24:01.365677", "update_time": "2025-03-10T08:24:16.091234", "galaxy_version": "24.2", "external_id": "gxy-jx5mn", "handler": null, "job_runner_name": null, "command_line": "export MPLBACKEND=\"agg\" && poretools hist '/galaxy/server/database/objects/0/3/4/dataset_0341f05f-150b-47f3-ba91-3a66b2cd3f51.dat' --saveas histogram.svg --min-length 0 --max-length 1000000000 --num-bins 50  && mv histogram.svg '/galaxy/server/database/jobs_directory/000/436/outputs/dataset_a720a8ab-583c-4b76-a7ae-b46732cc7922.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"extension": "\"svg\"", "theme_bw": "false", "min_length": "\"0\"", "max_length": "\"1000000000\"", "num_bins": "\"50\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input": {"id": "df4895ab7128fd50", "src": "hda", "uuid": "0341f05f-150b-47f3-ba91-3a66b2cd3f51"}}, "outputs": {"output": {"id": "7a38d99a75b9d84d", "src": "hda", "uuid": "a720a8ab-583c-4b76-a7ae-b46732cc7922"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/poretools:0.6.1a1--py_8", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/poretools:0.6.1a1--py_8"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:24:02", "plugin": "core", "name": "start_epoch", "raw_value": "1741595042.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:24:04", "plugin": "core", "name": "end_epoch", "raw_value": "1741595044.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-0", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 0, "time_seconds": 91.7430956363678, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "9362f53761c9d0c2"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "b4f0a74559e30588"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "197929f91a8a01e8"}, "sc|input_types|input2": {"src": "hda", "id": "dcb5964444da0185"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "60e56fddb8fa60a1"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene", "solo|filter|filter_type": "no_filter"}, "job": {"model_class": "Job", "id": "af9c60a7ca9b364f", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:57:19.540275", "update_time": "2025-03-10T07:58:09.813304", "galaxy_version": "24.2", "external_id": "gxy-lqrhs", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/2/a/a/dataset_2aaca979-3b07-46fa-85c9-beca8cd378bc.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/1/b/8/dataset_1b8808e5-1a83-4b63-8e62-273233f7e4a9.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/4/0/c/dataset_40cb9d94-0387-4682-b25f-cb9d602fa6c7.dat /galaxy/server/database/objects/c/b/4/dataset_cb4b60b3-684c-4de6-ac8e-e28c831b7ae2.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/9/2/f/dataset_92fa3fc0-d7a4-4ba1-af63-16c60e845aeb.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter None  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/291/outputs/dataset_3576fd41-e2ab-4963-addd-6269734a57b4.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/291/outputs/dataset_ae879492-270e-4660-81cd-c06e7f7a9ab1.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 397, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 393, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 394, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 395, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 396, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "solo": "{\"filter\": {\"__current_case__\": 3, \"filter_type\": \"no_filter\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "9e5c32a24ffa658f", "src": "hda", "uuid": "2aaca979-3b07-46fa-85c9-beca8cd378bc"}, "refGenomeSource|sjdbGTFfile": {"id": "b4f0a74559e30588", "src": "hda", "uuid": "1b8808e5-1a83-4b63-8e62-273233f7e4a9"}, "sc|input_types|input1": {"id": "197929f91a8a01e8", "src": "hda", "uuid": "cb4b60b3-684c-4de6-ac8e-e28c831b7ae2"}, "sc|input_types|input11": {"id": "197929f91a8a01e8", "src": "hda", "uuid": "cb4b60b3-684c-4de6-ac8e-e28c831b7ae2"}, "sc|input_types|input2": {"id": "dcb5964444da0185", "src": "hda", "uuid": "40cb9d94-0387-4682-b25f-cb9d602fa6c7"}, "sc|input_types|input21": {"id": "dcb5964444da0185", "src": "hda", "uuid": "40cb9d94-0387-4682-b25f-cb9d602fa6c7"}, "sc|soloCBwhitelist": {"id": "60e56fddb8fa60a1", "src": "hda", "uuid": "92fa3fc0-d7a4-4ba1-af63-16c60e845aeb"}}, "outputs": {"output_log": {"id": "1dbf33b181431088", "src": "hda", "uuid": "6ffcd232-54fc-44d6-b64c-fd29014ed648"}, "output_genes": {"id": "7c1c8ce868c2c874", "src": "hda", "uuid": "85fa6236-e4a0-418c-9732-1d25751cb318"}, "output_barcodes": {"id": "aba9551fe77c30ec", "src": "hda", "uuid": "e3498460-df80-42af-aa69-37fe818c13eb"}, "output_matrix": {"id": "fd3902828d00f4fd", "src": "hda", "uuid": "f6971254-fd33-4101-aa55-14bdae5a3a1d"}, "output_BAM": {"id": "6da87d6f37e19158", "src": "hda", "uuid": "ae879492-270e-4660-81cd-c06e7f7a9ab1"}, "output_stats": {"id": "927b9e8b4c223cbf", "src": "hda", "uuid": "3576fd41-e2ab-4963-addd-6269734a57b4"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 07:57:40 ..... started STAR run\nMar 10 07:57:40 ... starting to generate Genome files\nMar 10 07:57:40 ..... processing annotations GTF\nMar 10 07:57:40 ... starting to sort Suffix Array. This may take a long time...\nMar 10 07:57:40 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 07:57:40 ... loading chunks from disk, packing SA...\nMar 10 07:57:40 ... finished generating suffix array\nMar 10 07:57:40 ... generating Suffix Array index\nMar 10 07:57:40 ... completed Suffix Array index\nMar 10 07:57:40 ..... inserting junctions into the genome indices\nMar 10 07:57:40 ... writing Genome to disk ...\nMar 10 07:57:40 ... writing Suffix Array to disk ...\nMar 10 07:57:40 ... writing SAindex to disk\nMar 10 07:57:40 ..... finished successfully\nMar 10 07:57:40 ..... started STAR run\nMar 10 07:57:40 ..... loading genome\nMar 10 07:57:40 ..... started mapping\nMar 10 07:57:58 ..... finished mapping\nMar 10 07:57:58 ..... started Solo counting\nMar 10 07:57:58 ..... finished Solo counting\nMar 10 07:57:58 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 07:57:40 ..... started STAR run\nMar 10 07:57:40 ... starting to generate Genome files\nMar 10 07:57:40 ..... processing annotations GTF\nMar 10 07:57:40 ... starting to sort Suffix Array. This may take a long time...\nMar 10 07:57:40 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 07:57:40 ... loading chunks from disk, packing SA...\nMar 10 07:57:40 ... finished generating suffix array\nMar 10 07:57:40 ... generating Suffix Array index\nMar 10 07:57:40 ... completed Suffix Array index\nMar 10 07:57:40 ..... inserting junctions into the genome indices\nMar 10 07:57:40 ... writing Genome to disk ...\nMar 10 07:57:40 ... writing Suffix Array to disk ...\nMar 10 07:57:40 ... writing SAindex to disk\nMar 10 07:57:40 ..... finished successfully\nMar 10 07:57:40 ..... started STAR run\nMar 10 07:57:40 ..... loading genome\nMar 10 07:57:40 ..... started mapping\nMar 10 07:57:58 ..... finished mapping\nMar 10 07:57:58 ..... started Solo counting\nMar 10 07:57:58 ..... finished Solo counting\nMar 10 07:57:58 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:57:40", "plugin": "core", "name": "start_epoch", "raw_value": "1741593460.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:57:58", "plugin": "core", "name": "end_epoch", "raw_value": "1741593478.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-0", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 0, "time_seconds": 87.08763670921326, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "1c08accba1b588dc"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "9bfd1022f5060e3a"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "fbf7d48380b7e151"}, "sc|input_types|input2": {"src": "hda", "id": "0742ec05984111ee"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "a566e00ecd3204ee"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene", "solo|filter|filter_type": "no_filter"}, "job": {"model_class": "Job", "id": "bcfac19ae2b4ec8f", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:10:02.738293", "update_time": "2025-03-10T08:10:49.749495", "galaxy_version": "24.2", "external_id": "gxy-js2s9", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/0/2/1/dataset_021a92a0-ab5c-447e-b7fc-1305e7e0e9fa.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/2/a/2/dataset_2a2293e7-0344-45e5-a1eb-c09f02d2e093.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/0/4/3/dataset_04341366-ff7d-47b4-8b44-372f3e23a078.dat /galaxy/server/database/objects/1/6/b/dataset_16b08ab0-7114-4aee-b2ec-902162864679.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/0/1/c/dataset_01c951b3-fa8a-4b22-8d47-acab1117201b.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter None  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/364/outputs/dataset_5654f5b2-1929-482b-992d-909d84d9f94d.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/364/outputs/dataset_88105f9f-5a5e-4a28-9ae5-1f9748cac5e1.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 510, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 506, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 507, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 508, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 509, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "solo": "{\"filter\": {\"__current_case__\": 3, \"filter_type\": \"no_filter\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "4063e3cc1a680976", "src": "hda", "uuid": "021a92a0-ab5c-447e-b7fc-1305e7e0e9fa"}, "refGenomeSource|sjdbGTFfile": {"id": "9bfd1022f5060e3a", "src": "hda", "uuid": "2a2293e7-0344-45e5-a1eb-c09f02d2e093"}, "sc|input_types|input1": {"id": "fbf7d48380b7e151", "src": "hda", "uuid": "16b08ab0-7114-4aee-b2ec-902162864679"}, "sc|input_types|input11": {"id": "fbf7d48380b7e151", "src": "hda", "uuid": "16b08ab0-7114-4aee-b2ec-902162864679"}, "sc|input_types|input2": {"id": "0742ec05984111ee", "src": "hda", "uuid": "04341366-ff7d-47b4-8b44-372f3e23a078"}, "sc|input_types|input21": {"id": "0742ec05984111ee", "src": "hda", "uuid": "04341366-ff7d-47b4-8b44-372f3e23a078"}, "sc|soloCBwhitelist": {"id": "a566e00ecd3204ee", "src": "hda", "uuid": "01c951b3-fa8a-4b22-8d47-acab1117201b"}}, "outputs": {"output_log": {"id": "88b8fee4960d47ec", "src": "hda", "uuid": "ca6c2ac6-f323-4d21-a3e9-15a421efe8b8"}, "output_genes": {"id": "07128b45097f8981", "src": "hda", "uuid": "1ff07e19-16a1-4fb3-bf0f-40e75508c10c"}, "output_barcodes": {"id": "890334432e8bab0b", "src": "hda", "uuid": "3f06bf91-aa61-4b20-bb32-ad64c97c4221"}, "output_matrix": {"id": "5b5e74b92e6206b4", "src": "hda", "uuid": "a6aa8714-7def-41c5-9737-d7a89b46b7e0"}, "output_BAM": {"id": "30791fb5c8f2c314", "src": "hda", "uuid": "88105f9f-5a5e-4a28-9ae5-1f9748cac5e1"}, "output_stats": {"id": "b2a60ee9d4471399", "src": "hda", "uuid": "5654f5b2-1929-482b-992d-909d84d9f94d"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 08:10:19 ..... started STAR run\nMar 10 08:10:19 ... starting to generate Genome files\nMar 10 08:10:19 ..... processing annotations GTF\nMar 10 08:10:19 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:10:19 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:10:19 ... loading chunks from disk, packing SA...\nMar 10 08:10:19 ... finished generating suffix array\nMar 10 08:10:19 ... generating Suffix Array index\nMar 10 08:10:19 ... completed Suffix Array index\nMar 10 08:10:19 ..... inserting junctions into the genome indices\nMar 10 08:10:19 ... writing Genome to disk ...\nMar 10 08:10:19 ... writing Suffix Array to disk ...\nMar 10 08:10:19 ... writing SAindex to disk\nMar 10 08:10:19 ..... finished successfully\nMar 10 08:10:19 ..... started STAR run\nMar 10 08:10:20 ..... loading genome\nMar 10 08:10:20 ..... started mapping\nMar 10 08:10:37 ..... finished mapping\nMar 10 08:10:37 ..... started Solo counting\nMar 10 08:10:37 ..... finished Solo counting\nMar 10 08:10:37 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 08:10:19 ..... started STAR run\nMar 10 08:10:19 ... starting to generate Genome files\nMar 10 08:10:19 ..... processing annotations GTF\nMar 10 08:10:19 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:10:19 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:10:19 ... loading chunks from disk, packing SA...\nMar 10 08:10:19 ... finished generating suffix array\nMar 10 08:10:19 ... generating Suffix Array index\nMar 10 08:10:19 ... completed Suffix Array index\nMar 10 08:10:19 ..... inserting junctions into the genome indices\nMar 10 08:10:19 ... writing Genome to disk ...\nMar 10 08:10:19 ... writing Suffix Array to disk ...\nMar 10 08:10:19 ... writing SAindex to disk\nMar 10 08:10:19 ..... finished successfully\nMar 10 08:10:19 ..... started STAR run\nMar 10 08:10:20 ..... loading genome\nMar 10 08:10:20 ..... started mapping\nMar 10 08:10:37 ..... finished mapping\nMar 10 08:10:37 ..... started Solo counting\nMar 10 08:10:37 ..... finished Solo counting\nMar 10 08:10:37 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:10:19", "plugin": "core", "name": "start_epoch", "raw_value": "1741594219.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:10:37", "plugin": "core", "name": "end_epoch", "raw_value": "1741594237.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-1", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 1, "time_seconds": 84.86225152015686, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "cf13aa9530b33cee"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "572a8d9a30177566"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "7ea875bae5c74a57"}, "sc|input_types|input2": {"src": "hda", "id": "2dc2a0dd0775e597"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "53668ea68d0907f2"}, "sc|params|soloCBstart": "1", "sc|params|soloCBlen": "16", "sc|params|soloUMIstart": "17", "sc|params|soloUMIlen": "12", "sc|params|chemistry": "custom", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene"}, "job": {"model_class": "Job", "id": "cd5aa1caf6e4b5d5", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T07:58:49.967445", "update_time": "2025-03-10T07:59:34.850141", "galaxy_version": "24.2", "external_id": "gxy-sg955", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/e/7/7/dataset_e77c17a3-a39a-4c62-beea-8183a9784d38.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/7/7/b/dataset_77b5e25d-dc96-4abc-ae1c-67a8d98632b7.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/4/3/6/dataset_43672207-b19b-4533-a82e-824ab3c1def9.dat /galaxy/server/database/objects/8/6/d/dataset_86d57c80-5b5f-47b5-92e7-04d8593fc238.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/c/0/6/dataset_c06bc0ce-5289-4803-9269-61950a10e944.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12 --soloAdapterSequence '-' --soloAdapterMismatchesNmax 1 --clipAdapterType Hamming   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/298/outputs/dataset_0e8106cd-d025-4249-8691-e45bc50b8c89.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/298/outputs/dataset_3fe49ce3-87c7-4f50-9e16-6c5de2e8a74d.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 409, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 405, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 406, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 407, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 2, \"bccdna_mate\": {\"__current_case__\": 0, \"bc_location\": \"other_mate\"}, \"chemistry\": \"custom\", \"clipAdapterType\": \"Hamming\", \"soloAdapterMismatchesNmax\": \"1\", \"soloAdapterSequence\": \"-\", \"soloCBlen\": \"16\", \"soloCBstart\": \"1\", \"soloUMIlen\": \"12\", \"soloUMIstart\": \"17\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 408, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "92c2e797cc1a89cc", "src": "hda", "uuid": "e77c17a3-a39a-4c62-beea-8183a9784d38"}, "refGenomeSource|sjdbGTFfile": {"id": "572a8d9a30177566", "src": "hda", "uuid": "77b5e25d-dc96-4abc-ae1c-67a8d98632b7"}, "sc|input_types|input1": {"id": "7ea875bae5c74a57", "src": "hda", "uuid": "86d57c80-5b5f-47b5-92e7-04d8593fc238"}, "sc|input_types|input11": {"id": "7ea875bae5c74a57", "src": "hda", "uuid": "86d57c80-5b5f-47b5-92e7-04d8593fc238"}, "sc|input_types|input2": {"id": "2dc2a0dd0775e597", "src": "hda", "uuid": "43672207-b19b-4533-a82e-824ab3c1def9"}, "sc|input_types|input21": {"id": "2dc2a0dd0775e597", "src": "hda", "uuid": "43672207-b19b-4533-a82e-824ab3c1def9"}, "sc|soloCBwhitelist": {"id": "53668ea68d0907f2", "src": "hda", "uuid": "c06bc0ce-5289-4803-9269-61950a10e944"}}, "outputs": {"output_log": {"id": "b5815960425831f5", "src": "hda", "uuid": "66d48e39-1a2d-40ad-8cfd-69744b7c5071"}, "output_genes_filtered": {"id": "3e9c65d0fc49116e", "src": "hda", "uuid": "8b11a79d-1ddc-409b-857c-2e79760d2051"}, "output_barcodes_filtered": {"id": "060308c7e42debf1", "src": "hda", "uuid": "aec79933-bb92-4217-af5b-c4f1afa309da"}, "output_matrix_filtered": {"id": "5ff0a245107aaeb2", "src": "hda", "uuid": "3ed6a7ae-45be-407b-b243-a40003cc59d5"}, "output_BAM": {"id": "4ae8d08097ce9b2e", "src": "hda", "uuid": "3fe49ce3-87c7-4f50-9e16-6c5de2e8a74d"}, "output_stats": {"id": "b58ae47f1410e1bd", "src": "hda", "uuid": "0e8106cd-d025-4249-8691-e45bc50b8c89"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 07:59:04 ..... started STAR run\nMar 10 07:59:04 ... starting to generate Genome files\nMar 10 07:59:04 ..... processing annotations GTF\nMar 10 07:59:05 ... starting to sort Suffix Array. This may take a long time...\nMar 10 07:59:05 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 07:59:05 ... loading chunks from disk, packing SA...\nMar 10 07:59:05 ... finished generating suffix array\nMar 10 07:59:05 ... generating Suffix Array index\nMar 10 07:59:05 ... completed Suffix Array index\nMar 10 07:59:05 ..... inserting junctions into the genome indices\nMar 10 07:59:05 ... writing Genome to disk ...\nMar 10 07:59:05 ... writing Suffix Array to disk ...\nMar 10 07:59:05 ... writing SAindex to disk\nMar 10 07:59:05 ..... finished successfully\nMar 10 07:59:05 ..... started STAR run\nMar 10 07:59:05 ..... loading genome\nMar 10 07:59:05 ..... started mapping\nMar 10 07:59:23 ..... finished mapping\nMar 10 07:59:23 ..... started Solo counting\nMar 10 07:59:23 ..... finished Solo counting\nMar 10 07:59:23 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 07:59:04 ..... started STAR run\nMar 10 07:59:04 ... starting to generate Genome files\nMar 10 07:59:04 ..... processing annotations GTF\nMar 10 07:59:05 ... starting to sort Suffix Array. This may take a long time...\nMar 10 07:59:05 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 07:59:05 ... loading chunks from disk, packing SA...\nMar 10 07:59:05 ... finished generating suffix array\nMar 10 07:59:05 ... generating Suffix Array index\nMar 10 07:59:05 ... completed Suffix Array index\nMar 10 07:59:05 ..... inserting junctions into the genome indices\nMar 10 07:59:05 ... writing Genome to disk ...\nMar 10 07:59:05 ... writing Suffix Array to disk ...\nMar 10 07:59:05 ... writing SAindex to disk\nMar 10 07:59:05 ..... finished successfully\nMar 10 07:59:05 ..... started STAR run\nMar 10 07:59:05 ..... loading genome\nMar 10 07:59:05 ..... started mapping\nMar 10 07:59:23 ..... finished mapping\nMar 10 07:59:23 ..... started Solo counting\nMar 10 07:59:23 ..... finished Solo counting\nMar 10 07:59:23 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 07:59:04", "plugin": "core", "name": "start_epoch", "raw_value": "1741593544.0000000"}, {"title": "Job End Time", "value": "2025-03-10 07:59:23", "plugin": "core", "name": "end_epoch", "raw_value": "1741593563.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "19 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "19.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-1", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 1, "time_seconds": 84.08506321907043, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "c239928f90d4648d"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "e05f80315275f406"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "a5c8acec594d7cff"}, "sc|input_types|input2": {"src": "hda", "id": "51c9ad3602bd671d"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "08482d252528c7e8"}, "sc|params|soloCBstart": "1", "sc|params|soloCBlen": "16", "sc|params|soloUMIstart": "17", "sc|params|soloUMIlen": "12", "sc|params|chemistry": "custom", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene"}, "job": {"model_class": "Job", "id": "6132a4cdba713c5f", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:11:29.045353", "update_time": "2025-03-10T08:12:13.773676", "galaxy_version": "24.2", "external_id": "gxy-mx99r", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/2/b/7/dataset_2b78e553-6cdf-4137-b560-4cb103dd263e.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/7/3/4/dataset_734aeee4-f724-4333-9d08-0d7d22fb363c.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/c/4/1/dataset_c4116348-844c-4ddf-b4d2-277d1b90f2de.dat /galaxy/server/database/objects/c/b/f/dataset_cbf74627-0bfe-42a9-8851-39fee1b8c26b.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/4/7/a/dataset_47ae470d-a37c-4efb-8307-b7d0c13a44b0.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12 --soloAdapterSequence '-' --soloAdapterMismatchesNmax 1 --clipAdapterType Hamming   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/371/outputs/dataset_873f4cdc-f078-4e6b-af44-c31b30efea36.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/371/outputs/dataset_a1984d61-0a92-4ad6-8057-ee4c528e1b97.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 522, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 518, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 519, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 520, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 2, \"bccdna_mate\": {\"__current_case__\": 0, \"bc_location\": \"other_mate\"}, \"chemistry\": \"custom\", \"clipAdapterType\": \"Hamming\", \"soloAdapterMismatchesNmax\": \"1\", \"soloAdapterSequence\": \"-\", \"soloCBlen\": \"16\", \"soloCBstart\": \"1\", \"soloUMIlen\": \"12\", \"soloUMIstart\": \"17\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 521, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "20ec3ae1ef0bd1c3", "src": "hda", "uuid": "2b78e553-6cdf-4137-b560-4cb103dd263e"}, "refGenomeSource|sjdbGTFfile": {"id": "e05f80315275f406", "src": "hda", "uuid": "734aeee4-f724-4333-9d08-0d7d22fb363c"}, "sc|input_types|input1": {"id": "a5c8acec594d7cff", "src": "hda", "uuid": "cbf74627-0bfe-42a9-8851-39fee1b8c26b"}, "sc|input_types|input11": {"id": "a5c8acec594d7cff", "src": "hda", "uuid": "cbf74627-0bfe-42a9-8851-39fee1b8c26b"}, "sc|input_types|input2": {"id": "51c9ad3602bd671d", "src": "hda", "uuid": "c4116348-844c-4ddf-b4d2-277d1b90f2de"}, "sc|input_types|input21": {"id": "51c9ad3602bd671d", "src": "hda", "uuid": "c4116348-844c-4ddf-b4d2-277d1b90f2de"}, "sc|soloCBwhitelist": {"id": "08482d252528c7e8", "src": "hda", "uuid": "47ae470d-a37c-4efb-8307-b7d0c13a44b0"}}, "outputs": {"output_log": {"id": "ce6cb0fa9f114006", "src": "hda", "uuid": "20907d25-1a87-41d0-adfb-931e76bb6a7b"}, "output_genes_filtered": {"id": "5c08f1af9406fab5", "src": "hda", "uuid": "b5f2e98c-168f-4770-8268-f0415e90f50c"}, "output_barcodes_filtered": {"id": "555dda90a26fcd52", "src": "hda", "uuid": "92dbc446-acb7-4082-8e07-c77aca421b66"}, "output_matrix_filtered": {"id": "da0d8180e396ecf0", "src": "hda", "uuid": "8af1f2f4-b3d6-4b46-b6f8-90eb1352dd04"}, "output_BAM": {"id": "03fb9591ab975a26", "src": "hda", "uuid": "a1984d61-0a92-4ad6-8057-ee4c528e1b97"}, "output_stats": {"id": "23eb23c248c4a404", "src": "hda", "uuid": "873f4cdc-f078-4e6b-af44-c31b30efea36"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 08:11:44 ..... started STAR run\nMar 10 08:11:44 ... starting to generate Genome files\nMar 10 08:11:44 ..... processing annotations GTF\nMar 10 08:11:44 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:11:44 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:11:44 ... loading chunks from disk, packing SA...\nMar 10 08:11:44 ... finished generating suffix array\nMar 10 08:11:44 ... generating Suffix Array index\nMar 10 08:11:44 ... completed Suffix Array index\nMar 10 08:11:44 ..... inserting junctions into the genome indices\nMar 10 08:11:44 ... writing Genome to disk ...\nMar 10 08:11:44 ... writing Suffix Array to disk ...\nMar 10 08:11:44 ... writing SAindex to disk\nMar 10 08:11:44 ..... finished successfully\nMar 10 08:11:44 ..... started STAR run\nMar 10 08:11:44 ..... loading genome\nMar 10 08:11:44 ..... started mapping\nMar 10 08:12:02 ..... finished mapping\nMar 10 08:12:02 ..... started Solo counting\nMar 10 08:12:02 ..... finished Solo counting\nMar 10 08:12:02 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 08:11:44 ..... started STAR run\nMar 10 08:11:44 ... starting to generate Genome files\nMar 10 08:11:44 ..... processing annotations GTF\nMar 10 08:11:44 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:11:44 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:11:44 ... loading chunks from disk, packing SA...\nMar 10 08:11:44 ... finished generating suffix array\nMar 10 08:11:44 ... generating Suffix Array index\nMar 10 08:11:44 ... completed Suffix Array index\nMar 10 08:11:44 ..... inserting junctions into the genome indices\nMar 10 08:11:44 ... writing Genome to disk ...\nMar 10 08:11:44 ... writing Suffix Array to disk ...\nMar 10 08:11:44 ... writing SAindex to disk\nMar 10 08:11:44 ..... finished successfully\nMar 10 08:11:44 ..... started STAR run\nMar 10 08:11:44 ..... loading genome\nMar 10 08:11:44 ..... started mapping\nMar 10 08:12:02 ..... finished mapping\nMar 10 08:12:02 ..... started Solo counting\nMar 10 08:12:02 ..... finished Solo counting\nMar 10 08:12:02 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:11:44", "plugin": "core", "name": "start_epoch", "raw_value": "1741594304.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:12:02", "plugin": "core", "name": "end_epoch", "raw_value": "1741594322.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-2", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 2, "time_seconds": 118.32312798500061, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "d72c1a06cc2a0efa"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "06154747b9fd9625"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": [{"src": "hda", "id": "0d7d2bc335b2d162"}, {"src": "hda", "id": "0d7d2bc335b2d162"}, {"src": "hda", "id": "0d7d2bc335b2d162"}], "sc|input_types|input2": [{"src": "hda", "id": "e0b5b485015ab99f"}, {"src": "hda", "id": "e0b5b485015ab99f"}, {"src": "hda", "id": "e0b5b485015ab99f"}], "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "8c0dcef8b027f627"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene"}, "job": {"model_class": "Job", "id": "7eeb93886f94e4b9", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:00:14.441490", "update_time": "2025-03-10T08:01:34.861028", "galaxy_version": "24.2", "external_id": "gxy-gg2ql", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/5/c/d/dataset_5cd2daff-87be-454e-be86-d8006df40ae6.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/e/3/a/dataset_e3a35c94-d752-44a9-9b36-313c3bb7d212.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/6/7/3/dataset_673677ca-f35c-48d0-8079-2e1755fb79d9.dat,/galaxy/server/database/objects/6/7/3/dataset_673677ca-f35c-48d0-8079-2e1755fb79d9.dat,/galaxy/server/database/objects/6/7/3/dataset_673677ca-f35c-48d0-8079-2e1755fb79d9.dat /galaxy/server/database/objects/7/6/1/dataset_7610cc06-3418-4307-a20c-b3b98acff8ab.dat,/galaxy/server/database/objects/7/6/1/dataset_7610cc06-3418-4307-a20c-b3b98acff8ab.dat,/galaxy/server/database/objects/7/6/1/dataset_7610cc06-3418-4307-a20c-b3b98acff8ab.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/1/4/2/dataset_142c8483-bb8b-4f97-a7a6-aec5141789c3.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/305/outputs/dataset_9121abf5-f373-4bb5-a499-ac5d3fd93f61.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/305/outputs/dataset_99d9b01d-8cb7-4fdb-8aec-0ab1cdee2061.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 421, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 417, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 418, \"src\": \"hda\"}, {\"id\": 418, \"src\": \"hda\"}, {\"id\": 418, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 419, \"src\": \"hda\"}, {\"id\": 419, \"src\": \"hda\"}, {\"id\": 419, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 420, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"sc|input_types|input23": {"id": "e0b5b485015ab99f", "src": "hda", "uuid": "673677ca-f35c-48d0-8079-2e1755fb79d9"}, "sc|input_types|input22": {"id": "e0b5b485015ab99f", "src": "hda", "uuid": "673677ca-f35c-48d0-8079-2e1755fb79d9"}, "sc|input_types|input21": {"id": "e0b5b485015ab99f", "src": "hda", "uuid": "673677ca-f35c-48d0-8079-2e1755fb79d9"}, "sc|input_types|input2": {"id": "e0b5b485015ab99f", "src": "hda", "uuid": "673677ca-f35c-48d0-8079-2e1755fb79d9"}, "sc|input_types|input13": {"id": "0d7d2bc335b2d162", "src": "hda", "uuid": "7610cc06-3418-4307-a20c-b3b98acff8ab"}, "sc|input_types|input12": {"id": "0d7d2bc335b2d162", "src": "hda", "uuid": "7610cc06-3418-4307-a20c-b3b98acff8ab"}, "sc|input_types|input11": {"id": "0d7d2bc335b2d162", "src": "hda", "uuid": "7610cc06-3418-4307-a20c-b3b98acff8ab"}, "sc|input_types|input1": {"id": "0d7d2bc335b2d162", "src": "hda", "uuid": "7610cc06-3418-4307-a20c-b3b98acff8ab"}, "refGenomeSource|sjdbGTFfile": {"id": "06154747b9fd9625", "src": "hda", "uuid": "e3a35c94-d752-44a9-9b36-313c3bb7d212"}, "sc|soloCBwhitelist": {"id": "8c0dcef8b027f627", "src": "hda", "uuid": "142c8483-bb8b-4f97-a7a6-aec5141789c3"}, "refGenomeSource|genomeFastaFiles": {"id": "b28d981d2ddbcf44", "src": "hda", "uuid": "5cd2daff-87be-454e-be86-d8006df40ae6"}}, "outputs": {"output_log": {"id": "2beac2dfbb67375e", "src": "hda", "uuid": "e94c1de9-3e75-44a8-ae6d-7f6b3bea27f3"}, "output_genes_filtered": {"id": "734d44f3f122920f", "src": "hda", "uuid": "1fde2d4e-31d9-469f-ac87-72a05daed5a3"}, "output_barcodes_filtered": {"id": "bf3fead55ba2087e", "src": "hda", "uuid": "81edb4d9-c000-4a8c-b8a1-0c58a8d6d8ab"}, "output_matrix_filtered": {"id": "0d1ed719f27fd093", "src": "hda", "uuid": "b0afe029-9931-4d52-88d4-cc34059a5aa9"}, "output_BAM": {"id": "23687fea2f26577d", "src": "hda", "uuid": "99d9b01d-8cb7-4fdb-8aec-0ab1cdee2061"}, "output_stats": {"id": "0fb7dcaf7e38077e", "src": "hda", "uuid": "9121abf5-f373-4bb5-a499-ac5d3fd93f61"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 08:00:29 ..... started STAR run\nMar 10 08:00:29 ... starting to generate Genome files\nMar 10 08:00:29 ..... processing annotations GTF\nMar 10 08:00:29 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:00:29 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:00:29 ... loading chunks from disk, packing SA...\nMar 10 08:00:30 ... finished generating suffix array\nMar 10 08:00:30 ... generating Suffix Array index\nMar 10 08:00:30 ... completed Suffix Array index\nMar 10 08:00:30 ..... inserting junctions into the genome indices\nMar 10 08:00:30 ... writing Genome to disk ...\nMar 10 08:00:30 ... writing Suffix Array to disk ...\nMar 10 08:00:30 ... writing SAindex to disk\nMar 10 08:00:30 ..... finished successfully\nMar 10 08:00:30 ..... started STAR run\nMar 10 08:00:30 ..... loading genome\nMar 10 08:00:30 ..... started mapping\nMar 10 08:01:22 ..... finished mapping\nMar 10 08:01:22 ..... started Solo counting\nMar 10 08:01:22 ..... finished Solo counting\nMar 10 08:01:22 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 08:00:29 ..... started STAR run\nMar 10 08:00:29 ... starting to generate Genome files\nMar 10 08:00:29 ..... processing annotations GTF\nMar 10 08:00:29 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:00:29 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:00:29 ... loading chunks from disk, packing SA...\nMar 10 08:00:30 ... finished generating suffix array\nMar 10 08:00:30 ... generating Suffix Array index\nMar 10 08:00:30 ... completed Suffix Array index\nMar 10 08:00:30 ..... inserting junctions into the genome indices\nMar 10 08:00:30 ... writing Genome to disk ...\nMar 10 08:00:30 ... writing Suffix Array to disk ...\nMar 10 08:00:30 ... writing SAindex to disk\nMar 10 08:00:30 ..... finished successfully\nMar 10 08:00:30 ..... started STAR run\nMar 10 08:00:30 ..... loading genome\nMar 10 08:00:30 ..... started mapping\nMar 10 08:01:22 ..... finished mapping\nMar 10 08:01:22 ..... started Solo counting\nMar 10 08:01:22 ..... finished Solo counting\nMar 10 08:01:22 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:00:29", "plugin": "core", "name": "start_epoch", "raw_value": "1741593629.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:01:22", "plugin": "core", "name": "end_epoch", "raw_value": "1741593682.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "53 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "53.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-2", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 2, "time_seconds": 117.43639540672302, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "0b880135400850f3"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "e3c4fefbe3ae2331"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": [{"src": "hda", "id": "b54ce83a622bd61b"}, {"src": "hda", "id": "b54ce83a622bd61b"}, {"src": "hda", "id": "b54ce83a622bd61b"}], "sc|input_types|input2": [{"src": "hda", "id": "fed05fd947d34dcd"}, {"src": "hda", "id": "fed05fd947d34dcd"}, {"src": "hda", "id": "fed05fd947d34dcd"}], "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "4bcc0ded003aa424"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene"}, "job": {"model_class": "Job", "id": "1e84890e15ac3a45", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:12:53.444096", "update_time": "2025-03-10T08:14:12.849822", "galaxy_version": "24.2", "external_id": "gxy-wl4ps", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/6/7/8/dataset_67813cdb-4999-44fb-a258-94c63fc8cf31.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/8/1/c/dataset_81c7cc55-d141-4ab7-b9ec-a7afe8c0781f.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/d/b/8/dataset_db8e4ead-a1ec-42e4-b20e-7694f7fb543d.dat,/galaxy/server/database/objects/d/b/8/dataset_db8e4ead-a1ec-42e4-b20e-7694f7fb543d.dat,/galaxy/server/database/objects/d/b/8/dataset_db8e4ead-a1ec-42e4-b20e-7694f7fb543d.dat /galaxy/server/database/objects/c/4/9/dataset_c49fdc26-4500-48e3-baa1-c9d321a904c4.dat,/galaxy/server/database/objects/c/4/9/dataset_c49fdc26-4500-48e3-baa1-c9d321a904c4.dat,/galaxy/server/database/objects/c/4/9/dataset_c49fdc26-4500-48e3-baa1-c9d321a904c4.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/b/9/7/dataset_b97680c3-17c0-4948-9ce0-94631c225303.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/378/outputs/dataset_17fc4b48-2579-4f4d-9055-5964c741439a.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/378/outputs/dataset_7c94330a-75e8-4d05-b69c-90bc06898b72.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 534, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 530, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 531, \"src\": \"hda\"}, {\"id\": 531, \"src\": \"hda\"}, {\"id\": 531, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 532, \"src\": \"hda\"}, {\"id\": 532, \"src\": \"hda\"}, {\"id\": 532, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 533, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "533ca9167f9549fa", "src": "hda", "uuid": "67813cdb-4999-44fb-a258-94c63fc8cf31"}, "refGenomeSource|sjdbGTFfile": {"id": "e3c4fefbe3ae2331", "src": "hda", "uuid": "81c7cc55-d141-4ab7-b9ec-a7afe8c0781f"}, "sc|input_types|input1": {"id": "b54ce83a622bd61b", "src": "hda", "uuid": "c49fdc26-4500-48e3-baa1-c9d321a904c4"}, "sc|input_types|input11": {"id": "b54ce83a622bd61b", "src": "hda", "uuid": "c49fdc26-4500-48e3-baa1-c9d321a904c4"}, "sc|input_types|input12": {"id": "b54ce83a622bd61b", "src": "hda", "uuid": "c49fdc26-4500-48e3-baa1-c9d321a904c4"}, "sc|input_types|input13": {"id": "b54ce83a622bd61b", "src": "hda", "uuid": "c49fdc26-4500-48e3-baa1-c9d321a904c4"}, "sc|input_types|input2": {"id": "fed05fd947d34dcd", "src": "hda", "uuid": "db8e4ead-a1ec-42e4-b20e-7694f7fb543d"}, "sc|input_types|input21": {"id": "fed05fd947d34dcd", "src": "hda", "uuid": "db8e4ead-a1ec-42e4-b20e-7694f7fb543d"}, "sc|input_types|input22": {"id": "fed05fd947d34dcd", "src": "hda", "uuid": "db8e4ead-a1ec-42e4-b20e-7694f7fb543d"}, "sc|input_types|input23": {"id": "fed05fd947d34dcd", "src": "hda", "uuid": "db8e4ead-a1ec-42e4-b20e-7694f7fb543d"}, "sc|soloCBwhitelist": {"id": "4bcc0ded003aa424", "src": "hda", "uuid": "b97680c3-17c0-4948-9ce0-94631c225303"}}, "outputs": {"output_log": {"id": "b93ce993b0a48113", "src": "hda", "uuid": "5a47b854-405f-465d-8890-af9492a5422e"}, "output_genes_filtered": {"id": "4c70a82fbbb462ac", "src": "hda", "uuid": "7fe073a5-5df6-4a49-af9c-a1f737c561e6"}, "output_barcodes_filtered": {"id": "4675a84b3c797a25", "src": "hda", "uuid": "a609fa97-a149-449c-a563-49a39df9752c"}, "output_matrix_filtered": {"id": "f4ceaccdd50673e4", "src": "hda", "uuid": "b571bac3-2616-4d6b-85f5-5b3d7536c298"}, "output_BAM": {"id": "08da1ab0e51c0e95", "src": "hda", "uuid": "7c94330a-75e8-4d05-b69c-90bc06898b72"}, "output_stats": {"id": "df565fecd8c2b534", "src": "hda", "uuid": "17fc4b48-2579-4f4d-9055-5964c741439a"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 08:13:08 ..... started STAR run\nMar 10 08:13:08 ... starting to generate Genome files\nMar 10 08:13:08 ..... processing annotations GTF\nMar 10 08:13:08 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:13:08 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:13:08 ... loading chunks from disk, packing SA...\nMar 10 08:13:08 ... finished generating suffix array\nMar 10 08:13:08 ... generating Suffix Array index\nMar 10 08:13:08 ... completed Suffix Array index\nMar 10 08:13:08 ..... inserting junctions into the genome indices\nMar 10 08:13:08 ... writing Genome to disk ...\nMar 10 08:13:08 ... writing Suffix Array to disk ...\nMar 10 08:13:08 ... writing SAindex to disk\nMar 10 08:13:08 ..... finished successfully\nMar 10 08:13:08 ..... started STAR run\nMar 10 08:13:08 ..... loading genome\nMar 10 08:13:08 ..... started mapping\nMar 10 08:14:00 ..... finished mapping\nMar 10 08:14:00 ..... started Solo counting\nMar 10 08:14:00 ..... finished Solo counting\nMar 10 08:14:00 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 08:13:08 ..... started STAR run\nMar 10 08:13:08 ... starting to generate Genome files\nMar 10 08:13:08 ..... processing annotations GTF\nMar 10 08:13:08 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:13:08 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:13:08 ... loading chunks from disk, packing SA...\nMar 10 08:13:08 ... finished generating suffix array\nMar 10 08:13:08 ... generating Suffix Array index\nMar 10 08:13:08 ... completed Suffix Array index\nMar 10 08:13:08 ..... inserting junctions into the genome indices\nMar 10 08:13:08 ... writing Genome to disk ...\nMar 10 08:13:08 ... writing Suffix Array to disk ...\nMar 10 08:13:08 ... writing SAindex to disk\nMar 10 08:13:08 ..... finished successfully\nMar 10 08:13:08 ..... started STAR run\nMar 10 08:13:08 ..... loading genome\nMar 10 08:13:08 ..... started mapping\nMar 10 08:14:00 ..... finished mapping\nMar 10 08:14:00 ..... started Solo counting\nMar 10 08:14:00 ..... finished Solo counting\nMar 10 08:14:00 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:13:08", "plugin": "core", "name": "start_epoch", "raw_value": "1741594388.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:14:01", "plugin": "core", "name": "end_epoch", "raw_value": "1741594441.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "53 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "53.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-3", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 3, "time_seconds": 84.86030602455139, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "a995895201d72453"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "a75af3b6c854cace"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input_collection": {"src": "hdca", "id": "4cfd65a3370cda1b"}, "sc|input_types|use": "list_paired", "sc|soloCBwhitelist": {"src": "hda", "id": "cf313566b300b7ef"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene"}, "job": {"model_class": "Job", "id": "b395e820e37eafb7", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:02:13.444689", "update_time": "2025-03-10T08:02:59.072616", "galaxy_version": "24.2", "external_id": "gxy-qtq5v", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/9/4/e/dataset_94e88326-aca1-4531-8aa6-7f5e8733a8ee.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/a/a/6/dataset_aa68deb2-c56d-46c4-8bde-8631577673e7.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/2/e/9/dataset_2e953c98-c2f7-40fa-94ce-89f409da2140.dat /galaxy/server/database/objects/4/6/1/dataset_46191752-efa6-471a-aa60-94790a7d3f6c.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/8/7/d/dataset_87dc94f7-6d8d-4023-83d7-8844dec8e471.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/312/outputs/dataset_63359e19-94ab-44a1-8b14-4b6bd568e7f6.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/312/outputs/dataset_b6510434-a385-4047-9445-8e5827dbf3b7.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 433, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 429, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 1, \"input_collection\": {\"values\": [{\"id\": 25, \"src\": \"hdca\"}]}, \"use\": \"list_paired\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 432, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "29e1318ebcacd460", "src": "hda", "uuid": "94e88326-aca1-4531-8aa6-7f5e8733a8ee"}, "refGenomeSource|sjdbGTFfile": {"id": "a75af3b6c854cace", "src": "hda", "uuid": "aa68deb2-c56d-46c4-8bde-8631577673e7"}, "sc|input_types|input_collection1": {"id": "f8a723f2865af8af", "src": "hda", "uuid": "46191752-efa6-471a-aa60-94790a7d3f6c"}, "sc|input_types|input_collection2": {"id": "d78c80ffe1096d13", "src": "hda", "uuid": "2e953c98-c2f7-40fa-94ce-89f409da2140"}, "sc|soloCBwhitelist": {"id": "cf313566b300b7ef", "src": "hda", "uuid": "87dc94f7-6d8d-4023-83d7-8844dec8e471"}}, "outputs": {"output_log": {"id": "79db50d7a88f551c", "src": "hda", "uuid": "eeec4f72-18cd-455c-8cc7-77c8c2c95430"}, "output_genes_filtered": {"id": "96acc036d7d44f33", "src": "hda", "uuid": "0d5431cd-79e5-426b-b106-75e99d9270cc"}, "output_barcodes_filtered": {"id": "6061ce6b5c715d6b", "src": "hda", "uuid": "fb495a64-4763-456b-8f11-8f505d1e3899"}, "output_matrix_filtered": {"id": "98cf208011af2138", "src": "hda", "uuid": "aef3899d-ebbc-4563-bc65-d663e0a35a1d"}, "output_BAM": {"id": "a90e8b20f11dcf8f", "src": "hda", "uuid": "b6510434-a385-4047-9445-8e5827dbf3b7"}, "output_stats": {"id": "9eda2a1d5de81e7a", "src": "hda", "uuid": "63359e19-94ab-44a1-8b14-4b6bd568e7f6"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 08:02:28 ..... started STAR run\nMar 10 08:02:28 ... starting to generate Genome files\nMar 10 08:02:28 ..... processing annotations GTF\nMar 10 08:02:29 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:02:29 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:02:29 ... loading chunks from disk, packing SA...\nMar 10 08:02:29 ... finished generating suffix array\nMar 10 08:02:29 ... generating Suffix Array index\nMar 10 08:02:29 ... completed Suffix Array index\nMar 10 08:02:29 ..... inserting junctions into the genome indices\nMar 10 08:02:29 ... writing Genome to disk ...\nMar 10 08:02:29 ... writing Suffix Array to disk ...\nMar 10 08:02:29 ... writing SAindex to disk\nMar 10 08:02:29 ..... finished successfully\nMar 10 08:02:29 ..... started STAR run\nMar 10 08:02:29 ..... loading genome\nMar 10 08:02:29 ..... started mapping\nMar 10 08:02:47 ..... finished mapping\nMar 10 08:02:47 ..... started Solo counting\nMar 10 08:02:47 ..... finished Solo counting\nMar 10 08:02:47 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 08:02:28 ..... started STAR run\nMar 10 08:02:28 ... starting to generate Genome files\nMar 10 08:02:28 ..... processing annotations GTF\nMar 10 08:02:29 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:02:29 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:02:29 ... loading chunks from disk, packing SA...\nMar 10 08:02:29 ... finished generating suffix array\nMar 10 08:02:29 ... generating Suffix Array index\nMar 10 08:02:29 ... completed Suffix Array index\nMar 10 08:02:29 ..... inserting junctions into the genome indices\nMar 10 08:02:29 ... writing Genome to disk ...\nMar 10 08:02:29 ... writing Suffix Array to disk ...\nMar 10 08:02:29 ... writing SAindex to disk\nMar 10 08:02:29 ..... finished successfully\nMar 10 08:02:29 ..... started STAR run\nMar 10 08:02:29 ..... loading genome\nMar 10 08:02:29 ..... started mapping\nMar 10 08:02:47 ..... finished mapping\nMar 10 08:02:47 ..... started Solo counting\nMar 10 08:02:47 ..... finished Solo counting\nMar 10 08:02:47 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:02:28", "plugin": "core", "name": "start_epoch", "raw_value": "1741593748.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:02:47", "plugin": "core", "name": "end_epoch", "raw_value": "1741593767.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "19 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "19.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-3", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 3, "time_seconds": 83.051278591156, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "d1bf35c2029cc7df"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "5a4e8b769444d4de"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input_collection": {"src": "hdca", "id": "60c0ce53ba90679e"}, "sc|input_types|use": "list_paired", "sc|soloCBwhitelist": {"src": "hda", "id": "84d8ae6258a882de"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene"}, "job": {"model_class": "Job", "id": "b102f0a5791235c4", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:14:50.596802", "update_time": "2025-03-10T08:15:35.487034", "galaxy_version": "24.2", "external_id": "gxy-5fcx4", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/2/d/5/dataset_2d53ae6e-03f8-40bc-b133-5ea6e2ae1dab.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/1/a/d/dataset_1ad015e0-a96f-4918-9313-d6733be72ed5.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/3/9/9/dataset_399c8c60-9f5c-41a6-b533-fdf826eb7593.dat /galaxy/server/database/objects/a/0/0/dataset_a003cc7d-ab1f-4abc-8685-1ba0dd62a9e0.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/4/d/7/dataset_4d7c7fc3-8e35-4326-bee1-7dfa36f7a306.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/385/outputs/dataset_75655265-3651-42d4-99dc-94586b217b10.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/385/outputs/dataset_64299ccc-2b02-44df-8e84-2de50c7b7492.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 546, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 542, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 1, \"input_collection\": {\"values\": [{\"id\": 27, \"src\": \"hdca\"}]}, \"use\": \"list_paired\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 545, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "f28d16455b6b15c9", "src": "hda", "uuid": "2d53ae6e-03f8-40bc-b133-5ea6e2ae1dab"}, "refGenomeSource|sjdbGTFfile": {"id": "5a4e8b769444d4de", "src": "hda", "uuid": "1ad015e0-a96f-4918-9313-d6733be72ed5"}, "sc|input_types|input_collection1": {"id": "fb98a45c5ea496a6", "src": "hda", "uuid": "a003cc7d-ab1f-4abc-8685-1ba0dd62a9e0"}, "sc|input_types|input_collection2": {"id": "5d2f6306b5a572c5", "src": "hda", "uuid": "399c8c60-9f5c-41a6-b533-fdf826eb7593"}, "sc|soloCBwhitelist": {"id": "84d8ae6258a882de", "src": "hda", "uuid": "4d7c7fc3-8e35-4326-bee1-7dfa36f7a306"}}, "outputs": {"output_log": {"id": "6ea8f4abf82ce94d", "src": "hda", "uuid": "a5d46956-4346-497e-98f9-c43d0cd76071"}, "output_genes_filtered": {"id": "8a6759b2086f8551", "src": "hda", "uuid": "11537266-d8de-4dad-93c0-5d27918dba40"}, "output_barcodes_filtered": {"id": "74cae73cea1da9e3", "src": "hda", "uuid": "374e65ad-718b-4100-92ec-8231b4611a83"}, "output_matrix_filtered": {"id": "51e93bbf8546be6e", "src": "hda", "uuid": "5c00568c-3241-45e6-9a71-9deb1a7f3820"}, "output_BAM": {"id": "47f1d8e3135b38bc", "src": "hda", "uuid": "64299ccc-2b02-44df-8e84-2de50c7b7492"}, "output_stats": {"id": "3d2e119eba7e0735", "src": "hda", "uuid": "75655265-3651-42d4-99dc-94586b217b10"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 08:15:06 ..... started STAR run\nMar 10 08:15:06 ... starting to generate Genome files\nMar 10 08:15:06 ..... processing annotations GTF\nMar 10 08:15:06 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:15:06 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:15:06 ... loading chunks from disk, packing SA...\nMar 10 08:15:06 ... finished generating suffix array\nMar 10 08:15:06 ... generating Suffix Array index\nMar 10 08:15:06 ... completed Suffix Array index\nMar 10 08:15:06 ..... inserting junctions into the genome indices\nMar 10 08:15:06 ... writing Genome to disk ...\nMar 10 08:15:06 ... writing Suffix Array to disk ...\nMar 10 08:15:06 ... writing SAindex to disk\nMar 10 08:15:06 ..... finished successfully\nMar 10 08:15:06 ..... started STAR run\nMar 10 08:15:06 ..... loading genome\nMar 10 08:15:06 ..... started mapping\nMar 10 08:15:24 ..... finished mapping\nMar 10 08:15:24 ..... started Solo counting\nMar 10 08:15:24 ..... finished Solo counting\nMar 10 08:15:24 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 08:15:06 ..... started STAR run\nMar 10 08:15:06 ... starting to generate Genome files\nMar 10 08:15:06 ..... processing annotations GTF\nMar 10 08:15:06 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:15:06 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:15:06 ... loading chunks from disk, packing SA...\nMar 10 08:15:06 ... finished generating suffix array\nMar 10 08:15:06 ... generating Suffix Array index\nMar 10 08:15:06 ... completed Suffix Array index\nMar 10 08:15:06 ..... inserting junctions into the genome indices\nMar 10 08:15:06 ... writing Genome to disk ...\nMar 10 08:15:06 ... writing Suffix Array to disk ...\nMar 10 08:15:06 ... writing SAindex to disk\nMar 10 08:15:06 ..... finished successfully\nMar 10 08:15:06 ..... started STAR run\nMar 10 08:15:06 ..... loading genome\nMar 10 08:15:06 ..... started mapping\nMar 10 08:15:24 ..... finished mapping\nMar 10 08:15:24 ..... started Solo counting\nMar 10 08:15:24 ..... finished Solo counting\nMar 10 08:15:24 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:15:06", "plugin": "core", "name": "start_epoch", "raw_value": "1741594506.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:15:24", "plugin": "core", "name": "end_epoch", "raw_value": "1741594524.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-4", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 4, "time_seconds": 85.10639715194702, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "c2f7d83d0331708d"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "9d8a6e456330f9e7"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "d0bb0b5e336616af"}, "sc|input_types|input2": {"src": "hda", "id": "9dedfbc4127201a3"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "ffa473d31315cf0c"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|soloCBmatchWLtype": "1MM_multi_pseudocounts", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "GeneFull", "solo|soloUMIfiltering": "MultiGeneUMI", "solo|filter|n_cells": "5", "solo|filter|filter_type": "topcells", "solo|soloOutFormatFeaturesGeneField3": "Dummy Text"}, "job": {"model_class": "Job", "id": "fdcb9aef381a170e", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:03:37.457924", "update_time": "2025-03-10T08:04:24.319067", "galaxy_version": "24.2", "external_id": "gxy-7dqpp", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/d/b/c/dataset_dbc4cb8e-9670-4276-9e85-13336f151c55.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/a/0/c/dataset_a0cd4d4b-a72f-44fa-9e92-0496839044e1.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/3/9/4/dataset_394773e8-4729-4f9e-97f7-5cbae3b5ee8a.dat /galaxy/server/database/objects/9/5/8/dataset_958803ee-f153-4d95-ab70-37326073255c.dat --soloCBmatchWLtype 1MM_multi_pseudocounts  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/5/f/f/dataset_5ff313ba-a607-418a-8785-726e9bddf962.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering MultiGeneUMI --soloStrand Forward --soloFeatures GeneFull --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter TopCells 5  --soloOutFormatFeaturesGeneField3 'Dummy Text' && mv Solo.out/GeneFull Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/319/outputs/dataset_08f0e979-8766-4648-bcca-88d907c15d59.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/319/outputs/dataset_1dbc9f7c-dd8b-4e5d-9aba-cf6a4323bef7.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 445, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 441, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 442, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 443, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi_pseudocounts\", \"soloCBwhitelist\": {\"values\": [{\"id\": 444, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "solo": "{\"filter\": {\"__current_case__\": 2, \"filter_type\": \"topcells\", \"n_cells\": \"5\"}, \"soloFeatures\": \"GeneFull\", \"soloOutFormatFeaturesGeneField3\": \"Dummy Text\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"MultiGeneUMI\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "30c607223ef16a05", "src": "hda", "uuid": "dbc4cb8e-9670-4276-9e85-13336f151c55"}, "refGenomeSource|sjdbGTFfile": {"id": "9d8a6e456330f9e7", "src": "hda", "uuid": "a0cd4d4b-a72f-44fa-9e92-0496839044e1"}, "sc|input_types|input1": {"id": "d0bb0b5e336616af", "src": "hda", "uuid": "958803ee-f153-4d95-ab70-37326073255c"}, "sc|input_types|input11": {"id": "d0bb0b5e336616af", "src": "hda", "uuid": "958803ee-f153-4d95-ab70-37326073255c"}, "sc|input_types|input2": {"id": "9dedfbc4127201a3", "src": "hda", "uuid": "394773e8-4729-4f9e-97f7-5cbae3b5ee8a"}, "sc|input_types|input21": {"id": "9dedfbc4127201a3", "src": "hda", "uuid": "394773e8-4729-4f9e-97f7-5cbae3b5ee8a"}, "sc|soloCBwhitelist": {"id": "ffa473d31315cf0c", "src": "hda", "uuid": "5ff313ba-a607-418a-8785-726e9bddf962"}}, "outputs": {"output_log": {"id": "743d28bb707fa294", "src": "hda", "uuid": "a6c4f96e-957c-4dc7-be2c-509f2045953f"}, "output_genes_filtered": {"id": "ed89e5ed00603844", "src": "hda", "uuid": "a14fb810-8f1a-4e80-ac83-5a28b0d35be2"}, "output_barcodes_filtered": {"id": "e8dc78db3730d4ff", "src": "hda", "uuid": "28a21dfa-1944-4151-9931-c7ec59182293"}, "output_matrixGeneFull_filtered": {"id": "8f9be3361b86d374", "src": "hda", "uuid": "e2643bfc-f994-4227-9d17-38fe6f698ddf"}, "output_BAM": {"id": "ef250c32b182a0f3", "src": "hda", "uuid": "1dbc9f7c-dd8b-4e5d-9aba-cf6a4323bef7"}, "output_stats": {"id": "2bc7b700b0a80d54", "src": "hda", "uuid": "08f0e979-8766-4648-bcca-88d907c15d59"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 08:03:53 ..... started STAR run\nMar 10 08:03:53 ... starting to generate Genome files\nMar 10 08:03:53 ..... processing annotations GTF\nMar 10 08:03:53 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:03:53 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:03:54 ... loading chunks from disk, packing SA...\nMar 10 08:03:54 ... finished generating suffix array\nMar 10 08:03:54 ... generating Suffix Array index\nMar 10 08:03:54 ... completed Suffix Array index\nMar 10 08:03:54 ..... inserting junctions into the genome indices\nMar 10 08:03:54 ... writing Genome to disk ...\nMar 10 08:03:54 ... writing Suffix Array to disk ...\nMar 10 08:03:54 ... writing SAindex to disk\nMar 10 08:03:54 ..... finished successfully\nMar 10 08:03:54 ..... started STAR run\nMar 10 08:03:54 ..... loading genome\nMar 10 08:03:54 ..... started mapping\nMar 10 08:04:11 ..... finished mapping\nMar 10 08:04:11 ..... started Solo counting\nMar 10 08:04:11 ..... finished Solo counting\nMar 10 08:04:11 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 08:03:53 ..... started STAR run\nMar 10 08:03:53 ... starting to generate Genome files\nMar 10 08:03:53 ..... processing annotations GTF\nMar 10 08:03:53 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:03:53 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:03:54 ... loading chunks from disk, packing SA...\nMar 10 08:03:54 ... finished generating suffix array\nMar 10 08:03:54 ... generating Suffix Array index\nMar 10 08:03:54 ... completed Suffix Array index\nMar 10 08:03:54 ..... inserting junctions into the genome indices\nMar 10 08:03:54 ... writing Genome to disk ...\nMar 10 08:03:54 ... writing Suffix Array to disk ...\nMar 10 08:03:54 ... writing SAindex to disk\nMar 10 08:03:54 ..... finished successfully\nMar 10 08:03:54 ..... started STAR run\nMar 10 08:03:54 ..... loading genome\nMar 10 08:03:54 ..... started mapping\nMar 10 08:04:11 ..... finished mapping\nMar 10 08:04:11 ..... started Solo counting\nMar 10 08:04:11 ..... finished Solo counting\nMar 10 08:04:11 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:03:53", "plugin": "core", "name": "start_epoch", "raw_value": "1741593833.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:04:12", "plugin": "core", "name": "end_epoch", "raw_value": "1741593852.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "19 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "19.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-4", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 4, "time_seconds": 84.28499484062195, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "b9d923f4e20526fe"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "2bae1613e5a19e3e"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "9b3a499f4399490f"}, "sc|input_types|input2": {"src": "hda", "id": "b338bd7df92fe7b6"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "ce22e1e631ad32f7"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|soloCBmatchWLtype": "1MM_multi_pseudocounts", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "GeneFull", "solo|soloUMIfiltering": "MultiGeneUMI", "solo|filter|n_cells": "5", "solo|filter|filter_type": "topcells", "solo|soloOutFormatFeaturesGeneField3": "Dummy Text"}, "job": {"model_class": "Job", "id": "9362f53761c9d0c2", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:16:13.575515", "update_time": "2025-03-10T08:16:59.764632", "galaxy_version": "24.2", "external_id": "gxy-w4gbm", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/a/d/8/dataset_ad825d32-2601-46ee-94ca-425fa4bfeb33.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/9/2/6/dataset_926d6e4f-aecc-4a3f-99f6-9c2942fdbc68.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/5/c/c/dataset_5ccc5c96-d85f-4687-8566-f89a320bb0c2.dat /galaxy/server/database/objects/e/f/4/dataset_ef44adeb-50f2-4e18-9c19-1d484ceb9a4c.dat --soloCBmatchWLtype 1MM_multi_pseudocounts  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/e/e/f/dataset_eef3544f-b997-4628-a05b-14d683cbe80e.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering MultiGeneUMI --soloStrand Forward --soloFeatures GeneFull --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter TopCells 5  --soloOutFormatFeaturesGeneField3 'Dummy Text' && mv Solo.out/GeneFull Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/392/outputs/dataset_1a8a49f7-4aa2-40f7-8e2d-dff582286693.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/392/outputs/dataset_8aa6162f-bbc8-4e7f-9c1e-d209bc6ca415.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 558, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 554, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 555, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 556, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi_pseudocounts\", \"soloCBwhitelist\": {\"values\": [{\"id\": 557, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "solo": "{\"filter\": {\"__current_case__\": 2, \"filter_type\": \"topcells\", \"n_cells\": \"5\"}, \"soloFeatures\": \"GeneFull\", \"soloOutFormatFeaturesGeneField3\": \"Dummy Text\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"MultiGeneUMI\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"sc|input_types|input21": {"id": "b338bd7df92fe7b6", "src": "hda", "uuid": "5ccc5c96-d85f-4687-8566-f89a320bb0c2"}, "sc|soloCBwhitelist": {"id": "ce22e1e631ad32f7", "src": "hda", "uuid": "eef3544f-b997-4628-a05b-14d683cbe80e"}, "refGenomeSource|genomeFastaFiles": {"id": "ee81e11e32066afd", "src": "hda", "uuid": "ad825d32-2601-46ee-94ca-425fa4bfeb33"}, "refGenomeSource|sjdbGTFfile": {"id": "2bae1613e5a19e3e", "src": "hda", "uuid": "926d6e4f-aecc-4a3f-99f6-9c2942fdbc68"}, "sc|input_types|input1": {"id": "9b3a499f4399490f", "src": "hda", "uuid": "ef44adeb-50f2-4e18-9c19-1d484ceb9a4c"}, "sc|input_types|input11": {"id": "9b3a499f4399490f", "src": "hda", "uuid": "ef44adeb-50f2-4e18-9c19-1d484ceb9a4c"}, "sc|input_types|input2": {"id": "b338bd7df92fe7b6", "src": "hda", "uuid": "5ccc5c96-d85f-4687-8566-f89a320bb0c2"}}, "outputs": {"output_log": {"id": "ca75963d84ef14a2", "src": "hda", "uuid": "23abeba2-d4c7-4fcd-9335-18fdd6892fc9"}, "output_genes_filtered": {"id": "26dd901d782b605e", "src": "hda", "uuid": "674467ca-52b8-49a5-a94b-37d4cbd008c9"}, "output_barcodes_filtered": {"id": "c53b93b7fe6cc5bb", "src": "hda", "uuid": "e93edfcd-7f12-4dca-9e7f-c17c92cb36cb"}, "output_matrixGeneFull_filtered": {"id": "6a6bee2ba8fa7c30", "src": "hda", "uuid": "c47ff8b9-5c78-4ae2-ba59-e051f3cca77a"}, "output_BAM": {"id": "b954949ce8409b2e", "src": "hda", "uuid": "8aa6162f-bbc8-4e7f-9c1e-d209bc6ca415"}, "output_stats": {"id": "33bad6c220f2de7b", "src": "hda", "uuid": "1a8a49f7-4aa2-40f7-8e2d-dff582286693"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 08:16:29 ..... started STAR run\nMar 10 08:16:29 ... starting to generate Genome files\nMar 10 08:16:29 ..... processing annotations GTF\nMar 10 08:16:29 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:16:29 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:16:29 ... loading chunks from disk, packing SA...\nMar 10 08:16:29 ... finished generating suffix array\nMar 10 08:16:29 ... generating Suffix Array index\nMar 10 08:16:29 ... completed Suffix Array index\nMar 10 08:16:29 ..... inserting junctions into the genome indices\nMar 10 08:16:29 ... writing Genome to disk ...\nMar 10 08:16:29 ... writing Suffix Array to disk ...\nMar 10 08:16:29 ... writing SAindex to disk\nMar 10 08:16:29 ..... finished successfully\nMar 10 08:16:29 ..... started STAR run\nMar 10 08:16:29 ..... loading genome\nMar 10 08:16:29 ..... started mapping\nMar 10 08:16:47 ..... finished mapping\nMar 10 08:16:47 ..... started Solo counting\nMar 10 08:16:47 ..... finished Solo counting\nMar 10 08:16:47 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 08:16:29 ..... started STAR run\nMar 10 08:16:29 ... starting to generate Genome files\nMar 10 08:16:29 ..... processing annotations GTF\nMar 10 08:16:29 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:16:29 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:16:29 ... loading chunks from disk, packing SA...\nMar 10 08:16:29 ... finished generating suffix array\nMar 10 08:16:29 ... generating Suffix Array index\nMar 10 08:16:29 ... completed Suffix Array index\nMar 10 08:16:29 ..... inserting junctions into the genome indices\nMar 10 08:16:29 ... writing Genome to disk ...\nMar 10 08:16:29 ... writing Suffix Array to disk ...\nMar 10 08:16:29 ... writing SAindex to disk\nMar 10 08:16:29 ..... finished successfully\nMar 10 08:16:29 ..... started STAR run\nMar 10 08:16:29 ..... loading genome\nMar 10 08:16:29 ..... started mapping\nMar 10 08:16:47 ..... finished mapping\nMar 10 08:16:47 ..... started Solo counting\nMar 10 08:16:47 ..... finished Solo counting\nMar 10 08:16:47 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:16:29", "plugin": "core", "name": "start_epoch", "raw_value": "1741594589.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:16:47", "plugin": "core", "name": "end_epoch", "raw_value": "1741594607.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-5", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 5, "time_seconds": 83.47116041183472, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "f15bdda2b182311a"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "08f8a3109253e1f4"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "b3d333e49797e016"}, "sc|input_types|input2": {"src": "hda", "id": "1b5c9f8d4dcf4fa8"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "325bbc3d320f274c"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene", "solo|filter|nExpectedCells": "5", "solo|filter|maxPercentile": "0.99", "solo|filter|maxMinRatio": "10", "solo|filter|indMin": "45000", "solo|filter|indMax": "90000", "solo|filter|umiMin": "500", "solo|filter|umiMinFracMedian": "0.01", "solo|filter|candMaxN": "20000", "solo|filter|FDR": "0.01", "solo|filter|simN": "10000", "solo|filter|filter_type": "emptydrops"}, "job": {"model_class": "Job", "id": "90d5a17d03a3cd14", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:05:02.170119", "update_time": "2025-03-10T08:05:46.974145", "galaxy_version": "24.2", "external_id": "gxy-bcq2q", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/f/4/a/dataset_f4a4048a-6814-4cd1-bb87-31be624855a1.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/9/9/0/dataset_990acb20-e9a4-4eb9-9f2a-2c5ccc73fcd2.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/6/1/6/dataset_61603f83-85bd-49af-840d-89a90a4afff2.dat /galaxy/server/database/objects/7/4/a/dataset_74ad3ed6-7522-4b80-925f-227f87a31477.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/d/8/4/dataset_d84b6607-669b-4c7e-bfc9-561bcd57dec6.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter EmptyDrops_CR 5 0.99 10.0 45000 90000 500 0.01 20000 0.01 10000  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/326/outputs/dataset_bdcb1cea-a5f5-47ca-9732-66f03d8d5d3b.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/326/outputs/dataset_be527162-9490-4669-8544-dabdddbd7129.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 457, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 453, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 454, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 455, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 456, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "solo": "{\"filter\": {\"FDR\": \"0.01\", \"__current_case__\": 1, \"candMaxN\": \"20000\", \"filter_type\": \"emptydrops\", \"indMax\": \"90000\", \"indMin\": \"45000\", \"maxMinRatio\": \"10.0\", \"maxPercentile\": \"0.99\", \"nExpectedCells\": \"5\", \"simN\": \"10000\", \"umiMin\": \"500\", \"umiMinFracMedian\": \"0.01\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "0afb41f26107bdad", "src": "hda", "uuid": "f4a4048a-6814-4cd1-bb87-31be624855a1"}, "refGenomeSource|sjdbGTFfile": {"id": "08f8a3109253e1f4", "src": "hda", "uuid": "990acb20-e9a4-4eb9-9f2a-2c5ccc73fcd2"}, "sc|input_types|input1": {"id": "b3d333e49797e016", "src": "hda", "uuid": "74ad3ed6-7522-4b80-925f-227f87a31477"}, "sc|input_types|input11": {"id": "b3d333e49797e016", "src": "hda", "uuid": "74ad3ed6-7522-4b80-925f-227f87a31477"}, "sc|input_types|input2": {"id": "1b5c9f8d4dcf4fa8", "src": "hda", "uuid": "61603f83-85bd-49af-840d-89a90a4afff2"}, "sc|input_types|input21": {"id": "1b5c9f8d4dcf4fa8", "src": "hda", "uuid": "61603f83-85bd-49af-840d-89a90a4afff2"}, "sc|soloCBwhitelist": {"id": "325bbc3d320f274c", "src": "hda", "uuid": "d84b6607-669b-4c7e-bfc9-561bcd57dec6"}}, "outputs": {"output_log": {"id": "b63557ba6276a584", "src": "hda", "uuid": "11aec1e4-e3e9-4c17-ba6f-28cfd1f3a6e2"}, "output_genes_filtered": {"id": "0dfc5c92cb83ad6d", "src": "hda", "uuid": "0382ff12-f07e-4af9-8d20-70e560583a94"}, "output_barcodes_filtered": {"id": "0da33cfbf22b3622", "src": "hda", "uuid": "957fcbf4-7520-4e2c-94b7-a76364132ca6"}, "output_matrix_filtered": {"id": "5d73644d9291d795", "src": "hda", "uuid": "abaebb7d-8c09-41d2-b143-693dbe7fc699"}, "output_BAM": {"id": "ff1d767625a87d09", "src": "hda", "uuid": "be527162-9490-4669-8544-dabdddbd7129"}, "output_stats": {"id": "c509c9ce61643a2d", "src": "hda", "uuid": "bdcb1cea-a5f5-47ca-9732-66f03d8d5d3b"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 08:05:17 ..... started STAR run\nMar 10 08:05:17 ... starting to generate Genome files\nMar 10 08:05:17 ..... processing annotations GTF\nMar 10 08:05:17 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:05:17 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:05:17 ... loading chunks from disk, packing SA...\nMar 10 08:05:17 ... finished generating suffix array\nMar 10 08:05:17 ... generating Suffix Array index\nMar 10 08:05:17 ... completed Suffix Array index\nMar 10 08:05:17 ..... inserting junctions into the genome indices\nMar 10 08:05:17 ... writing Genome to disk ...\nMar 10 08:05:17 ... writing Suffix Array to disk ...\nMar 10 08:05:17 ... writing SAindex to disk\nMar 10 08:05:17 ..... finished successfully\nMar 10 08:05:17 ..... started STAR run\nMar 10 08:05:17 ..... loading genome\nMar 10 08:05:17 ..... started mapping\nMar 10 08:05:35 ..... finished mapping\nMar 10 08:05:35 ..... started Solo counting\nMar 10 08:05:35 ..... finished Solo counting\nMar 10 08:05:35 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 08:05:17 ..... started STAR run\nMar 10 08:05:17 ... starting to generate Genome files\nMar 10 08:05:17 ..... processing annotations GTF\nMar 10 08:05:17 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:05:17 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:05:17 ... loading chunks from disk, packing SA...\nMar 10 08:05:17 ... finished generating suffix array\nMar 10 08:05:17 ... generating Suffix Array index\nMar 10 08:05:17 ... completed Suffix Array index\nMar 10 08:05:17 ..... inserting junctions into the genome indices\nMar 10 08:05:17 ... writing Genome to disk ...\nMar 10 08:05:17 ... writing Suffix Array to disk ...\nMar 10 08:05:17 ... writing SAindex to disk\nMar 10 08:05:17 ..... finished successfully\nMar 10 08:05:17 ..... started STAR run\nMar 10 08:05:17 ..... loading genome\nMar 10 08:05:17 ..... started mapping\nMar 10 08:05:35 ..... finished mapping\nMar 10 08:05:35 ..... started Solo counting\nMar 10 08:05:35 ..... finished Solo counting\nMar 10 08:05:35 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:05:17", "plugin": "core", "name": "start_epoch", "raw_value": "1741593917.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:05:35", "plugin": "core", "name": "end_epoch", "raw_value": "1741593935.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-5", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 5, "time_seconds": 86.44005703926086, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "de983f66b17f0489"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "1e409242a0e98cd3"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "f10b9d698fc3f0dc"}, "sc|input_types|input2": {"src": "hda", "id": "50ccb8b1465b3600"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "9f0162e9a29b191b"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene", "solo|filter|nExpectedCells": "5", "solo|filter|maxPercentile": "0.99", "solo|filter|maxMinRatio": "10", "solo|filter|indMin": "45000", "solo|filter|indMax": "90000", "solo|filter|umiMin": "500", "solo|filter|umiMinFracMedian": "0.01", "solo|filter|candMaxN": "20000", "solo|filter|FDR": "0.01", "solo|filter|simN": "10000", "solo|filter|filter_type": "emptydrops"}, "job": {"model_class": "Job", "id": "7c1c8ce868c2c874", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:17:38.645907", "update_time": "2025-03-10T08:18:25.319476", "galaxy_version": "24.2", "external_id": "gxy-vzq5v", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/b/9/b/dataset_b9b1fa92-3d28-4378-9970-84b70798d16e.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/7/8/f/dataset_78fb4aa8-5ada-41a5-b658-3d120ab37822.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/c/c/f/dataset_ccf9ca11-1d0e-4a3c-b386-098747d9dddc.dat /galaxy/server/database/objects/7/3/2/dataset_73252a38-8db3-4c7c-8dd9-f1a9fe2a409c.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/2/2/c/dataset_22c69ceb-5a38-4d38-95fd-2df7d746bb17.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter EmptyDrops_CR 5 0.99 10.0 45000 90000 500 0.01 20000 0.01 10000  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/399/outputs/dataset_0c790a26-0d0a-4c54-bdc8-f9b7c1709916.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/399/outputs/dataset_02d28465-3bc0-4e9f-a33e-44b58cb34ee3.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 570, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 566, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 567, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 568, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 569, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "solo": "{\"filter\": {\"FDR\": \"0.01\", \"__current_case__\": 1, \"candMaxN\": \"20000\", \"filter_type\": \"emptydrops\", \"indMax\": \"90000\", \"indMin\": \"45000\", \"maxMinRatio\": \"10.0\", \"maxPercentile\": \"0.99\", \"nExpectedCells\": \"5\", \"simN\": \"10000\", \"umiMin\": \"500\", \"umiMinFracMedian\": \"0.01\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "f96e90e630ee7c33", "src": "hda", "uuid": "b9b1fa92-3d28-4378-9970-84b70798d16e"}, "refGenomeSource|sjdbGTFfile": {"id": "1e409242a0e98cd3", "src": "hda", "uuid": "78fb4aa8-5ada-41a5-b658-3d120ab37822"}, "sc|input_types|input1": {"id": "f10b9d698fc3f0dc", "src": "hda", "uuid": "73252a38-8db3-4c7c-8dd9-f1a9fe2a409c"}, "sc|input_types|input11": {"id": "f10b9d698fc3f0dc", "src": "hda", "uuid": "73252a38-8db3-4c7c-8dd9-f1a9fe2a409c"}, "sc|input_types|input2": {"id": "50ccb8b1465b3600", "src": "hda", "uuid": "ccf9ca11-1d0e-4a3c-b386-098747d9dddc"}, "sc|input_types|input21": {"id": "50ccb8b1465b3600", "src": "hda", "uuid": "ccf9ca11-1d0e-4a3c-b386-098747d9dddc"}, "sc|soloCBwhitelist": {"id": "9f0162e9a29b191b", "src": "hda", "uuid": "22c69ceb-5a38-4d38-95fd-2df7d746bb17"}}, "outputs": {"output_log": {"id": "5c448b13d80ac604", "src": "hda", "uuid": "87130193-ed11-4abb-9fc0-8016cad61993"}, "output_genes_filtered": {"id": "47bcac4dc801c98d", "src": "hda", "uuid": "7cfdc946-946f-4f3f-a59a-ed2caf462392"}, "output_barcodes_filtered": {"id": "decdeea5354920a9", "src": "hda", "uuid": "5bdbcd87-da93-4c83-9f38-6f5d6371c463"}, "output_matrix_filtered": {"id": "7e35d6db8543ea6f", "src": "hda", "uuid": "454d7f65-883d-42e5-8123-a7852b16ef78"}, "output_BAM": {"id": "e1f6b2dc964f4d88", "src": "hda", "uuid": "02d28465-3bc0-4e9f-a33e-44b58cb34ee3"}, "output_stats": {"id": "a665389388b9f0d3", "src": "hda", "uuid": "0c790a26-0d0a-4c54-bdc8-f9b7c1709916"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 08:17:55 ..... started STAR run\nMar 10 08:17:55 ... starting to generate Genome files\nMar 10 08:17:55 ..... processing annotations GTF\nMar 10 08:17:55 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:17:55 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:17:55 ... loading chunks from disk, packing SA...\nMar 10 08:17:55 ... finished generating suffix array\nMar 10 08:17:55 ... generating Suffix Array index\nMar 10 08:17:55 ... completed Suffix Array index\nMar 10 08:17:55 ..... inserting junctions into the genome indices\nMar 10 08:17:55 ... writing Genome to disk ...\nMar 10 08:17:55 ... writing Suffix Array to disk ...\nMar 10 08:17:55 ... writing SAindex to disk\nMar 10 08:17:55 ..... finished successfully\nMar 10 08:17:55 ..... started STAR run\nMar 10 08:17:55 ..... loading genome\nMar 10 08:17:55 ..... started mapping\nMar 10 08:18:13 ..... finished mapping\nMar 10 08:18:13 ..... started Solo counting\nMar 10 08:18:13 ..... finished Solo counting\nMar 10 08:18:13 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 08:17:55 ..... started STAR run\nMar 10 08:17:55 ... starting to generate Genome files\nMar 10 08:17:55 ..... processing annotations GTF\nMar 10 08:17:55 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:17:55 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:17:55 ... loading chunks from disk, packing SA...\nMar 10 08:17:55 ... finished generating suffix array\nMar 10 08:17:55 ... generating Suffix Array index\nMar 10 08:17:55 ... completed Suffix Array index\nMar 10 08:17:55 ..... inserting junctions into the genome indices\nMar 10 08:17:55 ... writing Genome to disk ...\nMar 10 08:17:55 ... writing Suffix Array to disk ...\nMar 10 08:17:55 ... writing SAindex to disk\nMar 10 08:17:55 ..... finished successfully\nMar 10 08:17:55 ..... started STAR run\nMar 10 08:17:55 ..... loading genome\nMar 10 08:17:55 ..... started mapping\nMar 10 08:18:13 ..... finished mapping\nMar 10 08:18:13 ..... started Solo counting\nMar 10 08:18:13 ..... finished Solo counting\nMar 10 08:18:13 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:17:55", "plugin": "core", "name": "start_epoch", "raw_value": "1741594675.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:18:13", "plugin": "core", "name": "end_epoch", "raw_value": "1741594693.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-6", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 6, "time_seconds": 69.79825925827026, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "16efd4296d989e1c"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "e1d531d8f5c0eee8"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "4ea60b51a589d0f1"}, "sc|input_types|input2": {"src": "hda", "id": "2def9dd832cd61c2"}, "sc|input_types|use": "repeat", "sc|cb_whitelists_0|whitelist_file": {"src": "hda", "id": "c3da0e3842277cf8"}, "sc|cb_whitelists_0|cb_start_anchor": "0", "sc|cb_whitelists_0|cb_start_anchor_pos": "0", "sc|cb_whitelists_0|cb_end_anchor": "2", "sc|cb_whitelists_0|cb_end_anchor_pos": "-1", "sc|cb_whitelists_1|whitelist_file": {"src": "hda", "id": "25819d7b0ea2e647"}, "sc|cb_whitelists_1|cb_start_anchor": "3", "sc|cb_whitelists_1|cb_start_anchor_pos": "1", "sc|cb_whitelists_1|cb_end_anchor": "3", "sc|cb_whitelists_1|cb_end_anchor_pos": "8", "sc|umi_start_anchor": "3", "sc|umi_start_anchor_pos": "9", "sc|umi_end_anchor": "3", "sc|umi_end_anchor_pos": "14", "sc|soloAdapterSequence": "GAGTGATTGCTTGTGACGCCTT", "sc|soloAdapterMismatchesNmax": "1", "sc|clipAdapterType": "CellRanger4", "sc|soloUMIdedup": "1MM_All", "sc|soloCBmatchWLtype": "1MM", "sc|solo_type": "CB_UMI_Complex"}, "job": {"model_class": "Job", "id": "a65b2fc42ea4ad82", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:06:28.479891", "update_time": "2025-03-10T08:06:57.289848", "galaxy_version": "24.2", "external_id": "gxy-pwfpv", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/f/2/d/dataset_f2de5118-569d-49a7-b4d7-41e47599587e.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/e/7/6/dataset_e76d1914-3929-4280-819d-2db0aa3b25ce.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Complex   --readFilesIn /galaxy/server/database/objects/1/d/0/dataset_1d03cc4b-b9bf-442d-ae94-95fb62d983be.dat /galaxy/server/database/objects/6/7/a/dataset_67a4619f-65e0-4b05-9544-a9af4bda57a6.dat --soloCBmatchWLtype 1MM  --readFilesCommand zcat   --soloCBwhitelist /galaxy/server/database/objects/a/5/7/dataset_a576356b-2985-4a17-add1-ca356fe848b4.dat /galaxy/server/database/objects/8/1/b/dataset_81b68bfd-23a8-47fd-afd9-21a6bd2e26c2.dat --soloCBposition 0_0_2_-1 3_1_3_8 --soloUMIposition 3_9_3_14 --soloAdapterSequence 'GAGTGATTGCTTGTGACGCCTT' --soloAdapterMismatchesNmax 1 --clipAdapterType CellRanger4   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/334/outputs/dataset_252d5465-184e-43c7-a78d-8c5867c742eb.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/334/outputs/dataset_50e0a8df-7aac-4950-9e4d-58fd0def2c52.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 470, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 465, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 1, \"cb_whitelists\": [{\"__index__\": 0, \"cb_end_anchor\": \"2\", \"cb_end_anchor_pos\": \"-1\", \"cb_start_anchor\": \"0\", \"cb_start_anchor_pos\": \"0\", \"whitelist_file\": {\"values\": [{\"id\": 468, \"src\": \"hda\"}]}}, {\"__index__\": 1, \"cb_end_anchor\": \"3\", \"cb_end_anchor_pos\": \"8\", \"cb_start_anchor\": \"3\", \"cb_start_anchor_pos\": \"1\", \"whitelist_file\": {\"values\": [{\"id\": 469, \"src\": \"hda\"}]}}], \"clipAdapterType\": \"CellRanger4\", \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 466, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 467, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"soloAdapterMismatchesNmax\": \"1\", \"soloAdapterSequence\": \"GAGTGATTGCTTGTGACGCCTT\", \"soloCBmatchWLtype\": \"1MM\", \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Complex\", \"umi_end_anchor\": \"3\", \"umi_end_anchor_pos\": \"14\", \"umi_start_anchor\": \"3\", \"umi_start_anchor_pos\": \"9\"}", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "8565377db1783ed0", "src": "hda", "uuid": "f2de5118-569d-49a7-b4d7-41e47599587e"}, "refGenomeSource|sjdbGTFfile": {"id": "e1d531d8f5c0eee8", "src": "hda", "uuid": "e76d1914-3929-4280-819d-2db0aa3b25ce"}, "sc|input_types|input1": {"id": "4ea60b51a589d0f1", "src": "hda", "uuid": "67a4619f-65e0-4b05-9544-a9af4bda57a6"}, "sc|input_types|input11": {"id": "4ea60b51a589d0f1", "src": "hda", "uuid": "67a4619f-65e0-4b05-9544-a9af4bda57a6"}, "sc|input_types|input2": {"id": "2def9dd832cd61c2", "src": "hda", "uuid": "1d03cc4b-b9bf-442d-ae94-95fb62d983be"}, "sc|input_types|input21": {"id": "2def9dd832cd61c2", "src": "hda", "uuid": "1d03cc4b-b9bf-442d-ae94-95fb62d983be"}, "sc|cb_whitelists_0|whitelist_file": {"id": "c3da0e3842277cf8", "src": "hda", "uuid": "a576356b-2985-4a17-add1-ca356fe848b4"}, "sc|cb_whitelists_1|whitelist_file": {"id": "25819d7b0ea2e647", "src": "hda", "uuid": "81b68bfd-23a8-47fd-afd9-21a6bd2e26c2"}}, "outputs": {"output_log": {"id": "187987633564ba4a", "src": "hda", "uuid": "8f68fc65-1a1b-4303-bdd5-5884c2cbb3ca"}, "output_genes_filtered": {"id": "7ad1fbd784d6a31a", "src": "hda", "uuid": "a5bd6fca-a282-48e6-9300-973c6aa0fe4d"}, "output_barcodes_filtered": {"id": "199fbddd086eed2b", "src": "hda", "uuid": "3aee1547-cb24-4685-b278-133647f35b12"}, "output_matrix_filtered": {"id": "59d54fc71530b71c", "src": "hda", "uuid": "e6d2e46f-3f89-4f89-9231-cf7c437ff653"}, "output_BAM": {"id": "9d3e3e742f84da03", "src": "hda", "uuid": "50e0a8df-7aac-4950-9e4d-58fd0def2c52"}, "output_stats": {"id": "b50763ab0512681e", "src": "hda", "uuid": "252d5465-184e-43c7-a78d-8c5867c742eb"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 08:06:44 ..... started STAR run\nMar 10 08:06:44 ... starting to generate Genome files\nMar 10 08:06:44 ..... processing annotations GTF\nMar 10 08:06:44 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:06:44 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:06:44 ... loading chunks from disk, packing SA...\nMar 10 08:06:44 ... finished generating suffix array\nMar 10 08:06:44 ... generating Suffix Array index\nMar 10 08:06:44 ... completed Suffix Array index\nMar 10 08:06:44 ..... inserting junctions into the genome indices\nMar 10 08:06:44 ... writing Genome to disk ...\nMar 10 08:06:44 ... writing Suffix Array to disk ...\nMar 10 08:06:44 ... writing SAindex to disk\nMar 10 08:06:44 ..... finished successfully\nMar 10 08:06:44 ..... started STAR run\nMar 10 08:06:44 ..... loading genome\nMar 10 08:06:44 ..... started mapping\nMar 10 08:06:45 ..... finished mapping\nMar 10 08:06:45 ..... started Solo counting\nMar 10 08:06:45 ..... finished Solo counting\nMar 10 08:06:45 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 08:06:44 ..... started STAR run\nMar 10 08:06:44 ... starting to generate Genome files\nMar 10 08:06:44 ..... processing annotations GTF\nMar 10 08:06:44 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:06:44 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:06:44 ... loading chunks from disk, packing SA...\nMar 10 08:06:44 ... finished generating suffix array\nMar 10 08:06:44 ... generating Suffix Array index\nMar 10 08:06:44 ... completed Suffix Array index\nMar 10 08:06:44 ..... inserting junctions into the genome indices\nMar 10 08:06:44 ... writing Genome to disk ...\nMar 10 08:06:44 ... writing Suffix Array to disk ...\nMar 10 08:06:44 ... writing SAindex to disk\nMar 10 08:06:44 ..... finished successfully\nMar 10 08:06:44 ..... started STAR run\nMar 10 08:06:44 ..... loading genome\nMar 10 08:06:44 ..... started mapping\nMar 10 08:06:45 ..... finished mapping\nMar 10 08:06:45 ..... started Solo counting\nMar 10 08:06:45 ..... finished Solo counting\nMar 10 08:06:45 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:06:44", "plugin": "core", "name": "start_epoch", "raw_value": "1741594004.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:06:45", "plugin": "core", "name": "end_epoch", "raw_value": "1741594005.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-6", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 6, "time_seconds": 69.60006284713745, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "746f5109b1cb8dcd"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "4a4d8bb9a7287133"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "f1c7d704770a306f"}, "sc|input_types|input2": {"src": "hda", "id": "189fffbeda04de22"}, "sc|input_types|use": "repeat", "sc|cb_whitelists_0|whitelist_file": {"src": "hda", "id": "6ba7fb420f2bb88c"}, "sc|cb_whitelists_0|cb_start_anchor": "0", "sc|cb_whitelists_0|cb_start_anchor_pos": "0", "sc|cb_whitelists_0|cb_end_anchor": "2", "sc|cb_whitelists_0|cb_end_anchor_pos": "-1", "sc|cb_whitelists_1|whitelist_file": {"src": "hda", "id": "8907a934a32af605"}, "sc|cb_whitelists_1|cb_start_anchor": "3", "sc|cb_whitelists_1|cb_start_anchor_pos": "1", "sc|cb_whitelists_1|cb_end_anchor": "3", "sc|cb_whitelists_1|cb_end_anchor_pos": "8", "sc|umi_start_anchor": "3", "sc|umi_start_anchor_pos": "9", "sc|umi_end_anchor": "3", "sc|umi_end_anchor_pos": "14", "sc|soloAdapterSequence": "GAGTGATTGCTTGTGACGCCTT", "sc|soloAdapterMismatchesNmax": "1", "sc|clipAdapterType": "CellRanger4", "sc|soloUMIdedup": "1MM_All", "sc|soloCBmatchWLtype": "1MM", "sc|solo_type": "CB_UMI_Complex"}, "job": {"model_class": "Job", "id": "2dc2a0dd0775e597", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:19:06.417478", "update_time": "2025-03-10T08:19:35.575907", "galaxy_version": "24.2", "external_id": "gxy-gzdpp", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/1/d/5/dataset_1d574784-1142-4835-b972-1339bc48ca88.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/8/a/4/dataset_8a4657d4-8adb-482b-a803-830f2feee033.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Complex   --readFilesIn /galaxy/server/database/objects/a/2/4/dataset_a24f428e-5edd-4ed0-8f8b-15e2f96c5892.dat /galaxy/server/database/objects/c/9/b/dataset_c9b5da20-aea6-44b4-a781-b2f771da3106.dat --soloCBmatchWLtype 1MM  --readFilesCommand zcat   --soloCBwhitelist /galaxy/server/database/objects/3/7/b/dataset_37bf0932-6083-439f-b9fc-a2f54537f22b.dat /galaxy/server/database/objects/a/5/0/dataset_a5094bbc-e064-4165-a6d9-50125ccc3a4a.dat --soloCBposition 0_0_2_-1 3_1_3_8 --soloUMIposition 3_9_3_14 --soloAdapterSequence 'GAGTGATTGCTTGTGACGCCTT' --soloAdapterMismatchesNmax 1 --clipAdapterType CellRanger4   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/407/outputs/dataset_014f984d-5c40-4c99-b56c-35fcd804e871.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/407/outputs/dataset_c38d17ac-7770-4df3-8262-3e22c5c06813.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 583, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 578, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 1, \"cb_whitelists\": [{\"__index__\": 0, \"cb_end_anchor\": \"2\", \"cb_end_anchor_pos\": \"-1\", \"cb_start_anchor\": \"0\", \"cb_start_anchor_pos\": \"0\", \"whitelist_file\": {\"values\": [{\"id\": 581, \"src\": \"hda\"}]}}, {\"__index__\": 1, \"cb_end_anchor\": \"3\", \"cb_end_anchor_pos\": \"8\", \"cb_start_anchor\": \"3\", \"cb_start_anchor_pos\": \"1\", \"whitelist_file\": {\"values\": [{\"id\": 582, \"src\": \"hda\"}]}}], \"clipAdapterType\": \"CellRanger4\", \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 579, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 580, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"soloAdapterMismatchesNmax\": \"1\", \"soloAdapterSequence\": \"GAGTGATTGCTTGTGACGCCTT\", \"soloCBmatchWLtype\": \"1MM\", \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Complex\", \"umi_end_anchor\": \"3\", \"umi_end_anchor_pos\": \"14\", \"umi_start_anchor\": \"3\", \"umi_start_anchor_pos\": \"9\"}", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "18ddae94ddf9e00b", "src": "hda", "uuid": "1d574784-1142-4835-b972-1339bc48ca88"}, "refGenomeSource|sjdbGTFfile": {"id": "4a4d8bb9a7287133", "src": "hda", "uuid": "8a4657d4-8adb-482b-a803-830f2feee033"}, "sc|input_types|input1": {"id": "f1c7d704770a306f", "src": "hda", "uuid": "c9b5da20-aea6-44b4-a781-b2f771da3106"}, "sc|input_types|input11": {"id": "f1c7d704770a306f", "src": "hda", "uuid": "c9b5da20-aea6-44b4-a781-b2f771da3106"}, "sc|input_types|input2": {"id": "189fffbeda04de22", "src": "hda", "uuid": "a24f428e-5edd-4ed0-8f8b-15e2f96c5892"}, "sc|input_types|input21": {"id": "189fffbeda04de22", "src": "hda", "uuid": "a24f428e-5edd-4ed0-8f8b-15e2f96c5892"}, "sc|cb_whitelists_0|whitelist_file": {"id": "6ba7fb420f2bb88c", "src": "hda", "uuid": "37bf0932-6083-439f-b9fc-a2f54537f22b"}, "sc|cb_whitelists_1|whitelist_file": {"id": "8907a934a32af605", "src": "hda", "uuid": "a5094bbc-e064-4165-a6d9-50125ccc3a4a"}}, "outputs": {"output_log": {"id": "4fbb826b7368ddbd", "src": "hda", "uuid": "d9b65ee0-09fd-4111-97e9-ffdb45157735"}, "output_genes_filtered": {"id": "dd56647453c24987", "src": "hda", "uuid": "5f119c10-bfb0-4bcc-b264-1fb253365d6d"}, "output_barcodes_filtered": {"id": "1e95cd6ddc89067f", "src": "hda", "uuid": "a8ddaf7f-1a89-455c-8718-6796a6543c6d"}, "output_matrix_filtered": {"id": "4be46fc0fc79488b", "src": "hda", "uuid": "9e5fef0d-afd6-4c65-9a23-7e6bef3d04d4"}, "output_BAM": {"id": "8fe3b231b75ab78e", "src": "hda", "uuid": "c38d17ac-7770-4df3-8262-3e22c5c06813"}, "output_stats": {"id": "ec1a620e3193402b", "src": "hda", "uuid": "014f984d-5c40-4c99-b56c-35fcd804e871"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 08:19:22 ..... started STAR run\nMar 10 08:19:22 ... starting to generate Genome files\nMar 10 08:19:22 ..... processing annotations GTF\nMar 10 08:19:22 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:19:22 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:19:22 ... loading chunks from disk, packing SA...\nMar 10 08:19:22 ... finished generating suffix array\nMar 10 08:19:22 ... generating Suffix Array index\nMar 10 08:19:22 ... completed Suffix Array index\nMar 10 08:19:22 ..... inserting junctions into the genome indices\nMar 10 08:19:22 ... writing Genome to disk ...\nMar 10 08:19:22 ... writing Suffix Array to disk ...\nMar 10 08:19:22 ... writing SAindex to disk\nMar 10 08:19:22 ..... finished successfully\nMar 10 08:19:22 ..... started STAR run\nMar 10 08:19:22 ..... loading genome\nMar 10 08:19:22 ..... started mapping\nMar 10 08:19:23 ..... finished mapping\nMar 10 08:19:23 ..... started Solo counting\nMar 10 08:19:23 ..... finished Solo counting\nMar 10 08:19:23 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 08:19:22 ..... started STAR run\nMar 10 08:19:22 ... starting to generate Genome files\nMar 10 08:19:22 ..... processing annotations GTF\nMar 10 08:19:22 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:19:22 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:19:22 ... loading chunks from disk, packing SA...\nMar 10 08:19:22 ... finished generating suffix array\nMar 10 08:19:22 ... generating Suffix Array index\nMar 10 08:19:22 ... completed Suffix Array index\nMar 10 08:19:22 ..... inserting junctions into the genome indices\nMar 10 08:19:22 ... writing Genome to disk ...\nMar 10 08:19:22 ... writing Suffix Array to disk ...\nMar 10 08:19:22 ... writing SAindex to disk\nMar 10 08:19:22 ..... finished successfully\nMar 10 08:19:22 ..... started STAR run\nMar 10 08:19:22 ..... loading genome\nMar 10 08:19:22 ..... started mapping\nMar 10 08:19:23 ..... finished mapping\nMar 10 08:19:23 ..... started Solo counting\nMar 10 08:19:23 ..... finished Solo counting\nMar 10 08:19:23 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:19:22", "plugin": "core", "name": "start_epoch", "raw_value": "1741594762.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:19:23", "plugin": "core", "name": "end_epoch", "raw_value": "1741594763.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-7", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 7, "time_seconds": 144.47391390800476, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "f85bce59f9731a71"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "31896d983535415d"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types_smart_seq|paired_end_collection": {"src": "hdca", "id": "6698abda213d6565"}, "sc|input_types_smart_seq|use": "list_paired_end", "sc|cell_ids": {"src": "hda", "id": "f306e4bf29c5daf8"}, "sc|soloUMIdedup": "Exact", "sc|solo_type": "SmartSeq", "solo|soloStrand": "Unstranded", "solo|filter|n_cells": "2", "solo|filter|filter_type": "topcells"}, "job": {"model_class": "Job", "id": "89f35b4e698ec2ff", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:08:50.023088", "update_time": "2025-03-10T08:09:21.905226", "galaxy_version": "24.2", "external_id": "gxy-nr5lt", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/6/f/b/dataset_6fbb6dba-b4db-421d-8eb6-bd178f351924.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/3/3/4/dataset_3342c360-b50d-4882-b6cb-325d8deb4434.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType SmartSeq  --readFilesManifest '/galaxy/server/database/jobs_directory/000/357/configs/tmpd2k7estd'  --readFilesCommand zcat  --soloCBwhitelist None  --soloUMIfiltering - --soloStrand Unstranded --soloFeatures Gene --soloUMIdedup Exact --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter TopCells 2  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/357/outputs/dataset_86d1dafc-97ba-40f8-86d0-37ab8fce041e.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/357/outputs/dataset_e29fe83e-c292-4005-a685-360a78d1ef3e.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 498, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 478, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 2, \"cell_ids\": {\"values\": [{\"id\": 497, \"src\": \"hda\"}]}, \"input_types_smart_seq\": {\"__current_case__\": 1, \"paired_end_collection\": {\"values\": [{\"id\": 26, \"src\": \"hdca\"}]}, \"use\": \"list_paired_end\"}, \"soloUMIdedup\": \"Exact\", \"solo_type\": \"SmartSeq\"}", "solo": "{\"filter\": {\"__current_case__\": 2, \"filter_type\": \"topcells\", \"n_cells\": \"2\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Unstranded\", \"soloUMIfiltering\": \"-\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "59723c8f137234f5", "src": "hda", "uuid": "6fbb6dba-b4db-421d-8eb6-bd178f351924"}, "refGenomeSource|sjdbGTFfile": {"id": "31896d983535415d", "src": "hda", "uuid": "3342c360-b50d-4882-b6cb-325d8deb4434"}, "sc|input_types_smart_seq|paired_end_collection1": {"id": "a0197608aad9e62e", "src": "hda", "uuid": "c8e91422-d2f6-40f5-b1f9-2d270eccc3d2"}, "sc|input_types_smart_seq|paired_end_collection2": {"id": "735d7fdb6383b75b", "src": "hda", "uuid": "833113f2-ee71-4681-9c33-8ffb93af4135"}, "sc|input_types_smart_seq|paired_end_collection3": {"id": "0d9d48f1c7d6b93d", "src": "hda", "uuid": "6ba1cb17-a4f1-4403-90ad-8258174f357f"}, "sc|input_types_smart_seq|paired_end_collection4": {"id": "cc4eb509dffbbf8c", "src": "hda", "uuid": "bde914d2-9bdb-450a-8840-373f2303ba6f"}, "sc|input_types_smart_seq|paired_end_collection5": {"id": "e3e9ffc9ac997f58", "src": "hda", "uuid": "2bc1f589-6e7f-49d2-a045-d7b27de29d6a"}, "sc|input_types_smart_seq|paired_end_collection6": {"id": "8705d49a7f54e9ec", "src": "hda", "uuid": "a2728d2f-73ed-4d06-a648-0b2fc2a47dbf"}, "sc|input_types_smart_seq|paired_end_collection7": {"id": "e462556036a41387", "src": "hda", "uuid": "b3b084a7-a6ee-4ae9-9ff4-bfd0f9c296bd"}, "sc|input_types_smart_seq|paired_end_collection8": {"id": "a9ee34c77a8eb993", "src": "hda", "uuid": "7cc464ca-de09-4bbe-9a56-9e65f3539a6b"}, "sc|input_types_smart_seq|paired_end_collection9": {"id": "0f491c957b284156", "src": "hda", "uuid": "b1794e47-3166-4c05-8af4-84092f022cfa"}, "sc|input_types_smart_seq|paired_end_collection10": {"id": "13f5b984c4fdf1b7", "src": "hda", "uuid": "af795547-3bf2-4224-99d5-5847bccb8d46"}, "sc|input_types_smart_seq|paired_end_collection11": {"id": "dfcf81581bff9d5e", "src": "hda", "uuid": "6f8998cb-e61d-40d9-9711-e9c77b9ad09c"}, "sc|input_types_smart_seq|paired_end_collection12": {"id": "050fd2a64f857257", "src": "hda", "uuid": "d02f9325-0f45-4e21-8c13-1a9bfd97481c"}, "sc|input_types_smart_seq|paired_end_collection13": {"id": "aafd0beeeb853194", "src": "hda", "uuid": "9d0b5450-8fa4-46cf-974d-08a1ec3e4968"}, "sc|input_types_smart_seq|paired_end_collection14": {"id": "4212dc5e66558a0e", "src": "hda", "uuid": "47f6d829-b175-4977-b3e5-2b9ec44ba1d6"}, "sc|input_types_smart_seq|paired_end_collection15": {"id": "35340399c4949575", "src": "hda", "uuid": "a36a703b-503d-4b78-8a17-4a0a218d9ada"}, "sc|input_types_smart_seq|paired_end_collection16": {"id": "8dea48e152e9ce53", "src": "hda", "uuid": "65b454d9-f014-49d4-8d22-e4fe4c5014eb"}, "sc|input_types_smart_seq|paired_end_collection17": {"id": "cf023403dfba11d7", "src": "hda", "uuid": "861a9a80-bdd6-46ad-a92d-b9f63d3ca2e9"}, "sc|input_types_smart_seq|paired_end_collection18": {"id": "cde8adb82303f23e", "src": "hda", "uuid": "6e702c12-9931-4c6b-ae0f-2ab6b783e850"}, "sc|cell_ids": {"id": "f306e4bf29c5daf8", "src": "hda", "uuid": "6da16bcc-a025-4f4e-b47a-2f469138300f"}}, "outputs": {"output_log": {"id": "6684cc494ee4a0ee", "src": "hda", "uuid": "ddb099c1-706a-4cda-aa63-a0baf7d8e5bb"}, "output_genes_filtered": {"id": "8e39adc626753afa", "src": "hda", "uuid": "b73874ac-9778-4170-b2d1-9263f9fce749"}, "output_barcodes_filtered": {"id": "aaa26d0b812c30b1", "src": "hda", "uuid": "0f826d48-e1bb-44f4-9f0f-0cc82a20ce56"}, "output_matrix_filtered": {"id": "4382030d8fd64908", "src": "hda", "uuid": "2f3144e0-401d-4d1a-ad31-0f7af9e92e60"}, "output_BAM": {"id": "af7e667611af8336", "src": "hda", "uuid": "e29fe83e-c292-4005-a685-360a78d1ef3e"}, "output_stats": {"id": "3ea2d66e0c267a57", "src": "hda", "uuid": "86d1dafc-97ba-40f8-86d0-37ab8fce041e"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 08:09:04 ..... started STAR run\nMar 10 08:09:04 ... starting to generate Genome files\nMar 10 08:09:04 ..... processing annotations GTF\nMar 10 08:09:04 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:09:04 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:09:05 ... loading chunks from disk, packing SA...\nMar 10 08:09:05 ... finished generating suffix array\nMar 10 08:09:05 ... generating Suffix Array index\nMar 10 08:09:05 ... completed Suffix Array index\nMar 10 08:09:05 ..... inserting junctions into the genome indices\nMar 10 08:09:05 ... writing Genome to disk ...\nMar 10 08:09:05 ... writing Suffix Array to disk ...\nMar 10 08:09:05 ... writing SAindex to disk\nMar 10 08:09:05 ..... finished successfully\nMar 10 08:09:05 ..... started STAR run\nMar 10 08:09:05 ..... loading genome\nMar 10 08:09:05 ..... started mapping\nMar 10 08:09:09 ..... finished mapping\nMar 10 08:09:09 ..... started Solo counting\nMar 10 08:09:09 ..... finished Solo counting\nMar 10 08:09:09 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 08:09:04 ..... started STAR run\nMar 10 08:09:04 ... starting to generate Genome files\nMar 10 08:09:04 ..... processing annotations GTF\nMar 10 08:09:04 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:09:04 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:09:05 ... loading chunks from disk, packing SA...\nMar 10 08:09:05 ... finished generating suffix array\nMar 10 08:09:05 ... generating Suffix Array index\nMar 10 08:09:05 ... completed Suffix Array index\nMar 10 08:09:05 ..... inserting junctions into the genome indices\nMar 10 08:09:05 ... writing Genome to disk ...\nMar 10 08:09:05 ... writing Suffix Array to disk ...\nMar 10 08:09:05 ... writing SAindex to disk\nMar 10 08:09:05 ..... finished successfully\nMar 10 08:09:05 ..... started STAR run\nMar 10 08:09:05 ..... loading genome\nMar 10 08:09:05 ..... started mapping\nMar 10 08:09:09 ..... finished mapping\nMar 10 08:09:09 ..... started Solo counting\nMar 10 08:09:09 ..... finished Solo counting\nMar 10 08:09:09 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:09:04", "plugin": "core", "name": "start_epoch", "raw_value": "1741594144.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:09:09", "plugin": "core", "name": "end_epoch", "raw_value": "1741594149.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "5 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-7", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 7, "time_seconds": 141.95734214782715, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "8dc74c78ae90184f"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "e92e9173b305a332"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types_smart_seq|paired_end_collection": {"src": "hdca", "id": "36a24812a663798d"}, "sc|input_types_smart_seq|use": "list_paired_end", "sc|cell_ids": {"src": "hda", "id": "940ca104c0192a08"}, "sc|soloUMIdedup": "Exact", "sc|solo_type": "SmartSeq", "solo|soloStrand": "Unstranded", "solo|filter|n_cells": "2", "solo|filter|filter_type": "topcells"}, "job": {"model_class": "Job", "id": "f8a723f2865af8af", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:21:25.323389", "update_time": "2025-03-10T08:21:57.616201", "galaxy_version": "24.2", "external_id": "gxy-rk6cw", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/0/7/0/dataset_07052f5a-29a8-4f6a-a3a5-11ea33dd7f39.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/0/c/9/dataset_0c97b5a2-f9a7-401d-a305-f264647438e8.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType SmartSeq  --readFilesManifest '/galaxy/server/database/jobs_directory/000/430/configs/tmpzx4fx1ou'  --readFilesCommand zcat  --soloCBwhitelist None  --soloUMIfiltering - --soloStrand Unstranded --soloFeatures Gene --soloUMIdedup Exact --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter TopCells 2  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/jobs_directory/000/430/outputs/dataset_724e0f29-2c81-4f97-81b8-bcd9ebfe6e24.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/jobs_directory/000/430/outputs/dataset_fa4a1f03-8fca-4adc-ba44-42af4985b352.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 611, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 591, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}", "sc": "{\"__current_case__\": 2, \"cell_ids\": {\"values\": [{\"id\": 610, \"src\": \"hda\"}]}, \"input_types_smart_seq\": {\"__current_case__\": 1, \"paired_end_collection\": {\"values\": [{\"id\": 28, \"src\": \"hdca\"}]}, \"use\": \"list_paired_end\"}, \"soloUMIdedup\": \"Exact\", \"solo_type\": \"SmartSeq\"}", "solo": "{\"filter\": {\"__current_case__\": 2, \"filter_type\": \"topcells\", \"n_cells\": \"2\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Unstranded\", \"soloUMIfiltering\": \"-\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "f55f4a114f79a9c5", "src": "hda", "uuid": "07052f5a-29a8-4f6a-a3a5-11ea33dd7f39"}, "refGenomeSource|sjdbGTFfile": {"id": "e92e9173b305a332", "src": "hda", "uuid": "0c97b5a2-f9a7-401d-a305-f264647438e8"}, "sc|input_types_smart_seq|paired_end_collection1": {"id": "d1a299d5e8b66d09", "src": "hda", "uuid": "d3ebb4b5-d645-487c-905e-f27bf79a3245"}, "sc|input_types_smart_seq|paired_end_collection2": {"id": "5b84faab0983e3b9", "src": "hda", "uuid": "47a36eff-ae44-4627-b082-fe961502e960"}, "sc|input_types_smart_seq|paired_end_collection3": {"id": "378738f0d7164fe7", "src": "hda", "uuid": "8d89f109-1eaf-46e8-bc25-06c7bf3e860c"}, "sc|input_types_smart_seq|paired_end_collection4": {"id": "ec65f187102fe41b", "src": "hda", "uuid": "8e84af3a-55cb-4f54-bf70-9e9c69fb030d"}, "sc|input_types_smart_seq|paired_end_collection5": {"id": "e22af9c0edcb49da", "src": "hda", "uuid": "cec7c424-cc02-4c46-bab7-468f47c10136"}, "sc|input_types_smart_seq|paired_end_collection6": {"id": "7f3d2ee2df2c8b38", "src": "hda", "uuid": "95b4f8f1-d5bf-4cf2-9931-19f118632685"}, "sc|input_types_smart_seq|paired_end_collection7": {"id": "bbc11258f97d5107", "src": "hda", "uuid": "edbe339a-fcc6-4893-8f30-c7ab82ca0874"}, "sc|input_types_smart_seq|paired_end_collection8": {"id": "ce3f5aaec977f7bf", "src": "hda", "uuid": "178faf1f-c527-4825-a7e0-ad085d6278d7"}, "sc|input_types_smart_seq|paired_end_collection9": {"id": "41ad529ea7f6ba9c", "src": "hda", "uuid": "fda1a72a-3e59-40d3-9c78-d98b73d95d68"}, "sc|input_types_smart_seq|paired_end_collection10": {"id": "54da4ef94f421d48", "src": "hda", "uuid": "1b28e0ea-f475-4e22-ab73-6e545a61256a"}, "sc|input_types_smart_seq|paired_end_collection11": {"id": "61ea061e6fc26009", "src": "hda", "uuid": "ee6e7a93-a9dc-4e5b-92fe-9fe5da7263be"}, "sc|input_types_smart_seq|paired_end_collection12": {"id": "af025b1e22b15fba", "src": "hda", "uuid": "4e547d1d-2bd7-421f-9c3d-a24177e74f7d"}, "sc|input_types_smart_seq|paired_end_collection13": {"id": "b14a8ad837821edb", "src": "hda", "uuid": "90edc237-c3df-4fb1-ab1e-17cf892ee538"}, "sc|input_types_smart_seq|paired_end_collection14": {"id": "8841471d890162f8", "src": "hda", "uuid": "fcd6e788-8780-42d4-99bd-a2415af9f090"}, "sc|input_types_smart_seq|paired_end_collection15": {"id": "4ea5b3c79d6def4c", "src": "hda", "uuid": "e4f4eea6-b70d-4af2-b65a-0dc45d979b8e"}, "sc|input_types_smart_seq|paired_end_collection16": {"id": "d701f9cb9c62f760", "src": "hda", "uuid": "625255e9-17e8-4400-b709-11f21511f033"}, "sc|input_types_smart_seq|paired_end_collection17": {"id": "d8e82d0ed1a7dafa", "src": "hda", "uuid": "43c54178-58a7-49c2-badb-1667de110f0f"}, "sc|input_types_smart_seq|paired_end_collection18": {"id": "925b213f8908e5e3", "src": "hda", "uuid": "18f18a8a-0ea5-4c99-b041-757fda6e8d6e"}, "sc|cell_ids": {"id": "940ca104c0192a08", "src": "hda", "uuid": "849c56cc-2ffe-42bd-9d49-b565b5a93812"}}, "outputs": {"output_log": {"id": "1bed645b49cdc9dc", "src": "hda", "uuid": "86d61702-8459-4c5e-9d01-902acc0dac1d"}, "output_genes_filtered": {"id": "e54e724dd6d7ee04", "src": "hda", "uuid": "8b555b0a-bf1d-44b0-a9ee-21c262535da8"}, "output_barcodes_filtered": {"id": "91035595bd3225cd", "src": "hda", "uuid": "79d2de7f-a30b-4e7d-8516-e8b4d724babc"}, "output_matrix_filtered": {"id": "f502dd43fbedd5f1", "src": "hda", "uuid": "0f13cfc1-db30-4677-b633-334eee1b7857"}, "output_BAM": {"id": "ec9b7d585bbcbf3f", "src": "hda", "uuid": "fa4a1f03-8fca-4adc-ba44-42af4985b352"}, "output_stats": {"id": "ef6d4cfef3a8a2c3", "src": "hda", "uuid": "724e0f29-2c81-4f97-81b8-bcd9ebfe6e24"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "Mar 10 08:21:41 ..... started STAR run\nMar 10 08:21:41 ... starting to generate Genome files\nMar 10 08:21:41 ..... processing annotations GTF\nMar 10 08:21:41 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:21:41 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:21:41 ... loading chunks from disk, packing SA...\nMar 10 08:21:41 ... finished generating suffix array\nMar 10 08:21:41 ... generating Suffix Array index\nMar 10 08:21:41 ... completed Suffix Array index\nMar 10 08:21:41 ..... inserting junctions into the genome indices\nMar 10 08:21:41 ... writing Genome to disk ...\nMar 10 08:21:42 ... writing Suffix Array to disk ...\nMar 10 08:21:42 ... writing SAindex to disk\nMar 10 08:21:42 ..... finished successfully\nMar 10 08:21:42 ..... started STAR run\nMar 10 08:21:42 ..... loading genome\nMar 10 08:21:42 ..... started mapping\nMar 10 08:21:46 ..... finished mapping\nMar 10 08:21:46 ..... started Solo counting\nMar 10 08:21:46 ..... finished Solo counting\nMar 10 08:21:46 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Mar 10 08:21:41 ..... started STAR run\nMar 10 08:21:41 ... starting to generate Genome files\nMar 10 08:21:41 ..... processing annotations GTF\nMar 10 08:21:41 ... starting to sort Suffix Array. This may take a long time...\nMar 10 08:21:41 ... sorting Suffix Array chunks and saving them to disk...\nMar 10 08:21:41 ... loading chunks from disk, packing SA...\nMar 10 08:21:41 ... finished generating suffix array\nMar 10 08:21:41 ... generating Suffix Array index\nMar 10 08:21:41 ... completed Suffix Array index\nMar 10 08:21:41 ..... inserting junctions into the genome indices\nMar 10 08:21:41 ... writing Genome to disk ...\nMar 10 08:21:42 ... writing Suffix Array to disk ...\nMar 10 08:21:42 ... writing SAindex to disk\nMar 10 08:21:42 ..... finished successfully\nMar 10 08:21:42 ..... started STAR run\nMar 10 08:21:42 ..... loading genome\nMar 10 08:21:42 ..... started mapping\nMar 10 08:21:46 ..... finished mapping\nMar 10 08:21:46 ..... started Solo counting\nMar 10 08:21:46 ..... finished Solo counting\nMar 10 08:21:46 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-69a6f67cb46e41b4c393f71634a9956d5e31f3e9:8047ce78ee60f6a1f4390a36cee78a99371e4f59-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:21:41", "plugin": "core", "name": "start_epoch", "raw_value": "1741594901.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:21:46", "plugin": "core", "name": "end_epoch", "raw_value": "1741594906.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "5 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "samtools_split/1.9-0", "has_data": true, "data": {"tool_id": "samtools_split", "tool_version": "1.9", "test_index": 0, "time_seconds": 39.052080392837524, "inputs": {"input_bam": {"src": "hda", "id": "7efeeb606e4e25b0"}}, "job": {"model_class": "Job", "id": "8e39adc626753afa", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_split/samtools_split/1.9", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:40:24.235306", "update_time": "2025-03-10T08:40:42.479815", "galaxy_version": "24.2", "external_id": "gxy-pk7qr", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&  samtools split -f 'Read_Group_%!.bam' -u '/galaxy/server/database/jobs_directory/000/500/outputs/dataset_3cee01d9-11d1-4fa6-8db8-9cd5dfc9d767.dat' -@ $addthreads '/galaxy/server/database/objects/a/1/0/dataset_a108728e-3749-4578-b49c-300f1c0563ac.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"header": null, "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input_bam": {"id": "7efeeb606e4e25b0", "src": "hda", "uuid": "a108728e-3749-4578-b49c-300f1c0563ac"}}, "outputs": {"output": {"id": "1b9e47ac09c68c77", "src": "hda", "uuid": "3cee01d9-11d1-4fa6-8db8-9cd5dfc9d767"}, "__new_primary_file_output|Elephant__": {"id": "1db67e162eb2faa7", "src": "hda", "uuid": "579a9064-ae24-48b3-b625-79fed59f236f"}, "__new_primary_file_output|Human__": {"id": "a0ca135508699e31", "src": "hda", "uuid": "d8032247-034d-4c0e-9568-efc5fcdf93d3"}, "__new_primary_file_output|Mouse__": {"id": "d9788875e2011745", "src": "hda", "uuid": "98a5ec1c-e36a-411e-86f2-81dfefe9af04"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/samtools:1.9--h10a08f8_12", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/samtools:1.9--h10a08f8_12"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Job End Time", "value": "2025-03-10 08:40:30", "plugin": "core", "name": "end_epoch", "raw_value": "1741596030.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:40:30", "plugin": "core", "name": "start_epoch", "raw_value": "1741596030.0000000"}]}, "output_problems": ["Primary output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_8xg2wbfs.sam v. /tmp/history_bam_converted_to_sam_zcjlpfzd.sam )\n--- local_file\n+++ history_data\n@@ -6,11 +6,11 @@\n @PG\tID:bowtie2-D76CD0\tPN:bowtie2\tVN:2.1.0\n @PG\tID:bowtie2-58C6F748\tPN:bowtie2\tVN:2.1.0\n @PG\tID:bowtie2-D76CD0-8B37AF2\tPN:bowtie2\tVN:2.1.0\n-@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.1\tPN:samtools\tPP:bowtie2-31DAC016\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.2\tPN:samtools\tPP:bowtie2-D76CD0\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.3\tPN:samtools\tPP:bowtie2-58C6F748\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.4\tPN:samtools\tPP:bowtie2-D76CD0-8B37AF2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/jobs_directory/000/500/outputs/dataset_3cee01d9-11d1-4fa6-8db8-9cd5dfc9d767.dat -@ 0 /galaxy/server/database/objects/a/1/0/dataset_a108728e-3749-4578-b49c-300f1c0563ac.dat\n+@PG\tID:samtools.1\tPN:samtools\tPP:bowtie2-31DAC016\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/jobs_directory/000/500/outputs/dataset_3cee01d9-11d1-4fa6-8db8-9cd5dfc9d767.dat -@ 0 /galaxy/server/database/objects/a/1/0/dataset_a108728e-3749-4578-b49c-300f1c0563ac.dat\n+@PG\tID:samtools.2\tPN:samtools\tPP:bowtie2-D76CD0\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/jobs_directory/000/500/outputs/dataset_3cee01d9-11d1-4fa6-8db8-9cd5dfc9d767.dat -@ 0 /galaxy/server/database/objects/a/1/0/dataset_a108728e-3749-4578-b49c-300f1c0563ac.dat\n+@PG\tID:samtools.3\tPN:samtools\tPP:bowtie2-58C6F748\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/jobs_directory/000/500/outputs/dataset_3cee01d9-11d1-4fa6-8db8-9cd5dfc9d767.dat -@ 0 /galaxy/server/database/objects/a/1/0/dataset_a108728e-3749-4578-b49c-300f1c0563ac.dat\n+@PG\tID:samtools.4\tPN:samtools\tPP:bowtie2-D76CD0-8B37AF2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/jobs_directory/000/500/outputs/dataset_3cee01d9-11d1-4fa6-8db8-9cd5dfc9d767.dat -@ 0 /galaxy/server/database/objects/a/1/0/dataset_a108728e-3749-4578-b49c-300f1c0563ac.dat\n phiX174_9_527_1:0:0_0:0:0_54/1\t0\tphiX174\t9\t42\t70M\t*\t0\t0\tTCGCTTCCATGACGCAGAAGTTAACACTTTCGGATATTTCTGATGAGTCGAAAAATTATCTTGATCAAGC\t2222222222222222222222222222222222222222222222222222222222222222222222\tAS:i:-3\tXN:i:0\tXM:i:1\tXO:i:0\tXG:i:0\tNM:i:1\tMD:Z:65A4\tYT:Z:UU\tRG:Z:Mouse\n phiX174_71_657_0:0:0_1:0:0_72/1\t0\tphiX174\t71\t42\t70M\t*\t0\t0\tGATAAAGCAGGAATTACTACTGCTTGTTTACGAATTAAATCGAAGTGGACTGCTGGCGGAAAATGAGAAA\t2222222222222222222222222222222222222222222222222222222222222222222222\tAS:i:0\tXN:i:0\tXM:i:0\tXO:i:0\tXG:i:0\tNM:i:0\tMD:Z:70\tYT:Z:UU\tRG:Z:Mouse\n phiX174_99_617_1:0:0_2:1:0_a2/1\t0\tphiX174\t99\t42\t70M\t*\t0\t0\tTACGAATTAAATCGAAGTGGACTGCTTGCGGAAAATGAGAAAATTCGACCTATCCTTGCGCAGCTCGAGA\t2222222222222222222222222222222222222222222222222222222222222222222222\tAS:i:-3\tXN:i:0\tXM:i:1\tXO:i:0\tXG:i:0\tNM:i:1\tMD:Z:26G43\tYT:Z:UU\tRG:Z:Mouse\n"], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-0", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 0, "time_seconds": 38.71787452697754, "inputs": {"input": {"src": "hda", "id": "7e9508130f474d42"}}, "job": {"model_class": "Job", "id": "a90e8b20f11dcf8f", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:24:39.174190", "update_time": "2025-03-10T08:24:57.315238", "galaxy_version": "24.2", "external_id": "gxy-5tkbc", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/4/f/1/dataset_4f1c0755-4774-4b16-a3e5-c3abd5cd4e6e.dat' infile &&        samtools view -@ $addthreads -b      -o outfile      infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"sam\""}, "inputs": {"input": {"id": "7e9508130f474d42", "src": "hda", "uuid": "4f1c0755-4774-4b16-a3e5-c3abd5cd4e6e"}}, "outputs": {"outputsam": {"id": "71bc7aad74bc31f2", "src": "hda", "uuid": "cd0b1b67-ed2b-4fea-b207-28e770028203"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:24:45", "plugin": "core", "name": "start_epoch", "raw_value": "1741595085.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:24:45", "plugin": "core", "name": "end_epoch", "raw_value": "1741595085.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (sam_to_bam_out1.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-1", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 1, "status": "skip"}}, {"id": "samtools_view/1.9+galaxy3-10", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 10, "time_seconds": 34.66272163391113, "inputs": {"input": {"src": "hda", "id": "ecfbd76eec4246fd"}, "mode|output_options|output_format|with_header": true, "mode|output_options|output_format|oformat": "sam"}, "job": {"model_class": "Job", "id": "b63557ba6276a584", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:30:16.071019", "update_time": "2025-03-10T08:30:29.811785", "galaxy_version": "24.2", "external_id": "gxy-2kkmr", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/0/c/9/dataset_0c9fd166-411e-4676-9f8e-0924c6e63cd3.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/7/2/9/metadata_72909048-6bbf-4f22-ba3c-01892cdd99f6.dat' infile.bai &&        samtools view -@ $addthreads      -h  -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 1, \"oformat\": \"sam\", \"with_header\": true}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "ecfbd76eec4246fd", "src": "hda", "uuid": "0c9fd166-411e-4676-9f8e-0924c6e63cd3"}}, "outputs": {"outputsam": {"id": "b8e0bc1041182cb5", "src": "hda", "uuid": "c4ff7b0d-0199-4c23-8945-c61ac35048b3"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:30:18", "plugin": "core", "name": "start_epoch", "raw_value": "1741595418.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:30:18", "plugin": "core", "name": "end_epoch", "raw_value": "1741595418.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (bam_to_sam_out1.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-11", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 11, "time_seconds": 32.6185839176178, "inputs": {"input": {"src": "hda", "id": "8b4ccd1e683785b1"}, "mode|output_options|output_format|oformat": "sam", "mode|outtype": "header"}, "job": {"model_class": "Job", "id": "0da33cfbf22b3622", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:30:49.494620", "update_time": "2025-03-10T08:31:02.511936", "galaxy_version": "24.2", "external_id": "gxy-s9xds", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/9/8/7/dataset_987bf512-bfac-4f38-b389-4f321d055b40.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/6/c/8/metadata_6c8f3f0e-29ce-46a2-bdb0-bd7822627c42.dat' infile.bai &&    samtools view -H  -o outfile   infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 2, \"output_options\": {\"__current_case__\": 0, \"output_format\": {\"__current_case__\": 1, \"oformat\": \"sam\"}, \"reads_report_type\": \"\"}, \"outtype\": \"header\"}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "8b4ccd1e683785b1", "src": "hda", "uuid": "987bf512-bfac-4f38-b389-4f321d055b40"}}, "outputs": {"outputsam": {"id": "c42d63b32953d711", "src": "hda", "uuid": "afdf2ddb-cc5a-4bde-897c-fee85fc63b4d"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:30:51", "plugin": "core", "name": "start_epoch", "raw_value": "1741595451.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:30:51", "plugin": "core", "name": "end_epoch", "raw_value": "1741595451.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (bam_to_sam_out2.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-12", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 12, "time_seconds": 33.912646532058716, "inputs": {"input": {"src": "hda", "id": "4e766949b4d5773a"}, "mode|output_options|output_format|with_header": false, "mode|output_options|output_format|oformat": "sam"}, "job": {"model_class": "Job", "id": "ff1d767625a87d09", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:31:23.069293", "update_time": "2025-03-10T08:31:36.244657", "galaxy_version": "24.2", "external_id": "gxy-bghp5", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/3/7/e/dataset_37ed153a-0c3a-47f5-8047-6a7d9b36e542.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/b/a/3/metadata_ba378f30-a1a4-41c4-ae9e-e1f005fba111.dat' infile.bai &&        samtools view -@ $addthreads        -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 1, \"oformat\": \"sam\", \"with_header\": false}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "4e766949b4d5773a", "src": "hda", "uuid": "37ed153a-0c3a-47f5-8047-6a7d9b36e542"}}, "outputs": {"outputsam": {"id": "948f6b1f42bad1f7", "src": "hda", "uuid": "a86e92f2-c84a-4df8-b33e-9d5e45e5d75e"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:31:25", "plugin": "core", "name": "start_epoch", "raw_value": "1741595485.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:31:25", "plugin": "core", "name": "end_epoch", "raw_value": "1741595485.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (bam_to_sam_out3.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-13", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 13, "time_seconds": 32.003828287124634, "inputs": {"input": {"src": "hda", "id": "f2e276caba538f29"}, "mode|output_options|reads_report_type": "count", "mode|outtype": "all_reads"}, "job": {"model_class": "Job", "id": "16efd4296d989e1c", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:31:55.478948", "update_time": "2025-03-10T08:32:08.404684", "galaxy_version": "24.2", "external_id": "gxy-xgrp9", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/9/4/3/dataset_943ea3e3-bdcf-45e7-a0b1-6b3388373793.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/2/e/2/metadata_2e268e92-b43d-4bc9-bee8-7942912a2029.dat' infile.bai &&        samtools view -@ $addthreads -c     -o outfile     infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 1, \"reads_report_type\": \"count\"}, \"outtype\": \"all_reads\"}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "f2e276caba538f29", "src": "hda", "uuid": "943ea3e3-bdcf-45e7-a0b1-6b3388373793"}}, "outputs": {"outputcnt": {"id": "8c3d54e7872e69ad", "src": "hda", "uuid": "57416fe5-9f74-4311-b961-a00c20a6664b"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:31:56", "plugin": "core", "name": "start_epoch", "raw_value": "1741595516.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:31:57", "plugin": "core", "name": "end_epoch", "raw_value": "1741595517.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputcnt: Test output file (test_counts.tab) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-14", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 14, "time_seconds": 34.316598653793335, "inputs": {"input": {"src": "hda", "id": "9818597c2581521f"}, "mode|filter_config|cond_region|select_region": "no", "mode|output_options|output_format|oformat": "cram", "mode|outtype": "selected_reads", "addref_cond|ref": {"src": "hda", "id": "4fbce1d29437f987"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "2def9dd832cd61c2", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:32:29.179748", "update_time": "2025-03-10T08:32:42.931618", "galaxy_version": "24.2", "external_id": "gxy-dmxz2", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/0/4/a/dataset_04a7ae4d-3b6b-4898-a8ec-e9779313dedd.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/7/2/8/dataset_72803fb9-787e-46d4-bd9c-7a74852cbe5c.dat' infile &&         samtools view -@ $addthreads -C      -o outfile  --output-fmt-option no_ref   -T 'reference.fa' -t 'reference.fa.fai'   infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 3, \"oformat\": \"cram\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 653, \"src\": \"hda\"}]}}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"sam\""}, "inputs": {"input": {"id": "9818597c2581521f", "src": "hda", "uuid": "72803fb9-787e-46d4-bd9c-7a74852cbe5c"}, "addref_cond|ref": {"id": "4fbce1d29437f987", "src": "hda", "uuid": "04a7ae4d-3b6b-4898-a8ec-e9779313dedd"}}, "outputs": {"outputsam": {"id": "52bb66b89366d32c", "src": "hda", "uuid": "7d7815bc-a59d-46af-8338-ad760d552635"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:32:31", "plugin": "core", "name": "start_epoch", "raw_value": "1741595551.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:32:31", "plugin": "core", "name": "end_epoch", "raw_value": "1741595551.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (test.cram) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-15", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 15, "time_seconds": 34.59412860870361, "inputs": {"input": {"src": "hda", "id": "03b94b7adbbecd73"}, "mode|filter_config|cond_region|select_region": "no", "mode|output_options|output_format|oformat": "cram", "mode|outtype": "selected_reads", "addref_cond|ref": {"src": "hda", "id": "d3f30bf145683654"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "8565377db1783ed0", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:33:04.909966", "update_time": "2025-03-10T08:33:17.688451", "galaxy_version": "24.2", "external_id": "gxy-dnzdp", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/d/3/f/dataset_d3f27989-667d-4c2e-99b4-5aad07d6cb02.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/e/6/5/dataset_e654ac6f-c00a-4e66-a102-59b59b69e974.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/a/4/9/metadata_a491c225-9d5f-46a2-bdb8-c644769a81e0.dat' infile.bai &&         samtools view -@ $addthreads -C      -o outfile  --output-fmt-option no_ref   -T 'reference.fa' -t 'reference.fa.fai'   infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 3, \"oformat\": \"cram\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 656, \"src\": \"hda\"}]}}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "03b94b7adbbecd73", "src": "hda", "uuid": "e654ac6f-c00a-4e66-a102-59b59b69e974"}, "addref_cond|ref": {"id": "d3f30bf145683654", "src": "hda", "uuid": "d3f27989-667d-4c2e-99b4-5aad07d6cb02"}}, "outputs": {"outputsam": {"id": "22b4b27ed485edd1", "src": "hda", "uuid": "86bf86c8-47e0-44c2-b0ab-17ce3856c6c6"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:33:06", "plugin": "core", "name": "start_epoch", "raw_value": "1741595586.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:33:06", "plugin": "core", "name": "end_epoch", "raw_value": "1741595586.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (test.cram) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-16", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 16, "status": "skip"}}, {"id": "samtools_view/1.9+galaxy3-17", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 17, "time_seconds": 34.876627683639526, "inputs": {"input": {"src": "hda", "id": "b164e7a7029059e8"}, "mode|filter_config|cond_region|regions": "CHROMOSOME_I", "mode|filter_config|cond_region|select_region": "text", "mode|output_options|output_format|oformat": "cram", "mode|outtype": "selected_reads", "addref_cond|ref": {"src": "hda", "id": "c9caeaa1fbb40091"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "199fbddd086eed2b", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:33:38.529865", "update_time": "2025-03-10T08:33:52.406097", "galaxy_version": "24.2", "external_id": "gxy-qghf2", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/3/7/a/dataset_37a659cc-b689-491b-b711-307b6f7f678b.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/0/b/c/dataset_0bc524e0-7232-4950-8d19-97d73d67aaf7.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/0/e/e/metadata_0ee91aae-5c42-407d-83c0-bdf97b0bafe9.dat' infile.bai &&         samtools view -@ $addthreads -C      -o outfile  --output-fmt-option no_ref   -T 'reference.fa' -t 'reference.fa.fai'   infile  'CHROMOSOME_I'", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 1, \"regions\": \"CHROMOSOME_I\", \"select_region\": \"text\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 3, \"oformat\": \"cram\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 659, \"src\": \"hda\"}]}}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "b164e7a7029059e8", "src": "hda", "uuid": "0bc524e0-7232-4950-8d19-97d73d67aaf7"}, "addref_cond|ref": {"id": "c9caeaa1fbb40091", "src": "hda", "uuid": "37a659cc-b689-491b-b711-307b6f7f678b"}}, "outputs": {"outputsam": {"id": "11207713f2c0e32f", "src": "hda", "uuid": "1f14f9af-dfe7-466b-a46a-781e87b94268"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:33:40", "plugin": "core", "name": "start_epoch", "raw_value": "1741595620.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:33:40", "plugin": "core", "name": "end_epoch", "raw_value": "1741595620.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (test.cram) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-18", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 18, "time_seconds": 34.210946798324585, "inputs": {"input": {"src": "hda", "id": "4c97737de4a57596"}, "mode|filter_config|cond_region|regions": "CHROMOSOME_I", "mode|filter_config|cond_region|select_region": "text", "mode|output_options|output_format|oformat": "bam", "mode|outtype": "selected_reads", "addref_cond|ref": {"src": "hda", "id": "82835dbd7bdcdf07"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "b50763ab0512681e", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:34:14.545178", "update_time": "2025-03-10T08:34:26.928653", "galaxy_version": "24.2", "external_id": "gxy-jcd5p", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/4/d/c/dataset_4dc7eb13-e33c-4ee2-822b-bdd3155fd4c9.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/d/a/2/dataset_da2ff1f8-f907-4def-9d79-14db33804066.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/1/7/b/metadata_17bc2b9a-24c2-41a6-a563-4c8c7e46396c.dat' infile.crai &&         samtools view -@ $addthreads -b      -o outfile    -T 'reference.fa' -t 'reference.fa.fai'   infile  'CHROMOSOME_I'  && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 1, \"regions\": \"CHROMOSOME_I\", \"select_region\": \"text\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 662, \"src\": \"hda\"}]}}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"cram\""}, "inputs": {"input": {"id": "4c97737de4a57596", "src": "hda", "uuid": "da2ff1f8-f907-4def-9d79-14db33804066"}, "addref_cond|ref": {"id": "82835dbd7bdcdf07", "src": "hda", "uuid": "4dc7eb13-e33c-4ee2-822b-bdd3155fd4c9"}}, "outputs": {"outputsam": {"id": "51380bf1882ee9aa", "src": "hda", "uuid": "eb272f3a-9c4e-4da7-ba3f-b4a4cc91ccc5"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:34:16", "plugin": "core", "name": "start_epoch", "raw_value": "1741595656.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:34:16", "plugin": "core", "name": "end_epoch", "raw_value": "1741595656.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (test.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-19", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 19, "time_seconds": 38.53844118118286, "inputs": {"input": {"src": "hda", "id": "081090b90c48394f"}, "mode|filter_config|cond_region|bedfile": {"src": "hda", "id": "ae2cf59ca58ef02e"}, "mode|filter_config|cond_region|select_region": "bed", "mode|output_options|output_format|oformat": "bam", "mode|outtype": "selected_reads", "addref_cond|ref": {"src": "hda", "id": "bfb88350820cda2d"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "735d7fdb6383b75b", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:34:52.142776", "update_time": "2025-03-10T08:35:05.574804", "galaxy_version": "24.2", "external_id": "gxy-wgxkp", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/f/7/3/dataset_f73b438e-0cce-4ab7-bf00-49c196462587.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/a/d/6/dataset_ad6b5fe1-e3c8-45fe-9c73-a24a24767791.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/3/3/5/metadata_335cb85e-83b6-435f-8c92-9b477c7617ed.dat' infile.crai &&         samtools view -@ $addthreads -b  -L '/galaxy/server/database/objects/3/c/1/dataset_3c1e67a0-91c7-477f-b0af-85b3b37c5424.dat'    -o outfile    -T 'reference.fa' -t 'reference.fa.fai'   infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 2, \"bedfile\": {\"values\": [{\"id\": 665, \"src\": \"hda\"}]}, \"select_region\": \"bed\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 666, \"src\": \"hda\"}]}}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"cram\""}, "inputs": {"input": {"id": "081090b90c48394f", "src": "hda", "uuid": "ad6b5fe1-e3c8-45fe-9c73-a24a24767791"}, "mode|filter_config|cond_region|bedfile": {"id": "ae2cf59ca58ef02e", "src": "hda", "uuid": "3c1e67a0-91c7-477f-b0af-85b3b37c5424"}, "addref_cond|ref": {"id": "bfb88350820cda2d", "src": "hda", "uuid": "f73b438e-0cce-4ab7-bf00-49c196462587"}}, "outputs": {"outputsam": {"id": "ce2f3606d7351d52", "src": "hda", "uuid": "72db9662-ad22-4d9b-9253-cc0fa0fdfb01"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:34:53", "plugin": "core", "name": "start_epoch", "raw_value": "1741595693.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:34:54", "plugin": "core", "name": "end_epoch", "raw_value": "1741595694.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-2", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 2, "time_seconds": 34.41918110847473, "inputs": {"input": {"src": "hda", "id": "052d7cc66e64c2ad"}, "addref_cond|ref": {"src": "hda", "id": "92a70b839dd24a5b"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "9d8a6e456330f9e7", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:25:18.360840", "update_time": "2025-03-10T08:25:31.778382", "galaxy_version": "24.2", "external_id": "gxy-6btd2", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/2/9/7/dataset_29780d72-7c2f-4306-a566-87a42100e1e0.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/4/b/0/dataset_4b09a7cd-6c9d-4c08-a18e-aa077c90a826.dat' infile &&        samtools view -@ $addthreads -b      -o outfile    -T 'reference.fa' -t 'reference.fa.fai'   infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 627, \"src\": \"hda\"}]}}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/equCab2.len\"", "dbkey": "\"equCab2\"", "__input_ext": "\"sam\""}, "inputs": {"input": {"id": "052d7cc66e64c2ad", "src": "hda", "uuid": "4b09a7cd-6c9d-4c08-a18e-aa077c90a826"}, "addref_cond|ref": {"id": "92a70b839dd24a5b", "src": "hda", "uuid": "29780d72-7c2f-4306-a566-87a42100e1e0"}}, "outputs": {"outputsam": {"id": "ddc3a1f5b890f01a", "src": "hda", "uuid": "fa3a581e-c992-4404-b03b-0f1faa61165b"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:25:20", "plugin": "core", "name": "start_epoch", "raw_value": "1741595120.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:25:20", "plugin": "core", "name": "end_epoch", "raw_value": "1741595120.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (sam_to_bam_out3.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-20", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 20, "time_seconds": 33.92769694328308, "inputs": {"input": {"src": "hda", "id": "b581543fb3d688b9"}, "mode|subsample_config|subsampling_mode|target": "2", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "cc4eb509dffbbf8c", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:35:25.491024", "update_time": "2025-03-10T08:35:39.387742", "galaxy_version": "24.2", "external_id": "gxy-w6p8m", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/6/0/1/dataset_601202b4-8af5-4697-9644-bfaa4a48479c.dat' infile &&         sample_fragment=`samtools view -c  infile  | awk '{s=$1} END {frac=s/2; print(frac > 1 ? 14530+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -h    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"\", \"select_subsample\": \"target\", \"target\": \"2\"}}}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"sam\""}, "inputs": {"input": {"id": "b581543fb3d688b9", "src": "hda", "uuid": "601202b4-8af5-4697-9644-bfaa4a48479c"}}, "outputs": {"outputsam": {"id": "26d3b0869be34f1c", "src": "hda", "uuid": "0fd648c1-18cd-4fb3-806e-f71f17e15275"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:35:27", "plugin": "core", "name": "start_epoch", "raw_value": "1741595727.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:35:27", "plugin": "core", "name": "end_epoch", "raw_value": "1741595727.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (test_ds.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-21", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 21, "time_seconds": 33.37890100479126, "inputs": {"input": {"src": "hda", "id": "474a15d7e72ab554"}, "mode|subsample_config|subsampling_mode|target": "20", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "8705d49a7f54e9ec", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:35:58.885374", "update_time": "2025-03-10T08:36:12.891765", "galaxy_version": "24.2", "external_id": "gxy-jj4zj", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/7/a/4/dataset_7a4ec77f-508a-4f4e-b548-93262c3a2cdb.dat' infile &&         sample_fragment=`samtools view -c  infile  | awk '{s=$1} END {frac=s/20; print(frac > 1 ? 6274+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -h    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"\", \"select_subsample\": \"target\", \"target\": \"20\"}}}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"sam\""}, "inputs": {"input": {"id": "474a15d7e72ab554", "src": "hda", "uuid": "7a4ec77f-508a-4f4e-b548-93262c3a2cdb"}}, "outputs": {"outputsam": {"id": "ba317e901178661e", "src": "hda", "uuid": "c352c06a-072b-435b-801e-00b2073ad0c8"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:36:01", "plugin": "core", "name": "start_epoch", "raw_value": "1741595761.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:36:01", "plugin": "core", "name": "end_epoch", "raw_value": "1741595761.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (test.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-22", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 22, "time_seconds": 32.354114055633545, "inputs": {"input": {"src": "hda", "id": "cb8fa77d028b561c"}, "mode|subsample_config|subsampling_mode|target": "20", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "a9ee34c77a8eb993", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:36:32.625533", "update_time": "2025-03-10T08:36:45.406962", "galaxy_version": "24.2", "external_id": "gxy-j2bmx", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/e/b/4/dataset_eb4797ae-6766-4b88-a125-76c82a5723a4.dat' infile &&         sample_fragment=`samtools view -c  infile  | awk '{s=$1} END {frac=s/20; print(frac > 1 ? 12838+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -h    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"\", \"select_subsample\": \"target\", \"target\": \"20\"}}}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"sam\""}, "inputs": {"input": {"id": "cb8fa77d028b561c", "src": "hda", "uuid": "eb4797ae-6766-4b88-a125-76c82a5723a4"}}, "outputs": {"outputsam": {"id": "12ec5dad2f04ce55", "src": "hda", "uuid": "a2e36bff-f4fa-46b2-b063-7667bfd916a2"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:36:34", "plugin": "core", "name": "start_epoch", "raw_value": "1741595794.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:36:34", "plugin": "core", "name": "end_epoch", "raw_value": "1741595794.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (no_reads.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-23", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 23, "time_seconds": 33.00311017036438, "inputs": {"input": {"src": "hda", "id": "a2971d4041038d87"}, "mode|subsample_config|subsampling_mode|target": "20", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "13f5b984c4fdf1b7", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:37:05.748024", "update_time": "2025-03-10T08:37:18.558040", "galaxy_version": "24.2", "external_id": "gxy-phsmm", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/2/6/3/dataset_263ddd11-6398-461d-89f2-e2c64b9d9469.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/5/2/5/metadata_525de488-25b3-49e5-854a-deacd79ac4cb.dat' infile.bai &&         sample_fragment=`samtools idxstats infile | awk '{s+=$4+$3} END {frac=s/20; print(frac > 1 ? 29851+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -b    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"\", \"select_subsample\": \"target\", \"target\": \"20\"}}}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "a2971d4041038d87", "src": "hda", "uuid": "263ddd11-6398-461d-89f2-e2c64b9d9469"}}, "outputs": {"outputsam": {"id": "a75954175610f601", "src": "hda", "uuid": "44cefe62-bff1-4b87-bdb7-8f0d3247f1be"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:37:07", "plugin": "core", "name": "start_epoch", "raw_value": "1741595827.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:37:07", "plugin": "core", "name": "end_epoch", "raw_value": "1741595827.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (no_reads.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-24", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 24, "time_seconds": 31.686184406280518, "inputs": {"input": {"src": "hda", "id": "efd3feeb90512822"}, "mode|subsample_config|subsampling_mode|target": "2", "mode|subsample_config|subsampling_mode|seed": "7", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "050fd2a64f857257", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:37:36.500112", "update_time": "2025-03-10T08:37:50.323075", "galaxy_version": "24.2", "external_id": "gxy-7khgf", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/7/d/5/dataset_7d56f000-3f8b-4bfa-a355-7e73a98648aa.dat' infile &&         sample_fragment=`samtools view -c  infile  | awk '{s=$1} END {frac=s/2; print(frac > 1 ? 7+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -h    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"7\", \"select_subsample\": \"target\", \"target\": \"2\"}}}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"sam\""}, "inputs": {"input": {"id": "efd3feeb90512822", "src": "hda", "uuid": "7d56f000-3f8b-4bfa-a355-7e73a98648aa"}}, "outputs": {"outputsam": {"id": "ee6dabb959ccb47e", "src": "hda", "uuid": "b760a10d-00d2-4e20-be1b-bd0ee2534213"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:37:38", "plugin": "core", "name": "start_epoch", "raw_value": "1741595858.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:37:38", "plugin": "core", "name": "end_epoch", "raw_value": "1741595858.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (test_ds.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-25", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 25, "time_seconds": 32.6388623714447, "inputs": {"input": {"src": "hda", "id": "70b0c9c27eecd053"}, "mode|subsample_config|subsampling_mode|target": "2", "mode|subsample_config|subsampling_mode|seed": "7", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "4212dc5e66558a0e", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:38:09.909390", "update_time": "2025-03-10T08:38:22.983969", "galaxy_version": "24.2", "external_id": "gxy-pq2tg", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/f/6/6/dataset_f663c39c-9d69-4d1a-a444-9852adb7e20c.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/2/5/c/metadata_25c70be7-2daf-4765-97e5-76dd593000a8.dat' infile.bai &&         sample_fragment=`samtools idxstats infile | awk '{s+=$4+$3} END {frac=s/2; print(frac > 1 ? 7+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -b    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"7\", \"select_subsample\": \"target\", \"target\": \"2\"}}}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "70b0c9c27eecd053", "src": "hda", "uuid": "f663c39c-9d69-4d1a-a444-9852adb7e20c"}}, "outputs": {"outputsam": {"id": "039e1bacfbd0a29a", "src": "hda", "uuid": "6e80897e-bdf7-4f95-a3e9-143c72565b7f"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:38:12", "plugin": "core", "name": "start_epoch", "raw_value": "1741595892.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:38:12", "plugin": "core", "name": "end_epoch", "raw_value": "1741595892.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (test_ds.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-26", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 26, "time_seconds": 33.42004704475403, "inputs": {"input": {"src": "hda", "id": "a0ca36f57f5ced05"}, "mode|subsample_config|subsampling_mode|target": "20", "mode|subsample_config|subsampling_mode|seed": "7", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "8dea48e152e9ce53", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:38:43.362570", "update_time": "2025-03-10T08:38:56.299344", "galaxy_version": "24.2", "external_id": "gxy-t86wj", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/6/e/c/dataset_6ec8d3e6-ad56-4894-be78-40ed5ddfa27b.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/6/3/b/metadata_63bf81d6-322b-4c56-8706-863b59324227.dat' infile.bai &&         sample_fragment=`samtools idxstats infile | awk '{s+=$4+$3} END {frac=s/20; print(frac > 1 ? 7+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -b    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"7\", \"select_subsample\": \"target\", \"target\": \"20\"}}}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "a0ca36f57f5ced05", "src": "hda", "uuid": "6ec8d3e6-ad56-4894-be78-40ed5ddfa27b"}}, "outputs": {"outputsam": {"id": "3f3d69afe0bf2422", "src": "hda", "uuid": "307c17a0-ea56-47f3-a55c-ef765187fa86"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Job Start Time", "value": "2025-03-10 08:38:44", "plugin": "core", "name": "start_epoch", "raw_value": "1741595924.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:38:44", "plugin": "core", "name": "end_epoch", "raw_value": "1741595924.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-27", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 27, "time_seconds": 32.688040256500244, "inputs": {"input": {"src": "hda", "id": "7b809460387c534c"}, "mode|subsample_config|subsampling_mode|factor": "5", "mode|subsample_config|subsampling_mode|seed": "7", "mode|subsample_config|subsampling_mode|select_subsample": "fraction", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "cde8adb82303f23e", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:39:16.129174", "update_time": "2025-03-10T08:39:29.053321", "galaxy_version": "24.2", "external_id": "gxy-kxc5c", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/e/c/d/dataset_ecd93fee-8f72-4d81-a252-4b03f3efee07.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/2/b/6/metadata_2b6caffa-7e98-4688-b634-708485e76de1.dat' infile.bai &&          samtools view -@ $addthreads -b    -s 7.2   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"5.0\", \"seed\": \"7\", \"select_subsample\": \"fraction\"}}}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "7b809460387c534c", "src": "hda", "uuid": "ecd93fee-8f72-4d81-a252-4b03f3efee07"}}, "outputs": {"outputsam": {"id": "dd7540480fb3cf63", "src": "hda", "uuid": "7d9d5f0c-f7b9-4c93-9a62-25c0b05dd4ae"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:39:18", "plugin": "core", "name": "start_epoch", "raw_value": "1741595958.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:39:18", "plugin": "core", "name": "end_epoch", "raw_value": "1741595958.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (test_ds.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-28", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 28, "time_seconds": 33.35704040527344, "inputs": {"input": {"src": "hda", "id": "adc338179f90ce57"}, "mode|subsample_config|subsampling_mode|factor": "1.25", "mode|subsample_config|subsampling_mode|seed": "7", "mode|subsample_config|subsampling_mode|select_subsample": "fraction", "mode|output_options|output_format|oformat": "input", "mode|output_options|reads_report_type": "dropped", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "59723c8f137234f5", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:39:49.261105", "update_time": "2025-03-10T08:40:02.562782", "galaxy_version": "24.2", "external_id": "gxy-9slnv", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/6/1/b/dataset_61bc43aa-bd04-46ad-a91d-85f6010f6908.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/c/4/3/metadata_c4398ef3-b4cb-4483-afac-dd6fad46267c.dat' infile.bai &&          samtools view -@ $addthreads -b    -s 7.8   -U outfile -o /dev/null      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 1, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"dropped\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.25\", \"seed\": \"7\", \"select_subsample\": \"fraction\"}}}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "adc338179f90ce57", "src": "hda", "uuid": "61bc43aa-bd04-46ad-a91d-85f6010f6908"}}, "outputs": {"outputsam": {"id": "0ee9a12c60a7fd7a", "src": "hda", "uuid": "22ef7c18-265f-41f4-8db0-e7944d75c670"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:39:51", "plugin": "core", "name": "start_epoch", "raw_value": "1741595991.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:39:51", "plugin": "core", "name": "end_epoch", "raw_value": "1741595991.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (test_ds.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-3", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 3, "time_seconds": 34.64379358291626, "inputs": {"input": {"src": "hda", "id": "01b1a10ed7711a21"}, "addref_cond|ref": {"src": "hda", "id": "5a1fd3e63f9c46e5"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "ffa473d31315cf0c", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:25:53.831572", "update_time": "2025-03-10T08:26:06.583686", "galaxy_version": "24.2", "external_id": "gxy-qcdw9", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/7/4/0/dataset_740d8107-1997-4f93-943d-5b51c385b753.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/8/5/4/dataset_85446487-83fb-4da5-aeb8-adaa408703f8.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/2/a/7/metadata_2a7b6b4a-2bbb-485a-bff3-b7d21305f9a1.dat' infile.crai &&        samtools view -@ $addthreads -b      -o outfile    -T 'reference.fa' -t 'reference.fa.fai'   infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 630, \"src\": \"hda\"}]}}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"cram\""}, "inputs": {"input": {"id": "01b1a10ed7711a21", "src": "hda", "uuid": "85446487-83fb-4da5-aeb8-adaa408703f8"}, "addref_cond|ref": {"id": "5a1fd3e63f9c46e5", "src": "hda", "uuid": "740d8107-1997-4f93-943d-5b51c385b753"}}, "outputs": {"outputsam": {"id": "05bdbb9f66cac3c2", "src": "hda", "uuid": "a9cc44c5-c4f2-4758-8b81-d426b0b094d6"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:25:55", "plugin": "core", "name": "start_epoch", "raw_value": "1741595155.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:25:55", "plugin": "core", "name": "end_epoch", "raw_value": "1741595155.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (test.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-4", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 4, "time_seconds": 33.1107075214386, "inputs": {"input": {"src": "hda", "id": "d8782cf7eeee66be"}}, "job": {"model_class": "Job", "id": "743d28bb707fa294", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:26:26.548720", "update_time": "2025-03-10T08:26:39.468554", "galaxy_version": "24.2", "external_id": "gxy-5qj8z", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/b/e/6/dataset_be63709f-3e7a-407b-ac65-bf185bbf73bb.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/2/b/9/metadata_2b948f10-2326-4a9f-ac39-34a3f329f087.dat' infile.bai &&        samtools view -@ $addthreads -b      -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "d8782cf7eeee66be", "src": "hda", "uuid": "be63709f-3e7a-407b-ac65-bf185bbf73bb"}}, "outputs": {"outputsam": {"id": "eaf53cd3c6f629fd", "src": "hda", "uuid": "742a967b-d569-4f1e-b7bd-78b5833a9cde"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:26:28", "plugin": "core", "name": "start_epoch", "raw_value": "1741595188.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:26:28", "plugin": "core", "name": "end_epoch", "raw_value": "1741595188.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (1_sort.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-5", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 5, "time_seconds": 32.701666593551636, "inputs": {"input": {"src": "hda", "id": "044ec76118051c0c"}, "mode|output_options|output_format|oformat": "input"}, "job": {"model_class": "Job", "id": "e8dc78db3730d4ff", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:26:59.444275", "update_time": "2025-03-10T08:27:12.388969", "galaxy_version": "24.2", "external_id": "gxy-f6xgm", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/a/b/c/dataset_abcfc48d-e6f2-4263-bc5b-bfc6e971bbcb.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/7/1/0/metadata_7103e497-1a4c-4f48-a95d-f9e2150529fd.dat' infile.bai &&        samtools view -@ $addthreads -b      -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input": {"id": "044ec76118051c0c", "src": "hda", "uuid": "abcfc48d-e6f2-4263-bc5b-bfc6e971bbcb"}}, "outputs": {"outputsam": {"id": "d84865a28b112c43", "src": "hda", "uuid": "aff36b63-3a07-4611-997e-bb83588b0851"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:27:01", "plugin": "core", "name": "start_epoch", "raw_value": "1741595221.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:27:01", "plugin": "core", "name": "end_epoch", "raw_value": "1741595221.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (1_sort.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-6", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 6, "time_seconds": 33.34684491157532, "inputs": {"input": {"src": "hda", "id": "6404476f5f2461e1"}}, "job": {"model_class": "Job", "id": "ef250c32b182a0f3", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:27:32.172985", "update_time": "2025-03-10T08:27:45.878798", "galaxy_version": "24.2", "external_id": "gxy-jrrtl", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/b/7/e/dataset_b7e1edfe-0379-4174-91f4-e2929c3af554.dat' infile &&        samtools view -@ $addthreads -b      -o outfile      infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"qname_sorted.bam\""}, "inputs": {"input": {"id": "6404476f5f2461e1", "src": "hda", "uuid": "b7e1edfe-0379-4174-91f4-e2929c3af554"}}, "outputs": {"outputsam": {"id": "58ddc37ad34e5862", "src": "hda", "uuid": "64214437-00b7-4e83-bc7a-d13f43a3a256"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:27:34", "plugin": "core", "name": "start_epoch", "raw_value": "1741595254.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:27:34", "plugin": "core", "name": "end_epoch", "raw_value": "1741595254.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (1_sort.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-7", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 7, "time_seconds": 34.6418981552124, "inputs": {"input": {"src": "hda", "id": "348d9db58d49388e"}, "mode|output_options|output_format|oformat": "input"}, "job": {"model_class": "Job", "id": "f15bdda2b182311a", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:28:06.525571", "update_time": "2025-03-10T08:28:20.543106", "galaxy_version": "24.2", "external_id": "gxy-x6psq", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/4/c/3/dataset_4c3eb5d0-5fa5-429e-9c16-21cb990c23aa.dat' infile &&        samtools view -@ $addthreads -h      -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"qname_sorted.bam\""}, "inputs": {"input": {"id": "348d9db58d49388e", "src": "hda", "uuid": "4c3eb5d0-5fa5-429e-9c16-21cb990c23aa"}}, "outputs": {"outputsam": {"id": "246bb915372b459d", "src": "hda", "uuid": "d68a1b32-b974-4df6-b4ee-24213a767947"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:28:08", "plugin": "core", "name": "start_epoch", "raw_value": "1741595288.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:28:08", "plugin": "core", "name": "end_epoch", "raw_value": "1741595288.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (1_sort_read_names.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-8", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 8, "time_seconds": 60.598061084747314, "inputs": {"input": {"src": "hda", "id": "0a66809960e95a1a"}}, "job": {"model_class": "Job", "id": "b3d333e49797e016", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:28:40.399086", "update_time": "2025-03-10T08:29:21.306085", "galaxy_version": "24.2", "external_id": "gxy-gpvtl", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/c/0/1/dataset_c016bd2b-d6cb-45c9-a1d9-c1e7d4c653b2.dat' infile &&        samtools view -@ $addthreads -b      -o outfile      infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"unsorted.bam\""}, "inputs": {"input": {"id": "0a66809960e95a1a", "src": "hda", "uuid": "c016bd2b-d6cb-45c9-a1d9-c1e7d4c653b2"}}, "outputs": {"outputsam": {"id": "79093aea8db25b81", "src": "hda", "uuid": "4ea4f169-6125-4318-9c9c-1ae974200151"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:29:09", "plugin": "core", "name": "start_epoch", "raw_value": "1741595349.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:29:09", "plugin": "core", "name": "end_epoch", "raw_value": "1741595349.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (1_sort.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-9", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 9, "time_seconds": 33.69069051742554, "inputs": {"input": {"src": "hda", "id": "5ff83caa93c51624"}, "mode|output_options|output_format|oformat": "input"}, "job": {"model_class": "Job", "id": "325bbc3d320f274c", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:29:41.321804", "update_time": "2025-03-10T08:29:55.040050", "galaxy_version": "24.2", "external_id": "gxy-dnmtz", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/7/0/0/dataset_700967fa-d707-4356-8194-0d9826e258a8.dat' infile &&        samtools view -@ $addthreads -h      -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"unsorted.bam\""}, "inputs": {"input": {"id": "5ff83caa93c51624", "src": "hda", "uuid": "700967fa-d707-4356-8194-0d9826e258a8"}}, "outputs": {"outputsam": {"id": "16d0968ef5a7ade8", "src": "hda", "uuid": "af30d8e7-dd65-440a-a205-6f6459581a33"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8dd8177cf5b9476288c149088f4340b576b866e3:e3f57919aec2b96cba49c23b81609837e1db9c33-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:29:43", "plugin": "core", "name": "start_epoch", "raw_value": "1741595383.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:29:43", "plugin": "core", "name": "end_epoch", "raw_value": "1741595383.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "output_problems": ["Output outputsam: Test output file (1_sort_read_names.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "scanpy_plot_embed/1.9.3+galaxy0-0", "has_data": true, "data": {"tool_id": "scanpy_plot_embed", "tool_version": "1.9.3+galaxy0", "test_index": 0, "time_seconds": 0.13216924667358398, "execution_problem": "Input staging problem: Traceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 1434, in verify_tool\n    stage_data_in_history(\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 163, in stage_data_in_history\n    test_dict = galaxy_interactor.remote_to_input(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 582, in remote_to_input\n    path_or_location = self._get_path_or_location(\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 619, in _get_path_or_location\n    path = self.test_data_download(\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 525, in test_data_download\n    raise AssertionError(f\"Test input file ({filename}) cannot be found.\")\nAssertionError: Test input file (find_cluster.h5) cannot be found.\n", "status": "error"}}, {"id": "scanpy_plot_embed/1.9.3+galaxy0-0", "has_data": true, "data": {"tool_id": "scanpy_plot_embed", "tool_version": "1.9.3+galaxy0", "test_index": 0, "time_seconds": 0.13176560401916504, "execution_problem": "Input staging problem: Traceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 1434, in verify_tool\n    stage_data_in_history(\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 163, in stage_data_in_history\n    test_dict = galaxy_interactor.remote_to_input(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 582, in remote_to_input\n    path_or_location = self._get_path_or_location(\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 619, in _get_path_or_location\n    path = self.test_data_download(\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 525, in test_data_download\n    raise AssertionError(f\"Test input file ({filename}) cannot be found.\")\nAssertionError: Test input file (find_cluster.h5) cannot be found.\n", "status": "error"}}, {"id": "scater_normalize/1.12.2-0", "has_data": true, "data": {"tool_id": "scater_normalize", "tool_version": "1.12.2", "test_index": 0, "time_seconds": 74.51270818710327, "inputs": {"input_loom": {"src": "hda", "id": "f6e64cf71027b410"}}, "job": {"model_class": "Job", "id": "4382030d8fd64908", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_normalize/scater_normalize/1.12.2", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:41:06.318956", "update_time": "2025-03-10T08:42:00.507968", "galaxy_version": "24.2", "external_id": "gxy-72w5d", "handler": null, "job_runner_name": null, "command_line": "Rscript '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_normalize/946179ef029c/scater_normalize/scater-normalize.R' -i '/galaxy/server/database/objects/6/4/7/dataset_647767ba-5310-4aaf-aa6a-d11b457ab010.dat' -o '/galaxy/server/database/jobs_directory/000/502/outputs/dataset_2620d9ee-5ac4-4df0-be92-48cd783893f2.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"loom\""}, "inputs": {"input_loom": {"id": "f6e64cf71027b410", "src": "hda", "uuid": "647767ba-5310-4aaf-aa6a-d11b457ab010"}}, "outputs": {"output_loom": {"id": "a2130211fd861f0d", "src": "hda", "uuid": "2620d9ee-5ac4-4df0-be92-48cd783893f2"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "[1] \"Normalising....\"\n[1] \"Finished normalising\"\n[1] TRUE\n", "tool_stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: 'BiocGenerics'\n\nThe following objects are masked from 'package:parallel':\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from 'package:base':\n\n    Filter, Find, Map, Position, Reduce, anyDuplicated, append,\n    as.data.frame, basename, cbind, colnames, dirname, do.call,\n    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,\n    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,\n    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,\n    tapply, union, unique, unsplit, which, which.max, which.min\n\n\nAttaching package: 'S4Vectors'\n\nThe following object is masked from 'package:base':\n\n    expand.grid\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\nLoading required package: DelayedArray\nLoading required package: matrixStats\n\nAttaching package: 'matrixStats'\n\nThe following objects are masked from 'package:Biobase':\n\n    anyMissing, rowMedians\n\nLoading required package: BiocParallel\n\nAttaching package: 'DelayedArray'\n\nThe following objects are masked from 'package:matrixStats':\n\n    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges\n\nThe following objects are masked from 'package:base':\n\n    aperm, apply, rowsum\n\nLoading required package: rhdf5\nLoading required package: rtracklayer\nLoading required package: ggplot2\n\nAttaching package: 'scater'\n\nThe following object is masked from 'package:S4Vectors':\n\n    rename\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nWarning message:\nIn .local(object, ...) : using library sizes as size factors\n", "job_stdout": "", "job_stderr": "", "stdout": "[1] \"Normalising....\"\n[1] \"Finished normalising\"\n[1] TRUE\n", "stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: 'BiocGenerics'\n\nThe following objects are masked from 'package:parallel':\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from 'package:base':\n\n    Filter, Find, Map, Position, Reduce, anyDuplicated, append,\n    as.data.frame, basename, cbind, colnames, dirname, do.call,\n    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,\n    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,\n    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,\n    tapply, union, unique, unsplit, which, which.max, which.min\n\n\nAttaching package: 'S4Vectors'\n\nThe following object is masked from 'package:base':\n\n    expand.grid\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\nLoading required package: DelayedArray\nLoading required package: matrixStats\n\nAttaching package: 'matrixStats'\n\nThe following objects are masked from 'package:Biobase':\n\n    anyMissing, rowMedians\n\nLoading required package: BiocParallel\n\nAttaching package: 'DelayedArray'\n\nThe following objects are masked from 'package:matrixStats':\n\n    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges\n\nThe following objects are masked from 'package:base':\n\n    aperm, apply, rowsum\n\nLoading required package: rhdf5\nLoading required package: rtracklayer\nLoading required package: ggplot2\n\nAttaching package: 'scater'\n\nThe following object is masked from 'package:S4Vectors':\n\n    rename\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nWarning message:\nIn .local(object, ...) : using library sizes as size factors\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-8e60309dbdc217d86bba918def11fe36aadeee7f:6d36aa2c6c7315258bee3f7ccccfff5b06ac7c89-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-8e60309dbdc217d86bba918def11fe36aadeee7f:6d36aa2c6c7315258bee3f7ccccfff5b06ac7c89-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:41:33", "plugin": "core", "name": "start_epoch", "raw_value": "1741596093.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:41:43", "plugin": "core", "name": "end_epoch", "raw_value": "1741596103.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "10 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "10.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-0", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 0, "time_seconds": 235.10352897644043, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "4b1a7d772b7e4a7a"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "a3ab508ddf404029"}, "paired_unpaired|fastq_input_selector": "paired", "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2", "keep": "0"}, "job": {"model_class": "Job", "id": "489ddfccbe78c00d", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:27:26.080922", "update_time": "2025-03-10T06:30:55.561247", "galaxy_version": "24.2", "external_id": "gxy-wbvvs", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/2/c/5/dataset_2c5af7bc-bcb4-470d-b9c2-41e796b2b71e.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/0/e/2/dataset_0e2e0f98-ad7e-4a5f-afc3-bfa33c9dbac7.dat' fq2.fastq && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 1, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 2, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}", "long": null, "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "keep": "\"0\"", "reuse": "[]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"paired_unpaired|fastq_input1": {"id": "4b1a7d772b7e4a7a", "src": "hda", "uuid": "2c5af7bc-bcb4-470d-b9c2-41e796b2b71e"}, "paired_unpaired|fastq_input2": {"id": "a3ab508ddf404029", "src": "hda", "uuid": "0e2e0f98-ad7e-4a5f-afc3-bfa33c9dbac7"}}, "outputs": {"assembly_graph": {"id": "489ddfccbe78c00d", "src": "hda", "uuid": "b198c963-c81c-46ea-9a14-c2c108e39005"}, "assembly": {"id": "e65203828bd48c5f", "src": "hda", "uuid": "92d40b81-cc53-4dc8-bda8-8884cf4948d8"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "\nStarting Unicycler (2025-03-10 06:28:11)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/3/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2025-03-10 06:28:11)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2025-03-10 06:28:11)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/3/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/3/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/3/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/3/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/3/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/3/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.6.56+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/3/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/3/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/3/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/3/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.065    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.068    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.078    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.079    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.085    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.119     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.140     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.140     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.140     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.140     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.141     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.142     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.142     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.021     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:01.024     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.316     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.316     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.379     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.380     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.381     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.381     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.381     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:02.219  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:02.219  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:02.220     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.521     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.521     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.582     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.582     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.797     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.810     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.832     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.836     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.839     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.841     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.846     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.846     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.846     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.846     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.846     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.848     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.848     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.849     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.849     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.849     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.849     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.851     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.851     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.886     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.886     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.951     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.953     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:03.032     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:03.032     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:03.033     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:03.033     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:03.033     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:03.130     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:03.421     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.949     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:04.416     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:05.210     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:05.210     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.211     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:05.211     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:05.211     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:05.211     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.211     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:05.211     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:05.211     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:05.211     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Closer (id: early_gapc\n..\n        : 292)   SPAdes finished\n  0:00:05.324     1M / 159M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 5 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2025-03-10 06:30:34)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/\n\n\nDetermining graph multiplicity (2025-03-10 06:30:34)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2025-03-10 06:30:34)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2025-03-10 06:30:34)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2025-03-10 06:30:34)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2025-03-10 06:30:34)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2025-03-10 06:30:34)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2025-03-10 06:30:34)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2025-03-10 06:30:34)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2025-03-10 06:30:43)\nSaving /galaxy/server/database/jobs_directory/000/3/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/3/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2025-03-10 06:28:11)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/3/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2025-03-10 06:28:11)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2025-03-10 06:28:11)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/3/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/3/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/3/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/3/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/3/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/3/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.6.56+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/3/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/3/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/3/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/3/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.065    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.068    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.078    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.079    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.085    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.119     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.140     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.140     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.140     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.140     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.141     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.142     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.142     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.021     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:01.024     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.316     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.316     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.379     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.380     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.381     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.381     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.381     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:02.219  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:02.219  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:02.220     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.521     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.521     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.582     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.582     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.797     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.810     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.832     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.836     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.839     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.841     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.846     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.846     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.846     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.846     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.846     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.848     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.848     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.849     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.849     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.849     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.849     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.851     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.851     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.886     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.886     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.951     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.953     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:03.032     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:03.032     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:03.033     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:03.033     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:03.033     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:03.130     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:03.421     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.949     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:04.416     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:05.210     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:05.210     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.211     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:05.211     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:05.211     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:05.211     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.211     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:05.211     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:05.211     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:05.211     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Closer (id: early_gapc\n..\n        : 292)   SPAdes finished\n  0:00:05.324     1M / 159M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 5 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2025-03-10 06:30:34)\nFilter by read depth        (2025-03-10 06:30:34)\nFilter homopolymer loops    (2025-03-10 06:30:34)\nMerge all possible          (2025-03-10 06:30:34)\nNormalise read depths       (2025-03-10 06:30:34)\nRemove zero length segments (2025-03-10 06:30:34)\nSort link order             (2025-03-10 06:30:34)\nGraph cleaning finished     (2025-03-10 06:30:34)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2025-03-10 06:30:34)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/\n\n\nDetermining graph multiplicity (2025-03-10 06:30:34)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2025-03-10 06:30:34)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2025-03-10 06:30:34)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2025-03-10 06:30:34)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2025-03-10 06:30:34)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2025-03-10 06:30:34)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2025-03-10 06:30:34)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2025-03-10 06:30:34)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2025-03-10 06:30:43)\nSaving /galaxy/server/database/jobs_directory/000/3/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/3/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:28:11", "plugin": "core", "name": "start_epoch", "raw_value": "1741588091.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:30:43", "plugin": "core", "name": "end_epoch", "raw_value": "1741588243.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "152.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-1", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 1, "time_seconds": 196.23567295074463, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "000606222d0b11b4"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "e0c42f7948734cb5"}, "paired_unpaired|fastq_input_selector": "paired", "long": {"src": "hda", "id": "ef5de0d98731a9f6"}, "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2", "keep": "0"}, "job": {"model_class": "Job", "id": "ef5de0d98731a9f6", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:31:24.526587", "update_time": "2025-03-10T06:34:11.763252", "galaxy_version": "24.2", "external_id": "gxy-r4dwc", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/d/e/d/dataset_ded25e9d-92c1-4e5c-baa9-60d55177ae2e.dat' fq1.fastq.gz && ln -s '/galaxy/server/database/objects/f/b/b/dataset_fbbe5192-750c-476b-adac-e8673fcc0945.dat' fq2.fastq.gz && ln -s '/galaxy/server/database/objects/3/4/4/dataset_3442986c-fc4c-4fd9-8baa-cfcb273256ae.dat' 'lr.fasta' && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq.gz' -2 'fq2.fastq.gz' -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 5, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 6, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}", "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "keep": "\"0\"", "reuse": "[]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"paired_unpaired|fastq_input1": {"id": "000606222d0b11b4", "src": "hda", "uuid": "ded25e9d-92c1-4e5c-baa9-60d55177ae2e"}, "paired_unpaired|fastq_input2": {"id": "e0c42f7948734cb5", "src": "hda", "uuid": "fbbe5192-750c-476b-adac-e8673fcc0945"}, "long": {"id": "ef5de0d98731a9f6", "src": "hda", "uuid": "3442986c-fc4c-4fd9-8baa-cfcb273256ae"}}, "outputs": {"assembly_graph": {"id": "dd2eff21a14f4761", "src": "hda", "uuid": "5d97debc-003e-484e-9a87-e4265cb7f686"}, "assembly": {"id": "c73c9c43b0e0aaa0", "src": "hda", "uuid": "23146c5c-f0ab-4f22-9d78-944bdbf215d1"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "\nStarting Unicycler (2025-03-10 06:31:26)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq.gz -2 fq2.fastq.gz -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/7/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2025-03-10 06:31:27)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2025-03-10 06:31:27)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.6.56+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz']\n      right reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz: max reads length: 251\n/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.073    82M / 82M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.076    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.087    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.088    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.095    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.132     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.152     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.152     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.152     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.152     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.154     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.154     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.154     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.132     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:01.134     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.460     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.461     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.526     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.526     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.527     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.527     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.527     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:02.412  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:02.412  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:02.413     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.692     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.692     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.760     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.760     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.991     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:03.004     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.030     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:03.035     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:03.037     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:03.039     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:03.044     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.044     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:03.044     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:03.044     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:03.044     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:03.046     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:03.046     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:03.046     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:03.046     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:03.046     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:03.046     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:03.048     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:03.048     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:03.082     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:03.083     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.146     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:03.147     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:03.236     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:03.236     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:03.236     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:03.236     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:03.236     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:03.335     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:03.629     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:04.145     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:04.613     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:05.413     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:05.413     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.414     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:05.414     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:05.414     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:05.414     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.415     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:05.415     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:05.415     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:05.415     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Clos\n..\n33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2025-03-10 06:33:50)\nFilter by read depth        (2025-03-10 06:33:50)\nFilter homopolymer loops    (2025-03-10 06:33:50)\nMerge all possible          (2025-03-10 06:33:50)\nNormalise read depths       (2025-03-10 06:33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2025-03-10 06:33:50)\nFilter by read depth        (2025-03-10 06:33:50)\nFilter homopolymer loops    (2025-03-10 06:33:50)\nMerge all possible          (2025-03-10 06:33:50)\nNormalise read depths       (2025-03-10 06:33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2025-03-10 06:33:50)\nFilter by read depth        (2025-03-10 06:33:50)\nFilter homopolymer loops    (2025-03-10 06:33:50)\nMerge all possible          (2025-03-10 06:33:50)\nNormalise read depths       (2025-03-10 06:33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2025-03-10 06:33:50)\nFilter by read depth        (2025-03-10 06:33:50)\nFilter homopolymer loops    (2025-03-10 06:33:50)\nMerge all possible          (2025-03-10 06:33:50)\nNormalise read depths       (2025-03-10 06:33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2025-03-10 06:33:50)\nFilter by read depth        (2025-03-10 06:33:50)\nFilter homopolymer loops    (2025-03-10 06:33:50)\nMerge all possible          (2025-03-10 06:33:50)\nNormalise read depths       (2025-03-10 06:33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2025-03-10 06:33:50)\nFilter by read depth        (2025-03-10 06:33:50)\nFilter homopolymer loops    (2025-03-10 06:33:50)\nMerge all possible          (2025-03-10 06:33:50)\nNormalise read depths       (2025-03-10 06:33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2025-03-10 06:33:50)\nFilter by read depth        (2025-03-10 06:33:50)\nFilter homopolymer loops    (2025-03-10 06:33:50)\nMerge all possible          (2025-03-10 06:33:50)\nNormalise read depths       (2025-03-10 06:33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2025-03-10 06:33:50)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/\n\n\nDetermining graph multiplicity (2025-03-10 06:33:50)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2025-03-10 06:33:50)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2025-03-10 06:33:50)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2025-03-10 06:33:50)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2025-03-10 06:33:50)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2025-03-10 06:33:50)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2025-03-10 06:33:50)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2025-03-10 06:33:50)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2025-03-10 06:33:50)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2025-03-10 06:33:50)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.056 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2025-03-10 06:33:50)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/7/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2025-03-10 06:33:50)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2025-03-10 06:33:50)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2025-03-10 06:33:50)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2025-03-10 06:33:50)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2025-03-10 06:33:50)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2025-03-10 06:33:59)\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2025-03-10 06:31:26)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq.gz -2 fq2.fastq.gz -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/7/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2025-03-10 06:31:27)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2025-03-10 06:31:27)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.6.56+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz']\n      right reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz: max reads length: 251\n/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.073    82M / 82M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.076    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.087    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.088    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.095    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.132     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.152     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.152     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.152     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.152     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.154     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.154     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.154     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.132     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:01.134     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.460     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.461     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.526     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.526     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.527     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.527     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.527     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:02.412  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:02.412  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:02.413     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.692     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.692     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.760     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.760     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.991     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:03.004     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.030     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:03.035     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:03.037     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:03.039     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:03.044     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.044     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:03.044     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:03.044     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:03.044     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:03.046     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:03.046     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:03.046     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:03.046     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:03.046     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:03.046     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:03.048     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:03.048     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:03.082     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:03.083     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.146     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:03.147     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:03.236     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:03.236     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:03.236     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:03.236     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:03.236     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:03.335     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:03.629     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:04.145     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:04.613     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:05.413     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:05.413     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.414     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:05.414     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:05.414     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:05.414     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.415     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:05.415     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:05.415     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:05.415     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Clos\n..\n33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2025-03-10 06:33:50)\nFilter by read depth        (2025-03-10 06:33:50)\nFilter homopolymer loops    (2025-03-10 06:33:50)\nMerge all possible          (2025-03-10 06:33:50)\nNormalise read depths       (2025-03-10 06:33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2025-03-10 06:33:50)\nFilter by read depth        (2025-03-10 06:33:50)\nFilter homopolymer loops    (2025-03-10 06:33:50)\nMerge all possible          (2025-03-10 06:33:50)\nNormalise read depths       (2025-03-10 06:33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2025-03-10 06:33:50)\nFilter by read depth        (2025-03-10 06:33:50)\nFilter homopolymer loops    (2025-03-10 06:33:50)\nMerge all possible          (2025-03-10 06:33:50)\nNormalise read depths       (2025-03-10 06:33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2025-03-10 06:33:50)\nFilter by read depth        (2025-03-10 06:33:50)\nFilter homopolymer loops    (2025-03-10 06:33:50)\nMerge all possible          (2025-03-10 06:33:50)\nNormalise read depths       (2025-03-10 06:33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2025-03-10 06:33:50)\nFilter by read depth        (2025-03-10 06:33:50)\nFilter homopolymer loops    (2025-03-10 06:33:50)\nMerge all possible          (2025-03-10 06:33:50)\nNormalise read depths       (2025-03-10 06:33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2025-03-10 06:33:50)\nFilter by read depth        (2025-03-10 06:33:50)\nFilter homopolymer loops    (2025-03-10 06:33:50)\nMerge all possible          (2025-03-10 06:33:50)\nNormalise read depths       (2025-03-10 06:33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2025-03-10 06:33:50)\nFilter by read depth        (2025-03-10 06:33:50)\nFilter homopolymer loops    (2025-03-10 06:33:50)\nMerge all possible          (2025-03-10 06:33:50)\nNormalise read depths       (2025-03-10 06:33:50)\nRemove zero length segments (2025-03-10 06:33:50)\nSort link order             (2025-03-10 06:33:50)\nGraph cleaning finished     (2025-03-10 06:33:50)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2025-03-10 06:33:50)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/\n\n\nDetermining graph multiplicity (2025-03-10 06:33:50)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2025-03-10 06:33:50)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2025-03-10 06:33:50)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2025-03-10 06:33:50)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2025-03-10 06:33:50)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2025-03-10 06:33:50)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2025-03-10 06:33:50)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2025-03-10 06:33:50)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2025-03-10 06:33:50)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2025-03-10 06:33:50)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.056 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2025-03-10 06:33:50)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/7/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2025-03-10 06:33:50)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2025-03-10 06:33:50)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2025-03-10 06:33:50)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2025-03-10 06:33:50)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2025-03-10 06:33:50)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2025-03-10 06:33:59)\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:31:26", "plugin": "core", "name": "start_epoch", "raw_value": "1741588286.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:33:59", "plugin": "core", "name": "end_epoch", "raw_value": "1741588439.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "153.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-2", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 2, "time_seconds": 186.49511194229126, "inputs": {"paired_unpaired|fastq_input1": {"src": "hdca", "id": "4b1a7d772b7e4a7a"}, "paired_unpaired|fastq_input_selector": "paired_collection", "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2", "keep": "0"}, "job": {"model_class": "Job", "id": "4a764beaf96fb32f", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:34:35.947374", "update_time": "2025-03-10T06:37:18.329492", "galaxy_version": "24.2", "external_id": "gxy-k7pbz", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/6/d/2/dataset_6d2fab6f-2673-44c9-a3bd-45e3f7c5bf92.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/0/8/6/dataset_086cef1c-89ba-4e66-928c-3e1265279326.dat' fq2.fastq && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"paired_unpaired": "{\"__current_case__\": 1, \"fastq_input1\": {\"values\": [{\"id\": 1, \"src\": \"hdca\"}]}, \"fastq_input_selector\": \"paired_collection\"}", "long": null, "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "keep": "\"0\"", "reuse": "[]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"paired_unpaired|fastq_input11": {"id": "4a764beaf96fb32f", "src": "hda", "uuid": "6d2fab6f-2673-44c9-a3bd-45e3f7c5bf92"}, "paired_unpaired|fastq_input12": {"id": "6b0417b856053a99", "src": "hda", "uuid": "086cef1c-89ba-4e66-928c-3e1265279326"}}, "outputs": {"assembly_graph": {"id": "ff54edac015b108f", "src": "hda", "uuid": "577f01cd-4531-4af7-bd4f-b94166ef58af"}, "assembly": {"id": "eec5d6b98bddec5f", "src": "hda", "uuid": "34fb148a-4d18-436e-819b-71d4a0d063b0"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "\nStarting Unicycler (2025-03-10 06:34:38)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/10/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2025-03-10 06:34:39)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2025-03-10 06:34:39)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.6.56+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.000     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.066    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.069    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.080    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.081    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.089    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.126     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.145     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.145     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.145     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.145     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.147     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.147     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.147     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.062     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:01.064     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.352     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.353     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.434     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.434     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.435     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.435     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.435     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:02.449  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:02.450  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:02.450     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.795     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.795     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.859     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.859     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:03.234     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:03.254     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.301     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:03.308     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:03.312     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:03.314     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:03.321     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.322     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:03.322     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:03.322     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:03.322     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:03.323     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:03.324     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:03.324     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:03.324     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:03.324     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:03.324     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:03.326     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:03.326     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:03.376     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:03.377     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.454     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:03.456     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:03.585     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:03.585     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:03.585     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:03.585     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:03.585     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:03.687     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:04.001     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:04.535     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:05.038     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:05.844     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:05.844     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.845     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:05.845     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:05.845     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:05.845     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.845     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:05.846     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:05.846     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:05.846     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Clo\n..\n / 158M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2025-03-10 06:36:57)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/\n\n\nDetermining graph multiplicity (2025-03-10 06:36:57)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2025-03-10 06:36:57)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2025-03-10 06:36:57)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2025-03-10 06:36:57)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2025-03-10 06:36:57)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2025-03-10 06:36:57)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2025-03-10 06:36:57)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2025-03-10 06:36:57)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2025-03-10 06:37:06)\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2025-03-10 06:34:38)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/10/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2025-03-10 06:34:39)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2025-03-10 06:34:39)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.6.56+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.000     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.066    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.069    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.080    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.081    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.089    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.126     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.145     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.145     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.145     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.145     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.147     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.147     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.147     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.062     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:01.064     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.352     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.353     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.434     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.434     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.435     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.435     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.435     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:02.449  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:02.450  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:02.450     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.795     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.795     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.859     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.859     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:03.234     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:03.254     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.301     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:03.308     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:03.312     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:03.314     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:03.321     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.322     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:03.322     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:03.322     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:03.322     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:03.323     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:03.324     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:03.324     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:03.324     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:03.324     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:03.324     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:03.326     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:03.326     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:03.376     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:03.377     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.454     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:03.456     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:03.585     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:03.585     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:03.585     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:03.585     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:03.585     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:03.687     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:04.001     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:04.535     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:05.038     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:05.844     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:05.844     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.845     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:05.845     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:05.845     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:05.845     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.845     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:05.846     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:05.846     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:05.846     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Clo\n..\n / 158M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2025-03-10 06:36:57)\nFilter by read depth        (2025-03-10 06:36:57)\nFilter homopolymer loops    (2025-03-10 06:36:57)\nMerge all possible          (2025-03-10 06:36:57)\nNormalise read depths       (2025-03-10 06:36:57)\nRemove zero length segments (2025-03-10 06:36:57)\nSort link order             (2025-03-10 06:36:57)\nGraph cleaning finished     (2025-03-10 06:36:57)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2025-03-10 06:36:57)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/\n\n\nDetermining graph multiplicity (2025-03-10 06:36:57)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2025-03-10 06:36:57)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2025-03-10 06:36:57)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2025-03-10 06:36:57)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2025-03-10 06:36:57)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2025-03-10 06:36:57)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2025-03-10 06:36:57)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2025-03-10 06:36:57)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2025-03-10 06:37:06)\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:34:38", "plugin": "core", "name": "start_epoch", "raw_value": "1741588478.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:37:06", "plugin": "core", "name": "end_epoch", "raw_value": "1741588626.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "148.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-3", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 3, "time_seconds": 35.790552377700806, "inputs": {"paired_unpaired|fastq_input_selector": "none", "long": {"src": "hda", "id": "033b4a3f9c56efe5"}, "min_anchor_seg_len": "10", "spades|kmers": "21,23", "keep": "0"}, "job": {"model_class": "Job", "id": "ff54edac015b108f", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:37:40.019460", "update_time": "2025-03-10T06:37:54.226045", "galaxy_version": "24.2", "external_id": "gxy-vk8vs", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/f/f/1/dataset_ff1fedbd-0efc-49cb-8a92-c81e5b06308a.dat' 'lr.fasta' && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_anchor_seg_len '10' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmers '21,23' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"paired_unpaired": "{\"__current_case__\": 3, \"fastq_input_selector\": \"none\"}", "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"10\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"21,23\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "keep": "\"0\"", "reuse": "[]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"long": {"id": "033b4a3f9c56efe5", "src": "hda", "uuid": "ff1fedbd-0efc-49cb-8a92-c81e5b06308a"}}, "outputs": {"assembly_graph": {"id": "d8650d63f0929c8d", "src": "hda", "uuid": "cab68e0b-0f99-4b84-a4b3-9abfa4053fce"}, "assembly": {"id": "a97da8298d05a6eb", "src": "hda", "uuid": "0633c6d8-3e78-4b54-83a4-f3c7c7f41270"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "\nStarting Unicycler (2025-03-10 06:37:41)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only long reads, Unicycler will assemble the reads with miniasm and\nthen run repeated polishing rounds using Racon.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_anchor_seg_len 10 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmers 21,23 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/12/working\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py               not used                             \n  racon         1.5.0     good       /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nLoading reads (2025-03-10 06:37:42)\n\r0 / 40 (0.0%)\r1 / 40 (2.5%) - 412 bp\r2 / 40 (5.0%) - 4,847 bp\r3 / 40 (7.5%) - 8,974 bp\r4 / 40 (10.0%) - 13,249 bp\r5 / 40 (12.5%) - 14,258 bp\r6 / 40 (15.0%) - 14,806 bp\r7 / 40 (17.5%) - 19,262 bp\r8 / 40 (20.0%) - 19,737 bp\r9 / 40 (22.5%) - 20,395 bp\r10 / 40 (25.0%) - 32,024 bp\r11 / 40 (27.5%) - 32,698 bp\r12 / 40 (30.0%) - 34,509 bp\r13 / 40 (32.5%) - 39,018 bp\r14 / 40 (35.0%) - 43,351 bp\r15 / 40 (37.5%) - 44,224 bp\r16 / 40 (40.0%) - 45,978 bp\r17 / 40 (42.5%) - 46,402 bp\r18 / 40 (45.0%) - 61,596 bp\r19 / 40 (47.5%) - 62,279 bp\r20 / 40 (50.0%) - 63,700 bp\r21 / 40 (52.5%) - 66,412 bp\r22 / 40 (55.0%) - 66,845 bp\r23 / 40 (57.5%) - 67,316 bp\r24 / 40 (60.0%) - 69,428 bp\r25 / 40 (62.5%) - 73,964 bp\r26 / 40 (65.0%) - 75,608 bp\r27 / 40 (67.5%) - 80,223 bp\r28 / 40 (70.0%) - 84,810 bp\r29 / 40 (72.5%) - 92,076 bp\r30 / 40 (75.0%) - 92,832 bp\r31 / 40 (77.5%) - 92,939 bp\r32 / 40 (80.0%) - 93,532 bp\r33 / 40 (82.5%) - 96,370 bp\r34 / 40 (85.0%) - 100,656 bp\r35 / 40 (87.5%) - 119,222 bp\r36 / 40 (90.0%) - 123,827 bp\r37 / 40 (92.5%) - 155,106 bp\r38 / 40 (95.0%) - 156,254 bp\r39 / 40 (97.5%) - 157,993 bp\r40 / 40 (100.0%) - 162,406 bp\r40 / 40 (100.0%) - 162,406 bp\n\n\nAssembling contigs and long reads with miniasm (2025-03-10 06:37:42)\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/01_assembly_reads.fastq:\n  40 long reads\n\nFinding overlaps with minimap... success\n  120 overlaps\n\nAssembling reads with miniasm... success\n  7 segments, 6 links\n\n    Unicycler removes any links from the string graph which create branches.\nI.e. if any segment has two or more links connected to one end, those links are\nremoved. This will result in a graph with only simple linear paths that is\nsuitable for creating unambiguous bridges.\n\nNo links needed removal\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/11_branching_paths_removed.gfa\nMerging segments into unitigs:\n\nLinear unitig: 3708:125-4288- -> f49b:293-4469+ -> 9e6d:143-4411- -> 9780:142-4271- -> a53e:333-4400+ -> b949:140-4359- -> 054c:932-4389-\n\n  1 linear unitig\n  total size = 5,836 bp\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/12_unitig_graph.gfa\n\n\nPolishing miniasm assembly with Racon (2025-03-10 06:37:42)\n    Unicycler now uses Racon to polish the miniasm assembly. It does multiple\nrounds of polishing to get the best consensus. Circular unitigs are rotated\nbetween rounds such that all parts (including the ends) are polished well.\n\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/polishing_reads.fastq:\n  40 long reads\n\nPolish       Assembly          Mapping\nround            size          quality\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t210\t4010\t+\t1\t5836\t1061\t4603\t1147\t3800\t255\tcm:i:200\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t5836\t5221\t5833\t179\t612\t255\tcm:i:27\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t5836\t2376\t5833\t3457\t3457\t255\tcm:i:1153\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2525\t-\t1\t5836\t30\t2314\t787\t2399\t255\tcm:i:144\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t280\t4284\t-\t1\t5836\t4\t3936\t1481\t4004\t255\tcm:i:246\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4286\t-\t1\t5836\t4215\t5833\t546\t1618\t255\tcm:i:88\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t170\t4027\t+\t1\t5836\t1680\t5833\t1032\t4153\t255\tcm:i:174\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4082\t+\t1\t5836\t4\t1602\t220\t1598\t255\tcm:i:30\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1334\t4566\t-\t1\t5836\t2699\t5786\t1281\t3232\t255\tcm:i:243\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t5836\t50\t2663\t772\t2680\t255\tcm:i:129\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t5836\t2657\t5833\t1469\t3386\t255\tcm:i:268\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2786\t-\t1\t5836\t30\t2636\t905\t2689\t255\tcm:i:157\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t143\t4271\t-\t1\t5836\t338\t4254\t1834\t4128\t255\tcm:i:470\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3092\t4330\t-\t1\t5836\t4503\t5798\t430\t1295\t255\tcm:i:77\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t544\t4408\t-\t1\t5836\t69\t3927\t1208\t3864\t255\tcm:i:237\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3008\t4472\t-\t1\t5836\t4215\t5748\t351\t1533\t255\tcm:i:53\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t5836\t2909\t3222\t131\t313\t255\tcm:i:22\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t335\t4397\t+\t1\t5836\t1321\t5257\t1351\t4062\t255\tcm:i:280\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4349\t+\t1\t5836\t23\t961\t238\t938\t255\tcm:i:40\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t537\t+\t1\t5836\t5334\t5798\t154\t464\t255\tcm:i:26\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t111\t4359\t-\t1\t5836\t1673\t5798\t2062\t4248\t255\tcm:i:487\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t109\t1619\t-\t1\t5836\t30\t1525\t472\t1510\t255\tcm:i:68\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t5836\t1733\t5833\t1303\t4100\t255\tcm:i:230\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t5836\t4\t1690\t311\t1712\t255\tcm:i:43\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4205\t+\t1\t5836\t23\t3939\t1039\t3916\t255\tcm:i:166\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t296\t1782\t+\t1\t5836\t4242\t5798\t367\t1556\t255\tcm:i:63\nbegin           5,836             5.33\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6290\t1009\t5054\t2431\t4045\t255\tcm:i:529\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6290\t5670\t6287\t297\t617\t255\tcm:i:63\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6290\t4\t404\t122\t400\t255\tcm:i:19\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6290\t2540\t6287\t2249\t3747\t255\tcm:i:527\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6290\t51\t2474\t1276\t2423\t255\tcm:i:245\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6290\t4\t4316\t2322\t4312\t255\tcm:i:486\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6290\t4354\t6287\t943\t1933\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t116\t4027\t+\t1\t6290\t1774\t6287\t2145\t4513\t255\tcm:i:426\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6290\t4\t1741\t421\t1737\t255\tcm:i:61\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6290\t2854\t6226\t2257\t3372\t255\tcm:i:501\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6290\t51\t2831\t1459\t2780\t255\tcm:i:289\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6290\t2825\t6287\t2268\t3462\t255\tcm:i:513\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2745\t-\t1\t6290\t74\t2805\t1501\t2731\t255\tcm:i:289\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6290\t354\t4699\t2022\t4345\t255\tcm:i:377\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6290\t4984\t6271\t614\t1287\t255\tcm:i:117\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6290\t72\t4534\t1921\t4462\t255\tcm:i:337\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6290\t4597\t6206\t580\t1609\t255\tcm:i:103\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6290\t3083\t3386\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6290\t1126\t5708\t2368\t4582\t255\tcm:i:487\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4392\t+\t1\t6290\t23\t1039\t362\t1016\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t539\t+\t1\t6290\t5785\t6254\t217\t469\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6290\t1806\t6258\t2777\t4452\t255\tcm:i:600\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6290\t74\t1603\t761\t1529\t255\tcm:i:150\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t795\t+\t1\t6290\t5209\t5912\t149\t703\t255\tcm:i:24\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6290\t585\t1307\t155\t722\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t6290\t1886\t6287\t2070\t4401\t255\tcm:i:456\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6290\t4\t1838\t656\t1834\t255\tcm:i:109\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6290\t2060\t2358\t156\t298\t255\tcm:i:35\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6290\t23\t4436\t2106\t4413\t255\tcm:i:421\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6290\t4488\t6273\t744\t1785\t255\tcm:i:131\n1               6,290             7.82\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6242\t1016\t5009\t2460\t3993\t255\tcm:i:530\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6242\t5626\t6239\t283\t613\t255\tcm:i:61\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6242\t4\t408\t117\t404\t255\tcm:i:18\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6242\t2535\t6239\t2234\t3704\t255\tcm:i:514\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6242\t51\t2469\t1387\t2418\t255\tcm:i:271\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6242\t4\t4276\t2380\t4272\t255\tcm:i:494\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6242\t4314\t6239\t955\t1925\t255\tcm:i:196\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6242\t1759\t6239\t2194\t4480\t255\tcm:i:440\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6242\t4\t1735\t450\t1731\t255\tcm:i:67\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6242\t2848\t6178\t2284\t3330\t255\tcm:i:509\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6242\t51\t2825\t1504\t2774\t255\tcm:i:295\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6242\t2819\t6239\t2235\t3420\t255\tcm:i:510\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t109\t2745\t-\t1\t6242\t74\t2787\t1517\t2713\t255\tcm:i:304\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6242\t358\t4659\t2051\t4301\t255\tcm:i:391\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6242\t4939\t6223\t618\t1284\t255\tcm:i:114\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6242\t72\t4493\t1941\t4421\t255\tcm:i:345\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6242\t4556\t6158\t579\t1602\t255\tcm:i:105\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6242\t3077\t3380\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6242\t1133\t5664\t2405\t4531\t255\tcm:i:507\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6242\t23\t1051\t353\t1028\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6242\t5759\t6206\t204\t447\t255\tcm:i:40\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6242\t1799\t6210\t2749\t4411\t255\tcm:i:591\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6242\t74\t1601\t795\t1527\t255\tcm:i:165\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6242\t5166\t5916\t224\t750\t255\tcm:i:35\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t160\t847\t+\t1\t6242\t602\t1310\t144\t708\t255\tcm:i:16\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6242\t1908\t6239\t2061\t4331\t255\tcm:i:454\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6242\t4\t1831\t667\t1827\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6242\t2053\t2352\t157\t299\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6242\t23\t4395\t2130\t4372\t255\tcm:i:425\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6242\t4447\t6225\t762\t1778\t255\tcm:i:138\n2               6,242             8.02\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6265\t1028\t5025\t2436\t3997\t255\tcm:i:527\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6265\t5642\t6262\t281\t620\t255\tcm:i:59\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6265\t4\t408\t105\t404\t255\tcm:i:17\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6265\t2544\t6262\t2228\t3718\t255\tcm:i:507\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6265\t51\t2478\t1353\t2427\t255\tcm:i:260\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6265\t4\t4293\t2377\t4289\t255\tcm:i:492\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6265\t4331\t6262\t967\t1931\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6265\t1772\t6262\t2190\t4490\t255\tcm:i:436\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6265\t4\t1748\t448\t1744\t255\tcm:i:62\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6265\t2857\t6201\t2270\t3344\t255\tcm:i:503\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6265\t51\t2834\t1463\t2783\t255\tcm:i:284\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6265\t2828\t6262\t2251\t3434\t255\tcm:i:515\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t102\t2745\t-\t1\t6265\t74\t2804\t1511\t2730\t255\tcm:i:305\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6265\t358\t4676\t2063\t4318\t255\tcm:i:392\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4328\t-\t1\t6265\t4930\t6246\t623\t1316\t255\tcm:i:113\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6265\t72\t4510\t1987\t4438\t255\tcm:i:350\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6265\t4573\t6181\t569\t1608\t255\tcm:i:102\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6265\t3089\t3392\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6265\t1145\t5680\t2423\t4535\t255\tcm:i:509\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6265\t23\t1063\t337\t1040\t255\tcm:i:56\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6265\t5779\t6229\t223\t450\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6265\t1812\t6233\t2769\t4421\t255\tcm:i:601\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6265\t74\t1615\t764\t1541\t255\tcm:i:156\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6265\t5182\t5936\t236\t754\t255\tcm:i:36\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6265\t589\t1322\t155\t733\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6265\t1921\t6262\t2062\t4341\t255\tcm:i:449\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6265\t4\t1844\t660\t1840\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6265\t2063\t2361\t157\t298\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6265\t23\t4412\t2182\t4389\t255\tcm:i:436\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6265\t4464\t6248\t787\t1784\t255\tcm:i:141\n3               6,265             8.04\n\nBest polish: /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/016_rotated.fasta\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/13_racon_polished.gfa\n\n\nAssembly complete (2025-03-10 06:37:42)\nSaving /galaxy/server/database/jobs_directory/000/12/working/assembly.gfa\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2025-03-10 06:37:41)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only long reads, Unicycler will assemble the reads with miniasm and\nthen run repeated polishing rounds using Racon.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_anchor_seg_len 10 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmers 21,23 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/12/working\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py               not used                             \n  racon         1.5.0     good       /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nLoading reads (2025-03-10 06:37:42)\n\r0 / 40 (0.0%)\r1 / 40 (2.5%) - 412 bp\r2 / 40 (5.0%) - 4,847 bp\r3 / 40 (7.5%) - 8,974 bp\r4 / 40 (10.0%) - 13,249 bp\r5 / 40 (12.5%) - 14,258 bp\r6 / 40 (15.0%) - 14,806 bp\r7 / 40 (17.5%) - 19,262 bp\r8 / 40 (20.0%) - 19,737 bp\r9 / 40 (22.5%) - 20,395 bp\r10 / 40 (25.0%) - 32,024 bp\r11 / 40 (27.5%) - 32,698 bp\r12 / 40 (30.0%) - 34,509 bp\r13 / 40 (32.5%) - 39,018 bp\r14 / 40 (35.0%) - 43,351 bp\r15 / 40 (37.5%) - 44,224 bp\r16 / 40 (40.0%) - 45,978 bp\r17 / 40 (42.5%) - 46,402 bp\r18 / 40 (45.0%) - 61,596 bp\r19 / 40 (47.5%) - 62,279 bp\r20 / 40 (50.0%) - 63,700 bp\r21 / 40 (52.5%) - 66,412 bp\r22 / 40 (55.0%) - 66,845 bp\r23 / 40 (57.5%) - 67,316 bp\r24 / 40 (60.0%) - 69,428 bp\r25 / 40 (62.5%) - 73,964 bp\r26 / 40 (65.0%) - 75,608 bp\r27 / 40 (67.5%) - 80,223 bp\r28 / 40 (70.0%) - 84,810 bp\r29 / 40 (72.5%) - 92,076 bp\r30 / 40 (75.0%) - 92,832 bp\r31 / 40 (77.5%) - 92,939 bp\r32 / 40 (80.0%) - 93,532 bp\r33 / 40 (82.5%) - 96,370 bp\r34 / 40 (85.0%) - 100,656 bp\r35 / 40 (87.5%) - 119,222 bp\r36 / 40 (90.0%) - 123,827 bp\r37 / 40 (92.5%) - 155,106 bp\r38 / 40 (95.0%) - 156,254 bp\r39 / 40 (97.5%) - 157,993 bp\r40 / 40 (100.0%) - 162,406 bp\r40 / 40 (100.0%) - 162,406 bp\n\n\nAssembling contigs and long reads with miniasm (2025-03-10 06:37:42)\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/01_assembly_reads.fastq:\n  40 long reads\n\nFinding overlaps with minimap... success\n  120 overlaps\n\nAssembling reads with miniasm... success\n  7 segments, 6 links\n\n    Unicycler removes any links from the string graph which create branches.\nI.e. if any segment has two or more links connected to one end, those links are\nremoved. This will result in a graph with only simple linear paths that is\nsuitable for creating unambiguous bridges.\n\nNo links needed removal\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/11_branching_paths_removed.gfa\nMerging segments into unitigs:\n\nLinear unitig: 3708:125-4288- -> f49b:293-4469+ -> 9e6d:143-4411- -> 9780:142-4271- -> a53e:333-4400+ -> b949:140-4359- -> 054c:932-4389-\n\n  1 linear unitig\n  total size = 5,836 bp\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/12_unitig_graph.gfa\n\n\nPolishing miniasm assembly with Racon (2025-03-10 06:37:42)\n    Unicycler now uses Racon to polish the miniasm assembly. It does multiple\nrounds of polishing to get the best consensus. Circular unitigs are rotated\nbetween rounds such that all parts (including the ends) are polished well.\n\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/polishing_reads.fastq:\n  40 long reads\n\nPolish       Assembly          Mapping\nround            size          quality\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t210\t4010\t+\t1\t5836\t1061\t4603\t1147\t3800\t255\tcm:i:200\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t5836\t5221\t5833\t179\t612\t255\tcm:i:27\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t5836\t2376\t5833\t3457\t3457\t255\tcm:i:1153\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2525\t-\t1\t5836\t30\t2314\t787\t2399\t255\tcm:i:144\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t280\t4284\t-\t1\t5836\t4\t3936\t1481\t4004\t255\tcm:i:246\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4286\t-\t1\t5836\t4215\t5833\t546\t1618\t255\tcm:i:88\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t170\t4027\t+\t1\t5836\t1680\t5833\t1032\t4153\t255\tcm:i:174\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4082\t+\t1\t5836\t4\t1602\t220\t1598\t255\tcm:i:30\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1334\t4566\t-\t1\t5836\t2699\t5786\t1281\t3232\t255\tcm:i:243\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t5836\t50\t2663\t772\t2680\t255\tcm:i:129\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t5836\t2657\t5833\t1469\t3386\t255\tcm:i:268\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2786\t-\t1\t5836\t30\t2636\t905\t2689\t255\tcm:i:157\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t143\t4271\t-\t1\t5836\t338\t4254\t1834\t4128\t255\tcm:i:470\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3092\t4330\t-\t1\t5836\t4503\t5798\t430\t1295\t255\tcm:i:77\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t544\t4408\t-\t1\t5836\t69\t3927\t1208\t3864\t255\tcm:i:237\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3008\t4472\t-\t1\t5836\t4215\t5748\t351\t1533\t255\tcm:i:53\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t5836\t2909\t3222\t131\t313\t255\tcm:i:22\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t335\t4397\t+\t1\t5836\t1321\t5257\t1351\t4062\t255\tcm:i:280\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4349\t+\t1\t5836\t23\t961\t238\t938\t255\tcm:i:40\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t537\t+\t1\t5836\t5334\t5798\t154\t464\t255\tcm:i:26\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t111\t4359\t-\t1\t5836\t1673\t5798\t2062\t4248\t255\tcm:i:487\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t109\t1619\t-\t1\t5836\t30\t1525\t472\t1510\t255\tcm:i:68\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t5836\t1733\t5833\t1303\t4100\t255\tcm:i:230\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t5836\t4\t1690\t311\t1712\t255\tcm:i:43\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4205\t+\t1\t5836\t23\t3939\t1039\t3916\t255\tcm:i:166\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t296\t1782\t+\t1\t5836\t4242\t5798\t367\t1556\t255\tcm:i:63\nbegin           5,836             5.33\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6290\t1009\t5054\t2431\t4045\t255\tcm:i:529\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6290\t5670\t6287\t297\t617\t255\tcm:i:63\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6290\t4\t404\t122\t400\t255\tcm:i:19\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6290\t2540\t6287\t2249\t3747\t255\tcm:i:527\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6290\t51\t2474\t1276\t2423\t255\tcm:i:245\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6290\t4\t4316\t2322\t4312\t255\tcm:i:486\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6290\t4354\t6287\t943\t1933\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t116\t4027\t+\t1\t6290\t1774\t6287\t2145\t4513\t255\tcm:i:426\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6290\t4\t1741\t421\t1737\t255\tcm:i:61\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6290\t2854\t6226\t2257\t3372\t255\tcm:i:501\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6290\t51\t2831\t1459\t2780\t255\tcm:i:289\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6290\t2825\t6287\t2268\t3462\t255\tcm:i:513\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2745\t-\t1\t6290\t74\t2805\t1501\t2731\t255\tcm:i:289\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6290\t354\t4699\t2022\t4345\t255\tcm:i:377\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6290\t4984\t6271\t614\t1287\t255\tcm:i:117\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6290\t72\t4534\t1921\t4462\t255\tcm:i:337\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6290\t4597\t6206\t580\t1609\t255\tcm:i:103\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6290\t3083\t3386\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6290\t1126\t5708\t2368\t4582\t255\tcm:i:487\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4392\t+\t1\t6290\t23\t1039\t362\t1016\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t539\t+\t1\t6290\t5785\t6254\t217\t469\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6290\t1806\t6258\t2777\t4452\t255\tcm:i:600\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6290\t74\t1603\t761\t1529\t255\tcm:i:150\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t795\t+\t1\t6290\t5209\t5912\t149\t703\t255\tcm:i:24\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6290\t585\t1307\t155\t722\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t6290\t1886\t6287\t2070\t4401\t255\tcm:i:456\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6290\t4\t1838\t656\t1834\t255\tcm:i:109\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6290\t2060\t2358\t156\t298\t255\tcm:i:35\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6290\t23\t4436\t2106\t4413\t255\tcm:i:421\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6290\t4488\t6273\t744\t1785\t255\tcm:i:131\n1               6,290             7.82\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6242\t1016\t5009\t2460\t3993\t255\tcm:i:530\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6242\t5626\t6239\t283\t613\t255\tcm:i:61\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6242\t4\t408\t117\t404\t255\tcm:i:18\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6242\t2535\t6239\t2234\t3704\t255\tcm:i:514\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6242\t51\t2469\t1387\t2418\t255\tcm:i:271\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6242\t4\t4276\t2380\t4272\t255\tcm:i:494\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6242\t4314\t6239\t955\t1925\t255\tcm:i:196\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6242\t1759\t6239\t2194\t4480\t255\tcm:i:440\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6242\t4\t1735\t450\t1731\t255\tcm:i:67\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6242\t2848\t6178\t2284\t3330\t255\tcm:i:509\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6242\t51\t2825\t1504\t2774\t255\tcm:i:295\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6242\t2819\t6239\t2235\t3420\t255\tcm:i:510\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t109\t2745\t-\t1\t6242\t74\t2787\t1517\t2713\t255\tcm:i:304\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6242\t358\t4659\t2051\t4301\t255\tcm:i:391\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6242\t4939\t6223\t618\t1284\t255\tcm:i:114\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6242\t72\t4493\t1941\t4421\t255\tcm:i:345\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6242\t4556\t6158\t579\t1602\t255\tcm:i:105\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6242\t3077\t3380\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6242\t1133\t5664\t2405\t4531\t255\tcm:i:507\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6242\t23\t1051\t353\t1028\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6242\t5759\t6206\t204\t447\t255\tcm:i:40\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6242\t1799\t6210\t2749\t4411\t255\tcm:i:591\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6242\t74\t1601\t795\t1527\t255\tcm:i:165\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6242\t5166\t5916\t224\t750\t255\tcm:i:35\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t160\t847\t+\t1\t6242\t602\t1310\t144\t708\t255\tcm:i:16\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6242\t1908\t6239\t2061\t4331\t255\tcm:i:454\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6242\t4\t1831\t667\t1827\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6242\t2053\t2352\t157\t299\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6242\t23\t4395\t2130\t4372\t255\tcm:i:425\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6242\t4447\t6225\t762\t1778\t255\tcm:i:138\n2               6,242             8.02\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6265\t1028\t5025\t2436\t3997\t255\tcm:i:527\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6265\t5642\t6262\t281\t620\t255\tcm:i:59\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6265\t4\t408\t105\t404\t255\tcm:i:17\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6265\t2544\t6262\t2228\t3718\t255\tcm:i:507\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6265\t51\t2478\t1353\t2427\t255\tcm:i:260\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6265\t4\t4293\t2377\t4289\t255\tcm:i:492\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6265\t4331\t6262\t967\t1931\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6265\t1772\t6262\t2190\t4490\t255\tcm:i:436\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6265\t4\t1748\t448\t1744\t255\tcm:i:62\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6265\t2857\t6201\t2270\t3344\t255\tcm:i:503\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6265\t51\t2834\t1463\t2783\t255\tcm:i:284\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6265\t2828\t6262\t2251\t3434\t255\tcm:i:515\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t102\t2745\t-\t1\t6265\t74\t2804\t1511\t2730\t255\tcm:i:305\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6265\t358\t4676\t2063\t4318\t255\tcm:i:392\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4328\t-\t1\t6265\t4930\t6246\t623\t1316\t255\tcm:i:113\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6265\t72\t4510\t1987\t4438\t255\tcm:i:350\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6265\t4573\t6181\t569\t1608\t255\tcm:i:102\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6265\t3089\t3392\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6265\t1145\t5680\t2423\t4535\t255\tcm:i:509\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6265\t23\t1063\t337\t1040\t255\tcm:i:56\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6265\t5779\t6229\t223\t450\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6265\t1812\t6233\t2769\t4421\t255\tcm:i:601\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6265\t74\t1615\t764\t1541\t255\tcm:i:156\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6265\t5182\t5936\t236\t754\t255\tcm:i:36\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6265\t589\t1322\t155\t733\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6265\t1921\t6262\t2062\t4341\t255\tcm:i:449\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6265\t4\t1844\t660\t1840\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6265\t2063\t2361\t157\t298\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6265\t23\t4412\t2182\t4389\t255\tcm:i:436\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6265\t4464\t6248\t787\t1784\t255\tcm:i:141\n3               6,265             8.04\n\nBest polish: /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/016_rotated.fasta\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/13_racon_polished.gfa\n\n\nAssembly complete (2025-03-10 06:37:42)\nSaving /galaxy/server/database/jobs_directory/000/12/working/assembly.gfa\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:37:41", "plugin": "core", "name": "start_epoch", "raw_value": "1741588661.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:37:42", "plugin": "core", "name": "end_epoch", "raw_value": "1741588662.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-4", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 4, "time_seconds": 57.79014205932617, "inputs": {"paired_unpaired|fastq_input1": {"src": "hdca", "id": "a3ab508ddf404029"}, "paired_unpaired|fastq_input_selector": "paired_collection", "long": {"src": "hda", "id": "427360be0c1c69a5"}, "keep": "0", "reuse_0|reuse_file": {"src": "hda", "id": "6a0852436192a46e"}, "reuse_0|reuse_step": "002_depth_filter"}, "job": {"model_class": "Job", "id": "98af922f0d60231e", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:38:27.971237", "update_time": "2025-03-10T06:38:52.094798", "galaxy_version": "24.2", "external_id": "gxy-8wjhn", "handler": null, "job_runner_name": null, "command_line": "ln -s /galaxy/server/database/objects/3/7/4/dataset_374952b4-3b91-46ef-b2ff-2600a4ae9778.dat 002_depth_filter.gfa &&  ln -s '/galaxy/server/database/objects/a/5/8/dataset_a58986cd-651a-4712-b588-80cc60d3cc9f.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/c/9/5/dataset_c9543bbb-4c06-40ce-b244-c3044b78e7ba.dat' fq2.fastq && ln -s '/galaxy/server/database/objects/f/d/8/dataset_fd8f9bf4-8a27-4a37-9809-b36a7672d2d8.dat' 'lr.fasta' && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"paired_unpaired": "{\"__current_case__\": 1, \"fastq_input1\": {\"values\": [{\"id\": 2, \"src\": \"hdca\"}]}, \"fastq_input_selector\": \"paired_collection\"}", "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "keep": "\"0\"", "reuse": "[{\"__index__\": 0, \"reuse_file\": {\"values\": [{\"id\": 20, \"src\": \"hda\"}]}, \"reuse_step\": \"002_depth_filter\"}]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"reuse_0|reuse_file": {"id": "6a0852436192a46e", "src": "hda", "uuid": "374952b4-3b91-46ef-b2ff-2600a4ae9778"}, "paired_unpaired|fastq_input12": {"id": "c7885de9a2c23b1b", "src": "hda", "uuid": "c9543bbb-4c06-40ce-b244-c3044b78e7ba"}, "long": {"id": "427360be0c1c69a5", "src": "hda", "uuid": "fd8f9bf4-8a27-4a37-9809-b36a7672d2d8"}, "paired_unpaired|fastq_input11": {"id": "98af922f0d60231e", "src": "hda", "uuid": "a58986cd-651a-4712-b588-80cc60d3cc9f"}}, "outputs": {"assembly": {"id": "f7ef84d3cc41c8ac", "src": "hda", "uuid": "120af00e-8a32-477b-9cae-f1183bede43c"}, "assembly_graph": {"id": "cf9a64477f7f1910", "src": "hda", "uuid": "13a8998a-219e-4ce6-b8b2-8876088f31fa"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "\nStarting Unicycler (2025-03-10 06:38:30)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/17/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\nSPAdes graph already exists. Will use this graph instead of running SPAdes:\n  /galaxy/server/database/jobs_directory/000/17/working/002_depth_filter.gfa\n\n\nDetermining graph multiplicity (2025-03-10 06:38:30)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\nInitial single copy segments: none\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2025-03-10 06:38:30)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 4 (0.0%)\r1 / 4 (25.0%)\r2 / 4 (50.0%)\r3 / 4 (75.0%)\r4 / 4 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        64        63\n       2        63        64\nGraph overlaps removed\n\nRemoved zero-length segments:\n    2\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2025-03-10 06:38:30)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2025-03-10 06:38:30)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2025-03-10 06:38:30)\n\r0 / 40 (0.0%)\r1 / 40 (2.5%) - 412 bp\r2 / 40 (5.0%) - 4,847 bp\r3 / 40 (7.5%) - 8,974 bp\r4 / 40 (10.0%) - 13,249 bp\r5 / 40 (12.5%) - 14,258 bp\r6 / 40 (15.0%) - 14,806 bp\r7 / 40 (17.5%) - 19,262 bp\r8 / 40 (20.0%) - 19,737 bp\r9 / 40 (22.5%) - 20,395 bp\r10 / 40 (25.0%) - 32,024 bp\r11 / 40 (27.5%) - 32,698 bp\r12 / 40 (30.0%) - 34,509 bp\r13 / 40 (32.5%) - 39,018 bp\r14 / 40 (35.0%) - 43,351 bp\r15 / 40 (37.5%) - 44,224 bp\r16 / 40 (40.0%) - 45,978 bp\r17 / 40 (42.5%) - 46,402 bp\r18 / 40 (45.0%) - 61,596 bp\r19 / 40 (47.5%) - 62,279 bp\r20 / 40 (50.0%) - 63,700 bp\r21 / 40 (52.5%) - 66,412 bp\r22 / 40 (55.0%) - 66,845 bp\r23 / 40 (57.5%) - 67,316 bp\r24 / 40 (60.0%) - 69,428 bp\r25 / 40 (62.5%) - 73,964 bp\r26 / 40 (65.0%) - 75,608 bp\r27 / 40 (67.5%) - 80,223 bp\r28 / 40 (70.0%) - 84,810 bp\r29 / 40 (72.5%) - 92,076 bp\r30 / 40 (75.0%) - 92,832 bp\r31 / 40 (77.5%) - 92,939 bp\r32 / 40 (80.0%) - 93,532 bp\r33 / 40 (82.5%) - 96,370 bp\r34 / 40 (85.0%) - 100,656 bp\r35 / 40 (87.5%) - 119,222 bp\r36 / 40 (90.0%) - 123,827 bp\r37 / 40 (92.5%) - 155,106 bp\r38 / 40 (95.0%) - 156,254 bp\r39 / 40 (97.5%) - 157,993 bp\r40 / 40 (100.0%) - 162,406 bp\r40 / 40 (100.0%) - 162,406 bp\n\n\nAssembling contigs and long reads with miniasm (2025-03-10 06:38:30)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/17/working/miniasm_assembly/all_segments.fasta\nNumber of minimap alignments: 0\n\nSaving to /galaxy/server/database/jobs_directory/000/17/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  0 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2025-03-10 06:38:30)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/17/working/simple_bridging/all_segments.fasta\nNumber of minimap alignments: 0\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2025-03-10 06:38:30)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2025-03-10 06:38:30)\n\nDone! 0 out of 40 reads aligned\n\n\nAligning reads (2025-03-10 06:38:30)\n1/40: 570cfbe8-1011-441d-911f-d98dcc4472fc_Basecall_1D_template (412 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n2/40: b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template (4435 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n3/40: 4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template (4127 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n4/40: bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template (4275 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n5/40: f5c07582-ccd5-4bd8-aa45-4ebb5011fc08_Basecall_1D_template (1009 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n6/40: 517eff45-d956-49c2-826b-2c46d808ac0b_Basecall_1D_template (548 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n7/40: a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template (4456 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n8/40: d5a76b7f-4807-466d-898b-57cc86dcd23b_Basecall_1D_template (475 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n9/40: 0a216098-91e8-4e7d-8a6e-f01787334e25_Basecall_1D_template (658 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n10/40: 01404034-9c48-4481-9a22-a3f8ca504f46_Basecall_1D_template (11629 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n11/40: 91ad6660-073d-4cb5-8d63-d245dc68bc13_Basecall_1D_template (674 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n12/40: ac90d3b2-5920-4aa0-b847-06f6ad96c660_Basecall_1D_template (1811 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n13/40: f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template (4509 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n14/40: 9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template (4333 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n15/40: ac9e88d3-a34a-4471-afa0-a32482adae44_Basecall_1D_template (873 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n16/40: 1806bd87-3bc8-4c85-8ebb-9bfc69f6ab80_Basecall_1D_template (1754 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n17/40: d6240347-58c8-45c1-9fc6-c81f62e52627_Basecall_1D_template (424 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n18/40: a7b73a5b-e278-4c94-9ac9-cb3c3375de5c_Basecall_1D_template (15194 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n19/40: 062d408e-cb5f-4a8d-a64e-4c5195b7cb42_Basecall_1D_template (683 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n20/40: bca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template (1421 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n21/40: cc236ee7-3730-4da5-9285-8b3fd7f4a891_Basecall_1D_template (2712 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n22/40: a152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template (433 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n23/40: c4e8bab7-4a32-4e58-81f6-14e6aad83ecd_Basecall_1D_template (471 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n24/40: 2c2d8aa9-504b-4d7a-9ecf-05915b2019f4_Basecall_1D_template (2112 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n25/40: 9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template (4536 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n26/40: ebbcf643-de70-42e5-b191-636075c46300_Basecall_1D_template (1644 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n27/40: 771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template (4615 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n28/40: 598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template (4587 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n29/40: 92e47453-14cb-4eaa-a227-1fb13413ba87_Basecall_1D_template (7266 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n30/40: f5a2663c-bdb6-40ca-b515-5967b8203f05_Basecall_1D_template (756 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n31/40: 256f6d28-2c36-440a-b840-d41bedebcca7_Basecall_1D_template (107 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n32/40: 390d5a94-5dd8-48ed-8e3d-9abaedea15c9_Basecall_1D_template (593 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n33/40: 2126f8fe-6e3b-4785-bec0-0743133405d9_Basecall_1D_template (2838 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n34/40: 0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template (4286 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n35/40: 5b948563-86ae-4075-a648-43355c36cc84_Basecall_1D_template (18566 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n36/40: 3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template (4605 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n37/40: c302e6a4-a0c3-4d66-90f8-3fe9a031a6a3_Basecall_1D_template (31279 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n38/40: c2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template (1148 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n39/40: 8c147c6e-6239-4933-9bb9-f9d5e6976103_Basecall_1D_template (1739 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n40/40: 054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template (4413 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n\nRead alignment summary (2025-03-10 06:38:30)\nTotal read count:        40\nFully aligned reads:      0\nPartially aligned reads:  0\nUnaligned reads:         40\n570cfbe8-1011-441d-911f-d98dcc4472fc_Basecall_1D_template, b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template, 4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template, bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template, f5c07582-ccd5-4bd8-aa45-4ebb5011fc08_Basecall_1D_template, 517eff45-d956-49c2-826b-2c46d808ac0b_Basecall_1D_template, a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template, d5a76b7f-4807-466d-898b-57cc86dcd23b_Basecall_1D_template, 0a216098-91e8-4e7d-8a6e-f01787334e25_Basecall_1D_template, 01404034-9c48-4481-9a22-a3f8ca504f46_Basecall_1D_template, 91ad6660-073d-4cb5-8d63-d245dc68bc13_Basecall_1D_template, ac90d3b2-5920-4aa0-b847-06f6ad96c660_Basecall_1D_template, f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template, 9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template, ac9e88d3-a34a-4471-afa0-a32482adae44_Basecall_1D_template, 1806bd87-3bc8-4c85-8ebb-9bfc69f6ab80_Basecall_1D_template, d6240347-58c8-45c1-9fc6-c81f62e52627_Basecall_1D_template, a7b73a5b-e278-4c94-9ac9-cb3c3375de5c_Basecall_1D_template, 062d408e-cb5f-4a8d-a64e-4c5195b7cb42_Basecall_1D_template, bca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template, cc236ee7-3730-4da5-9285-8b3fd7f4a891_Basecall_1D_template, a152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template, c4e8bab7-4a32-4e58-81f6-14e6aad83ecd_Basecall_1D_template, 2c2d8aa9-504b-4d7a-9ecf-05915b2019f4_Basecall_1D_template, 9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template, ebbcf643-de70-42e5-b191-636075c46300_Basecall_1D_template, 771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template, 598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template, 92e47453-14cb-4eaa-a227-1fb13413ba87_Basecall_1D_template, f5a2663c-bdb6-40ca-b515-5967b8203f05_Basecall_1D_template, 256f6d28-2c36-440a-b840-d41bedebcca7_Basecall_1D_template, 390d5a94-5dd8-48ed-8e3d-9abaedea15c9_Basecall_1D_template, 2126f8fe-6e3b-4785-bec0-0743133405d9_Basecall_1D_template, 0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template, 5b948563-86ae-4075-a648-43355c36cc84_Basecall_1D_template, 3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template, c302e6a4-a0c3-4d66-90f8-3fe9a031a6a3_Basecall_1D_template, c2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template, 8c147c6e-6239-4933-9bb9-f9d5e6976103_Basecall_1D_template, 054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\n\nTotal bases aligned:      0 bp\nMean alignment identity:  0.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/17/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2025-03-10 06:38:30)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2025-03-10 06:38:30)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2025-03-10 06:38:30)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2025-03-10 06:38:30)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2025-03-10 06:38:30)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2025-03-10 06:38:39)\nSaving /galaxy/server/database/jobs_directory/000/17/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/17/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2025-03-10 06:38:30)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/17/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\nSPAdes graph already exists. Will use this graph instead of running SPAdes:\n  /galaxy/server/database/jobs_directory/000/17/working/002_depth_filter.gfa\n\n\nDetermining graph multiplicity (2025-03-10 06:38:30)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\nInitial single copy segments: none\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2025-03-10 06:38:30)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 4 (0.0%)\r1 / 4 (25.0%)\r2 / 4 (50.0%)\r3 / 4 (75.0%)\r4 / 4 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        64        63\n       2        63        64\nGraph overlaps removed\n\nRemoved zero-length segments:\n    2\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2025-03-10 06:38:30)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2025-03-10 06:38:30)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2025-03-10 06:38:30)\n\r0 / 40 (0.0%)\r1 / 40 (2.5%) - 412 bp\r2 / 40 (5.0%) - 4,847 bp\r3 / 40 (7.5%) - 8,974 bp\r4 / 40 (10.0%) - 13,249 bp\r5 / 40 (12.5%) - 14,258 bp\r6 / 40 (15.0%) - 14,806 bp\r7 / 40 (17.5%) - 19,262 bp\r8 / 40 (20.0%) - 19,737 bp\r9 / 40 (22.5%) - 20,395 bp\r10 / 40 (25.0%) - 32,024 bp\r11 / 40 (27.5%) - 32,698 bp\r12 / 40 (30.0%) - 34,509 bp\r13 / 40 (32.5%) - 39,018 bp\r14 / 40 (35.0%) - 43,351 bp\r15 / 40 (37.5%) - 44,224 bp\r16 / 40 (40.0%) - 45,978 bp\r17 / 40 (42.5%) - 46,402 bp\r18 / 40 (45.0%) - 61,596 bp\r19 / 40 (47.5%) - 62,279 bp\r20 / 40 (50.0%) - 63,700 bp\r21 / 40 (52.5%) - 66,412 bp\r22 / 40 (55.0%) - 66,845 bp\r23 / 40 (57.5%) - 67,316 bp\r24 / 40 (60.0%) - 69,428 bp\r25 / 40 (62.5%) - 73,964 bp\r26 / 40 (65.0%) - 75,608 bp\r27 / 40 (67.5%) - 80,223 bp\r28 / 40 (70.0%) - 84,810 bp\r29 / 40 (72.5%) - 92,076 bp\r30 / 40 (75.0%) - 92,832 bp\r31 / 40 (77.5%) - 92,939 bp\r32 / 40 (80.0%) - 93,532 bp\r33 / 40 (82.5%) - 96,370 bp\r34 / 40 (85.0%) - 100,656 bp\r35 / 40 (87.5%) - 119,222 bp\r36 / 40 (90.0%) - 123,827 bp\r37 / 40 (92.5%) - 155,106 bp\r38 / 40 (95.0%) - 156,254 bp\r39 / 40 (97.5%) - 157,993 bp\r40 / 40 (100.0%) - 162,406 bp\r40 / 40 (100.0%) - 162,406 bp\n\n\nAssembling contigs and long reads with miniasm (2025-03-10 06:38:30)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/17/working/miniasm_assembly/all_segments.fasta\nNumber of minimap alignments: 0\n\nSaving to /galaxy/server/database/jobs_directory/000/17/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  0 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2025-03-10 06:38:30)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/17/working/simple_bridging/all_segments.fasta\nNumber of minimap alignments: 0\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2025-03-10 06:38:30)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2025-03-10 06:38:30)\n\nDone! 0 out of 40 reads aligned\n\n\nAligning reads (2025-03-10 06:38:30)\n1/40: 570cfbe8-1011-441d-911f-d98dcc4472fc_Basecall_1D_template (412 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n2/40: b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template (4435 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n3/40: 4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template (4127 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n4/40: bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template (4275 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n5/40: f5c07582-ccd5-4bd8-aa45-4ebb5011fc08_Basecall_1D_template (1009 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n6/40: 517eff45-d956-49c2-826b-2c46d808ac0b_Basecall_1D_template (548 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n7/40: a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template (4456 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n8/40: d5a76b7f-4807-466d-898b-57cc86dcd23b_Basecall_1D_template (475 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n9/40: 0a216098-91e8-4e7d-8a6e-f01787334e25_Basecall_1D_template (658 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n10/40: 01404034-9c48-4481-9a22-a3f8ca504f46_Basecall_1D_template (11629 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n11/40: 91ad6660-073d-4cb5-8d63-d245dc68bc13_Basecall_1D_template (674 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n12/40: ac90d3b2-5920-4aa0-b847-06f6ad96c660_Basecall_1D_template (1811 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n13/40: f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template (4509 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n14/40: 9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template (4333 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n15/40: ac9e88d3-a34a-4471-afa0-a32482adae44_Basecall_1D_template (873 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n16/40: 1806bd87-3bc8-4c85-8ebb-9bfc69f6ab80_Basecall_1D_template (1754 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n17/40: d6240347-58c8-45c1-9fc6-c81f62e52627_Basecall_1D_template (424 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n18/40: a7b73a5b-e278-4c94-9ac9-cb3c3375de5c_Basecall_1D_template (15194 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n19/40: 062d408e-cb5f-4a8d-a64e-4c5195b7cb42_Basecall_1D_template (683 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n20/40: bca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template (1421 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n21/40: cc236ee7-3730-4da5-9285-8b3fd7f4a891_Basecall_1D_template (2712 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n22/40: a152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template (433 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n23/40: c4e8bab7-4a32-4e58-81f6-14e6aad83ecd_Basecall_1D_template (471 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n24/40: 2c2d8aa9-504b-4d7a-9ecf-05915b2019f4_Basecall_1D_template (2112 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n25/40: 9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template (4536 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n26/40: ebbcf643-de70-42e5-b191-636075c46300_Basecall_1D_template (1644 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n27/40: 771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template (4615 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n28/40: 598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template (4587 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n29/40: 92e47453-14cb-4eaa-a227-1fb13413ba87_Basecall_1D_template (7266 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n30/40: f5a2663c-bdb6-40ca-b515-5967b8203f05_Basecall_1D_template (756 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n31/40: 256f6d28-2c36-440a-b840-d41bedebcca7_Basecall_1D_template (107 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n32/40: 390d5a94-5dd8-48ed-8e3d-9abaedea15c9_Basecall_1D_template (593 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n33/40: 2126f8fe-6e3b-4785-bec0-0743133405d9_Basecall_1D_template (2838 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n34/40: 0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template (4286 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n35/40: 5b948563-86ae-4075-a648-43355c36cc84_Basecall_1D_template (18566 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n36/40: 3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template (4605 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n37/40: c302e6a4-a0c3-4d66-90f8-3fe9a031a6a3_Basecall_1D_template (31279 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n38/40: c2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template (1148 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n39/40: 8c147c6e-6239-4933-9bb9-f9d5e6976103_Basecall_1D_template (1739 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n40/40: 054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template (4413 bp)\nminimap alignments:\nReference ranges:\n  None\nFinal alignments:\n  None\n\n\nRead alignment summary (2025-03-10 06:38:30)\nTotal read count:        40\nFully aligned reads:      0\nPartially aligned reads:  0\nUnaligned reads:         40\n570cfbe8-1011-441d-911f-d98dcc4472fc_Basecall_1D_template, b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template, 4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template, bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template, f5c07582-ccd5-4bd8-aa45-4ebb5011fc08_Basecall_1D_template, 517eff45-d956-49c2-826b-2c46d808ac0b_Basecall_1D_template, a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template, d5a76b7f-4807-466d-898b-57cc86dcd23b_Basecall_1D_template, 0a216098-91e8-4e7d-8a6e-f01787334e25_Basecall_1D_template, 01404034-9c48-4481-9a22-a3f8ca504f46_Basecall_1D_template, 91ad6660-073d-4cb5-8d63-d245dc68bc13_Basecall_1D_template, ac90d3b2-5920-4aa0-b847-06f6ad96c660_Basecall_1D_template, f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template, 9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template, ac9e88d3-a34a-4471-afa0-a32482adae44_Basecall_1D_template, 1806bd87-3bc8-4c85-8ebb-9bfc69f6ab80_Basecall_1D_template, d6240347-58c8-45c1-9fc6-c81f62e52627_Basecall_1D_template, a7b73a5b-e278-4c94-9ac9-cb3c3375de5c_Basecall_1D_template, 062d408e-cb5f-4a8d-a64e-4c5195b7cb42_Basecall_1D_template, bca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template, cc236ee7-3730-4da5-9285-8b3fd7f4a891_Basecall_1D_template, a152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template, c4e8bab7-4a32-4e58-81f6-14e6aad83ecd_Basecall_1D_template, 2c2d8aa9-504b-4d7a-9ecf-05915b2019f4_Basecall_1D_template, 9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template, ebbcf643-de70-42e5-b191-636075c46300_Basecall_1D_template, 771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template, 598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template, 92e47453-14cb-4eaa-a227-1fb13413ba87_Basecall_1D_template, f5a2663c-bdb6-40ca-b515-5967b8203f05_Basecall_1D_template, 256f6d28-2c36-440a-b840-d41bedebcca7_Basecall_1D_template, 390d5a94-5dd8-48ed-8e3d-9abaedea15c9_Basecall_1D_template, 2126f8fe-6e3b-4785-bec0-0743133405d9_Basecall_1D_template, 0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template, 5b948563-86ae-4075-a648-43355c36cc84_Basecall_1D_template, 3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template, c302e6a4-a0c3-4d66-90f8-3fe9a031a6a3_Basecall_1D_template, c2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template, 8c147c6e-6239-4933-9bb9-f9d5e6976103_Basecall_1D_template, 054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\n\nTotal bases aligned:      0 bp\nMean alignment identity:  0.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/17/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2025-03-10 06:38:30)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2025-03-10 06:38:30)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2025-03-10 06:38:30)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2025-03-10 06:38:30)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2025-03-10 06:38:30)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2025-03-10 06:38:39)\nSaving /galaxy/server/database/jobs_directory/000/17/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/17/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:38:30", "plugin": "core", "name": "start_epoch", "raw_value": "1741588710.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:38:39", "plugin": "core", "name": "end_epoch", "raw_value": "1741588719.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "9 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "9.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-5", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 5, "time_seconds": 178.88728737831116, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "527a5204bab07410"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "0b624fd2f5416a59"}, "paired_unpaired|fastq_input_selector": "paired", "mode": "normal", "keep": "1"}, "job": {"model_class": "Job", "id": "6a0852436192a46e", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:39:14.414116", "update_time": "2025-03-10T06:41:50.972468", "galaxy_version": "24.2", "external_id": "gxy-qv9p2", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/7/0/e/dataset_70e4be3e-bf70-488e-b3a2-234e213ca124.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/4/8/f/dataset_48fc2724-e781-4170-9d4f-38a6135927d7.dat' fq2.fastq && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 1 && mkdir 'spades_graphs' && mv 00*gfa './spades_graphs/'", "user_email": "tests@fake.org", "command_version": "", "params": {"paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 23, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 24, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}", "long": null, "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "keep": "\"1\"", "reuse": "[]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"paired_unpaired|fastq_input1": {"id": "527a5204bab07410", "src": "hda", "uuid": "70e4be3e-bf70-488e-b3a2-234e213ca124"}, "paired_unpaired|fastq_input2": {"id": "0b624fd2f5416a59", "src": "hda", "uuid": "48fc2724-e781-4170-9d4f-38a6135927d7"}}, "outputs": {"assembly_graph": {"id": "4cfd65a3370cda1b", "src": "hda", "uuid": "471395ac-ee12-44ce-a65e-456c1c9fd967"}, "assembly": {"id": "6698abda213d6565", "src": "hda", "uuid": "0a853f4b-98bd-46c7-af1c-c5fd307054a3"}, "__new_primary_file_spades_collection|001_spades_graph_k027__": {"id": "60c0ce53ba90679e", "src": "hda", "uuid": "7a833b59-0251-4202-9f10-5125af96c5c9"}, "__new_primary_file_spades_collection|001_spades_graph_k047__": {"id": "36a24812a663798d", "src": "hda", "uuid": "86ac5de3-2c5d-470e-91e3-7f43bb76cfc6"}, "__new_primary_file_spades_collection|001_spades_graph_k063__": {"id": "53986b9cd1a4440f", "src": "hda", "uuid": "9a2c2c65-669e-48a0-a126-128ba2e9036e"}, "__new_primary_file_spades_collection|001_spades_graph_k077__": {"id": "ff69b4bca548f4f4", "src": "hda", "uuid": "5d43127a-b2a2-4eca-977e-6b71984d708c"}, "__new_primary_file_spades_collection|001_spades_graph_k089__": {"id": "4f09fd272e75799c", "src": "hda", "uuid": "2d15e00d-ddbd-4e47-9cec-702aee2c5445"}, "__new_primary_file_spades_collection|001_spades_graph_k099__": {"id": "a6418e2670735033", "src": "hda", "uuid": "d3b1b47b-75d3-47f5-9ae7-ea9e970e7d3e"}, "__new_primary_file_spades_collection|001_spades_graph_k107__": {"id": "a597dc7a8c51e6f0", "src": "hda", "uuid": "ab1da611-7d16-4a62-913f-b7231c0d7166"}, "__new_primary_file_spades_collection|001_spades_graph_k115__": {"id": "acf845a2e8f626fc", "src": "hda", "uuid": "f67ef1dc-b4cd-465b-8daa-587ab39a6d95"}, "__new_primary_file_spades_collection|001_spades_graph_k121__": {"id": "dcfc817739acc961", "src": "hda", "uuid": "6caaec56-fe53-47e0-87a3-ec014b367a94"}, "__new_primary_file_spades_collection|001_spades_graph_k127__": {"id": "e37e7b6dc4469b3e", "src": "hda", "uuid": "67c595c8-ae4f-4665-9f1b-46b117a2fd07"}, "__new_primary_file_spades_collection|002_depth_filter__": {"id": "8daa3537812003be", "src": "hda", "uuid": "13fbc527-da8d-4dc4-82d0-599be3220129"}, "__new_primary_file_spades_collection|003_overlaps_removed__": {"id": "522f391b1d883daf", "src": "hda", "uuid": "25ade180-0d56-46d9-817d-ff5341ba6d71"}, "__new_primary_file_spades_collection|004_bridges_applied__": {"id": "1ca01a4eed04c266", "src": "hda", "uuid": "12cdfaba-2ebd-47a3-acc2-b75783e5cff2"}, "__new_primary_file_spades_collection|005_final_clean__": {"id": "9fd9a23c2a970d5d", "src": "hda", "uuid": "480543f4-a5c0-432a-a859-2b0eff9a6fb1"}}, "copied_from_job_id": null, "output_collections": {"spades_collection": {"src": "hdca", "id": "489ddfccbe78c00d"}}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "\nStarting Unicycler (2025-03-10 06:39:16)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 1\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/20/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2025-03-10 06:39:16)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2025-03-10 06:39:17)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/20/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/20/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/20/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/20/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/20/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/20/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.6.56+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/20/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/20/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/20/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/20/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/20/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.064    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.067    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.080    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.081    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.087    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.118     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.131     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.131     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.131     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.131     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.133     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.133     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.133     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.885     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.888     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.108     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.108     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.160     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.160     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.161     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.161     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.161     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.915  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.915  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.915     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.126     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.126     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.171     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.171     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.365     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.379     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.405     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.408     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.411     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.413     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.417     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.418     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.418     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.418     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.418     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.420     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.420     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.420     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.420     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.420     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.420     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.422     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.422     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.454     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.455     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.521     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.522     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.592     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.592     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.592     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.592     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.592     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.690     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.984     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.503     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.968     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.764     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.764     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.765     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.765     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.765     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.765     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.765     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.765     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.765     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.765     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Clo\n..\ntabase/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.fasta\n  0:00:04.764     3M / 159M  INFO    General                 (contig_output_stage.cpp   : 107)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.paths\n  0:00:04.770     3M / 159M  INFO    General                 (contig_output_stage.cpp   : 114)   Populating GFA with scaffold paths\n  0:00:04.781     3M / 159M  INFO    General                 (pipeline.cpp              : 292)   SPAdes finished\n  0:00:04.783     1M / 159M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2025-03-10 06:41:28)\nFilter by read depth        (2025-03-10 06:41:28)\nFilter homopolymer loops    (2025-03-10 06:41:28)\nMerge all possible          (2025-03-10 06:41:28)\nNormalise read depths       (2025-03-10 06:41:28)\nRemove zero length segments (2025-03-10 06:41:28)\nSort link order             (2025-03-10 06:41:28)\nGraph cleaning finished     (2025-03-10 06:41:28)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2025-03-10 06:41:29)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/\n\n\nDetermining graph multiplicity (2025-03-10 06:41:29)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/20/working/002_depth_filter.gfa\n\n\nCleaning graph (2025-03-10 06:41:29)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/20/working/003_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2025-03-10 06:41:29)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2025-03-10 06:41:29)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2025-03-10 06:41:29)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/20/working/004_bridges_applied.gfa\n\n\nCleaning up leftover segments (2025-03-10 06:41:29)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2025-03-10 06:41:29)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/20/working/005_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2025-03-10 06:41:29)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2025-03-10 06:41:38)\nSaving /galaxy/server/database/jobs_directory/000/20/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/20/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2025-03-10 06:39:16)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 1\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/20/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2025-03-10 06:39:16)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2025-03-10 06:39:17)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/20/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/20/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/20/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/20/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/20/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/20/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.6.56+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/20/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/20/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/20/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/20/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/20/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.064    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.067    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.080    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.081    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.087    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.118     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.131     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.131     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.131     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.131     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.133     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.133     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.133     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.885     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.888     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.108     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.108     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.160     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.160     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.161     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.161     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.161     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.915  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.915  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.915     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.126     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.126     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.171     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.171     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.365     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.379     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.405     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.408     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.411     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.413     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.417     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.418     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.418     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.418     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.418     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.420     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.420     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.420     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.420     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.420     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.420     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.422     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.422     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.454     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.455     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.521     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.522     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.592     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.592     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.592     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.592     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.592     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.690     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.984     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.503     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.968     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.764     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.764     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.765     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.765     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.765     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.765     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.765     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.765     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.765     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.765     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Clo\n..\ntabase/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.fasta\n  0:00:04.764     3M / 159M  INFO    General                 (contig_output_stage.cpp   : 107)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.paths\n  0:00:04.770     3M / 159M  INFO    General                 (contig_output_stage.cpp   : 114)   Populating GFA with scaffold paths\n  0:00:04.781     3M / 159M  INFO    General                 (pipeline.cpp              : 292)   SPAdes finished\n  0:00:04.783     1M / 159M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2025-03-10 06:41:28)\nFilter by read depth        (2025-03-10 06:41:28)\nFilter homopolymer loops    (2025-03-10 06:41:28)\nMerge all possible          (2025-03-10 06:41:28)\nNormalise read depths       (2025-03-10 06:41:28)\nRemove zero length segments (2025-03-10 06:41:28)\nSort link order             (2025-03-10 06:41:28)\nGraph cleaning finished     (2025-03-10 06:41:28)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2025-03-10 06:41:29)\nFilter by read depth        (2025-03-10 06:41:29)\nFilter homopolymer loops    (2025-03-10 06:41:29)\nMerge all possible          (2025-03-10 06:41:29)\nNormalise read depths       (2025-03-10 06:41:29)\nRemove zero length segments (2025-03-10 06:41:29)\nSort link order             (2025-03-10 06:41:29)\nGraph cleaning finished     (2025-03-10 06:41:29)\nSaving /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2025-03-10 06:41:29)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/20/working/spades_assembly/\n\n\nDetermining graph multiplicity (2025-03-10 06:41:29)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/20/working/002_depth_filter.gfa\n\n\nCleaning graph (2025-03-10 06:41:29)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/20/working/003_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2025-03-10 06:41:29)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2025-03-10 06:41:29)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2025-03-10 06:41:29)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/20/working/004_bridges_applied.gfa\n\n\nCleaning up leftover segments (2025-03-10 06:41:29)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2025-03-10 06:41:29)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/20/working/005_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2025-03-10 06:41:29)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2025-03-10 06:41:38)\nSaving /galaxy/server/database/jobs_directory/000/20/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/20/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:39:16", "plugin": "core", "name": "start_epoch", "raw_value": "1741588756.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:41:38", "plugin": "core", "name": "end_epoch", "raw_value": "1741588898.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "142.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-6", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 6, "time_seconds": 187.89898705482483, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "7db5a0984837637f"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "23ab2a21b150c0ec"}, "paired_unpaired|fastq_input_selector": "paired", "long": {"src": "hda", "id": "74a32d4b5348c334"}, "mode": "normal", "keep": "2"}, "job": {"model_class": "Job", "id": "0b624fd2f5416a59", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:42:18.447253", "update_time": "2025-03-10T06:44:57.990952", "galaxy_version": "24.2", "external_id": "gxy-vfxck", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/f/c/5/dataset_fc5502ac-e27c-4634-b9aa-56b526a0f690.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/a/a/b/dataset_aab660ed-ff1b-47ef-98e3-9b1aafbab1b5.dat' fq2.fastq && ln -s '/galaxy/server/database/objects/7/2/5/dataset_7254db43-b64d-4483-8db9-82200290c595.dat' 'lr.fasta' && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 2 && mkdir 'spades_graphs' && mv 00*gfa './spades_graphs/' && samtools view -@ \"${GALAXY_SLOTS:-4}\" -u 'read_alignment/long_read_alignments.sam' | samtools sort -@ \"${GALAXY_SLOTS:-4}\" -o 'read_alignment/long_read_alignments.bam'", "user_email": "tests@fake.org", "command_version": "", "params": {"paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 41, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 42, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}", "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "keep": "\"2\"", "reuse": "[]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"long": {"id": "74a32d4b5348c334", "src": "hda", "uuid": "7254db43-b64d-4483-8db9-82200290c595"}, "paired_unpaired|fastq_input1": {"id": "7db5a0984837637f", "src": "hda", "uuid": "fc5502ac-e27c-4634-b9aa-56b526a0f690"}, "paired_unpaired|fastq_input2": {"id": "23ab2a21b150c0ec", "src": "hda", "uuid": "aab660ed-ff1b-47ef-98e3-9b1aafbab1b5"}}, "outputs": {"assembly_graph": {"id": "144e9c4b587ea381", "src": "hda", "uuid": "66acfe48-eb3c-44a3-8bf8-66cf6b0da7a2"}, "assembly": {"id": "6ee410f71dccf7c4", "src": "hda", "uuid": "d28881c8-15fd-4f67-bdac-c50dbd008ba4"}, "bam_file": {"id": "eb6b2daea58d78ca", "src": "hda", "uuid": "f787e071-e3c1-4625-92bb-521b0d8d3e93"}, "__new_primary_file_spades_collection|001_spades_graph_k027__": {"id": "4985481e35de3c50", "src": "hda", "uuid": "e604f539-b555-4678-9f65-095723fbc95f"}, "__new_primary_file_spades_collection|001_spades_graph_k047__": {"id": "5507423fef38333b", "src": "hda", "uuid": "e1483ce1-e919-48db-b923-5cfb546afdf2"}, "__new_primary_file_spades_collection|001_spades_graph_k063__": {"id": "5143f3ff6c6b85ca", "src": "hda", "uuid": "b2a6875d-3aa4-41b0-971f-f075fa871f62"}, "__new_primary_file_spades_collection|001_spades_graph_k077__": {"id": "bab8a033fb8678d3", "src": "hda", "uuid": "1e20d8c8-f9a5-4a65-989c-22eabd07fee8"}, "__new_primary_file_spades_collection|001_spades_graph_k089__": {"id": "260ca900204ecbf7", "src": "hda", "uuid": "247867e4-ae4a-47f8-aa68-8b040ce88d07"}, "__new_primary_file_spades_collection|001_spades_graph_k099__": {"id": "2c877b864c3f72b7", "src": "hda", "uuid": "85d56c8c-49f0-48d0-a862-06cf391c729a"}, "__new_primary_file_spades_collection|001_spades_graph_k107__": {"id": "8fa935d8c8d3e585", "src": "hda", "uuid": "6f864f14-3ac1-4576-92d3-f3dfb7906b3b"}, "__new_primary_file_spades_collection|001_spades_graph_k115__": {"id": "b0d27b254e255852", "src": "hda", "uuid": "6d201c35-3ac7-45c6-8372-8dbe129c3541"}, "__new_primary_file_spades_collection|001_spades_graph_k121__": {"id": "fdf88594999c0493", "src": "hda", "uuid": "4810797f-39cf-40ff-bff7-414653475a7b"}, "__new_primary_file_spades_collection|001_spades_graph_k127__": {"id": "f341b7342c568ff9", "src": "hda", "uuid": "ba00f5bf-0b54-4fe5-aab2-10e5fc6c7613"}, "__new_primary_file_spades_collection|002_depth_filter__": {"id": "4e85c6423ee5db87", "src": "hda", "uuid": "b68b3add-7b2f-41eb-bc2b-247d89714bed"}, "__new_primary_file_spades_collection|003_overlaps_removed__": {"id": "e9ca4a28ffd4c2b3", "src": "hda", "uuid": "b816bedc-54f4-4fa8-902c-0fe5217f06df"}, "__new_primary_file_spades_collection|004_bridges_applied__": {"id": "cd58ae6e4e71eab4", "src": "hda", "uuid": "70108013-3394-4762-8eb0-ce5078c8c761"}, "__new_primary_file_spades_collection|005_final_clean__": {"id": "7d3bc01449b9313d", "src": "hda", "uuid": "4d58d9ad-50fc-42e8-a671-6516e3d857ab"}}, "copied_from_job_id": null, "output_collections": {"spades_collection": {"src": "hdca", "id": "e65203828bd48c5f"}}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "\nStarting Unicycler (2025-03-10 06:42:20)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 2\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/24/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2025-03-10 06:42:21)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2025-03-10 06:42:21)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/24/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/24/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/24/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/24/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/24/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/24/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.6.56+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/24/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/24/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/24/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/24/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/24/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/24/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.068    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.071    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.083    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.084    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.090    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.125     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.148     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.148     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.148     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.148     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.150     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.150     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.150     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.964     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.966     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.208     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.208     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.262     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.262     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.263     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.263     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.263     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:02.044  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:02.044  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:02.045     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.291     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.291     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.342     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.342     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.519     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.531     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.549     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.555     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.557     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.560     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.564     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.564     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.564     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.565     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.565     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.566     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.567     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.567     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.567     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.567     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.567     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.569     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.569     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.608     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.609     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.673     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.674     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.740     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.740     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.740     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.740     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.740     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.838     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:03.134     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:04.119     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.919     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.919     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.920     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.920     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.920     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.920     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.920     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.920     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.920     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.920     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Closer (id: ear\n..\nall possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2025-03-10 06:44:36)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/\n\n\nDetermining graph multiplicity (2025-03-10 06:44:36)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/24/working/002_depth_filter.gfa\n\n\nCleaning graph (2025-03-10 06:44:36)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/24/working/003_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2025-03-10 06:44:36)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2025-03-10 06:44:36)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2025-03-10 06:44:36)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2025-03-10 06:44:36)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/24/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/24/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2025-03-10 06:44:36)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/24/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2025-03-10 06:44:36)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2025-03-10 06:44:36)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2025-03-10 06:44:37)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.055 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2025-03-10 06:44:37)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2025-03-10 06:44:37)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2025-03-10 06:44:37)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/24/working/004_bridges_applied.gfa\n\n\nCleaning up leftover segments (2025-03-10 06:44:37)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2025-03-10 06:44:37)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/24/working/005_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2025-03-10 06:44:37)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2025-03-10 06:44:45)\nSaving /galaxy/server/database/jobs_directory/000/24/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/24/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2025-03-10 06:42:20)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 2\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/24/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2025-03-10 06:42:21)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2025-03-10 06:42:21)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/24/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/24/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/24/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/24/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/24/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/24/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.6.56+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/24/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/24/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/24/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/24/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/24/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/24/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/24/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.068    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.071    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.083    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.084    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.090    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.125     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.148     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.148     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.148     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.148     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.150     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.150     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.150     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.964     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.966     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.208     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.208     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.262     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.262     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.263     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.263     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.263     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:02.044  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:02.044  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:02.045     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.291     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.291     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.342     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.342     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.519     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.531     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.549     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.555     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.557     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.560     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.564     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.564     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.564     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.565     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.565     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.566     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.567     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.567     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.567     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.567     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.567     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.569     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.569     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.608     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.609     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.673     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.674     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.740     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.740     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.740     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.740     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.740     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.838     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:03.134     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.650     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:04.119     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.919     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.919     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.920     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.920     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.920     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.920     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.920     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.920     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.920     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.920     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Closer (id: ear\n..\nall possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2025-03-10 06:44:36)\nFilter by read depth        (2025-03-10 06:44:36)\nFilter homopolymer loops    (2025-03-10 06:44:36)\nMerge all possible          (2025-03-10 06:44:36)\nNormalise read depths       (2025-03-10 06:44:36)\nRemove zero length segments (2025-03-10 06:44:36)\nSort link order             (2025-03-10 06:44:36)\nGraph cleaning finished     (2025-03-10 06:44:36)\nSaving /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2025-03-10 06:44:36)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/24/working/spades_assembly/\n\n\nDetermining graph multiplicity (2025-03-10 06:44:36)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/24/working/002_depth_filter.gfa\n\n\nCleaning graph (2025-03-10 06:44:36)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/24/working/003_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2025-03-10 06:44:36)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2025-03-10 06:44:36)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2025-03-10 06:44:36)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2025-03-10 06:44:36)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/24/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/24/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2025-03-10 06:44:36)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/24/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2025-03-10 06:44:36)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2025-03-10 06:44:36)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2025-03-10 06:44:37)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.055 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2025-03-10 06:44:37)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2025-03-10 06:44:37)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2025-03-10 06:44:37)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/24/working/004_bridges_applied.gfa\n\n\nCleaning up leftover segments (2025-03-10 06:44:37)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2025-03-10 06:44:37)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/24/working/005_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2025-03-10 06:44:37)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2025-03-10 06:44:45)\nSaving /galaxy/server/database/jobs_directory/000/24/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/24/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:42:20", "plugin": "core", "name": "start_epoch", "raw_value": "1741588940.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:44:46", "plugin": "core", "name": "end_epoch", "raw_value": "1741589086.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "146.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-7", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 7, "time_seconds": 189.99735188484192, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "ffa56b2306658868"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "108ec60d9ce1c26c"}, "paired_unpaired|fastq_input_selector": "paired", "long": {"src": "hda", "id": "ca0e0c87f20e8585"}, "mode": "normal", "lr_align|no_simple_bridges": true, "keep": "0"}, "job": {"model_class": "Job", "id": "36a24812a663798d", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T06:45:27.312685", "update_time": "2025-03-10T06:48:09.142169", "galaxy_version": "24.2", "external_id": "gxy-967pb", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/e/3/5/dataset_e358e320-7dcc-44ad-8be0-557fd11282ba.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/3/5/3/dataset_353242fa-c3f0-438e-98b4-fc8e78b5f728.dat' fq2.fastq && ln -s '/galaxy/server/database/objects/6/a/d/dataset_6ad83828-51a7-4698-b34c-3bc88b0be18e.dat' 'lr.fasta' && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2' --no_simple_bridges --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 61, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 62, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}", "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": true, \"scores\": \"3,-6,-5,-2\"}", "keep": "\"0\"", "reuse": "[]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"paired_unpaired|fastq_input1": {"id": "ffa56b2306658868", "src": "hda", "uuid": "e358e320-7dcc-44ad-8be0-557fd11282ba"}, "paired_unpaired|fastq_input2": {"id": "108ec60d9ce1c26c", "src": "hda", "uuid": "353242fa-c3f0-438e-98b4-fc8e78b5f728"}, "long": {"id": "ca0e0c87f20e8585", "src": "hda", "uuid": "6ad83828-51a7-4698-b34c-3bc88b0be18e"}}, "outputs": {"assembly": {"id": "aab502851429be06", "src": "hda", "uuid": "beb63405-9b58-41c0-9648-b3517914b5b7"}, "assembly_graph": {"id": "d031a0b484b6bb53", "src": "hda", "uuid": "46e242b3-1fc6-407a-b454-8678e62e254d"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "\nStarting Unicycler (2025-03-10 06:45:31)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --no_simple_bridges --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/28/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2025-03-10 06:45:31)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2025-03-10 06:45:31)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/28/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/28/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/28/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/28/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/28/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/28/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.6.56+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/28/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/28/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/28/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/28/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/28/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/28/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.008     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.068    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.071    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.083    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.085    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.091    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.127     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.142     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.142     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.142     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.142     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.144     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.144     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.144     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.009     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:01.011     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.273     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.273     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.330     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.330     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.331     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.331     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.331     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:02.146  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:02.147  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:02.147     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.389     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.389     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.438     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.438     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.612     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.625     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.652     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.657     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.660     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.662     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.666     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.666     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.666     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.666     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.666     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.668     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.668     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.668     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.668     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.668     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.668     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.670     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.670     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.704     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.705     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.769     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.771     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.857     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.857     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.858     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.858     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.858     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.957     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:03.249     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.765     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:04.233     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:05.028     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:05.028     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.029     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:05.029     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:05.029     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:05.029     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.029     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:05.029     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:05.029     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:05.029     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE ==\n..\n-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2025-03-10 06:47:48)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/\n\n\nDetermining graph multiplicity (2025-03-10 06:47:48)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2025-03-10 06:47:48)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2025-03-10 06:47:48)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2025-03-10 06:47:48)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2025-03-10 06:47:48)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2025-03-10 06:47:48)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/28/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/28/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nDetermining low score threshold (2025-03-10 06:47:48)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2025-03-10 06:47:48)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2025-03-10 06:47:48)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.056 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2025-03-10 06:47:48)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/28/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2025-03-10 06:47:48)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2025-03-10 06:47:48)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2025-03-10 06:47:48)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2025-03-10 06:47:48)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2025-03-10 06:47:48)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2025-03-10 06:47:57)\nSaving /galaxy/server/database/jobs_directory/000/28/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/28/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2025-03-10 06:45:31)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --no_simple_bridges --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/28/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2025-03-10 06:45:31)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2025-03-10 06:45:31)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/28/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/28/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/28/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/28/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/28/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/28/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.6.56+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/28/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/28/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/28/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/28/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/28/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/28/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/28/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.008     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.068    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.071    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.083    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.085    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.091    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.127     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.142     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.142     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.142     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.142     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.144     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.144     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.144     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.009     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:01.011     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.273     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.273     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.330     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.330     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.331     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.331     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.331     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:02.146  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:02.147  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:02.147     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.389     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.389     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.438     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.438     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.612     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.625     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.652     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.657     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.660     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.662     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.666     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.666     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.666     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.666     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.666     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.668     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.668     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.668     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.668     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.668     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.668     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.670     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.670     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.704     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.705     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.769     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.771     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.857     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.857     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.858     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.858     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.858     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.957     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:03.249     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.765     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:04.233     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:05.028     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:05.028     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.029     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:05.029     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:05.029     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:05.029     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.029     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:05.029     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:05.029     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:05.029     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE ==\n..\n-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2025-03-10 06:47:48)\nFilter by read depth        (2025-03-10 06:47:48)\nFilter homopolymer loops    (2025-03-10 06:47:48)\nMerge all possible          (2025-03-10 06:47:48)\nNormalise read depths       (2025-03-10 06:47:48)\nRemove zero length segments (2025-03-10 06:47:48)\nSort link order             (2025-03-10 06:47:48)\nGraph cleaning finished     (2025-03-10 06:47:48)\nSaving /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2025-03-10 06:47:48)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/28/working/spades_assembly/\n\n\nDetermining graph multiplicity (2025-03-10 06:47:48)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2025-03-10 06:47:48)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2025-03-10 06:47:48)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2025-03-10 06:47:48)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2025-03-10 06:47:48)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2025-03-10 06:47:48)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/28/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/28/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nDetermining low score threshold (2025-03-10 06:47:48)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2025-03-10 06:47:48)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2025-03-10 06:47:48)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.056 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2025-03-10 06:47:48)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/28/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2025-03-10 06:47:48)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2025-03-10 06:47:48)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2025-03-10 06:47:48)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2025-03-10 06:47:48)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2025-03-10 06:47:48)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2025-03-10 06:47:57)\nSaving /galaxy/server/database/jobs_directory/000/28/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/28/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/mulled-v2-12fced2530e0a51de91b029c85af463cedb62bee:8b255fc4d8ca8c1e1dbf4f41a9f274c2eaa17cc9-0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 06:45:30", "plugin": "core", "name": "start_epoch", "raw_value": "1741589130.0000000"}, {"title": "Job End Time", "value": "2025-03-10 06:47:57", "plugin": "core", "name": "end_epoch", "raw_value": "1741589277.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "147.0000000"}]}, "status": "success"}}, {"id": "vcfcheck/1.0.0_rc3+galaxy0-0", "has_data": true, "data": {"tool_id": "vcfcheck", "tool_version": "1.0.0_rc3+galaxy0", "test_index": 0, "time_seconds": 41.27408695220947, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "f02ae98826973e9a"}, "reference_source|input_vcf": {"src": "hda", "id": "a1192c6119b3fa40"}, "reference_source|reference_source_selector": "history", "failure_selector": "-x"}, "job": {"model_class": "Job", "id": "4675a84b3c797a25", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfcheck/vcfcheck/1.0.0_rc3+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:51:48.390524", "update_time": "2025-03-10T08:52:08.468334", "galaxy_version": "24.2", "external_id": "gxy-24n2z", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/1/e/3/dataset_1e3bd952-2293-4599-a03d-99a98647d358.dat' 'localref.fa' && vcfcheck -x -f 'localref.fa' '/galaxy/server/database/objects/d/f/0/dataset_df0853b0-2add-4f87-a688-493e3b0762f2.dat' > '/galaxy/server/database/jobs_directory/000/537/outputs/dataset_d6af15f0-b176-45ac-ae6a-ed90d0e95446.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"reference_source": "{\"__current_case__\": 1, \"input_vcf\": {\"values\": [{\"id\": 726, \"src\": \"hda\"}]}, \"ref_file\": {\"values\": [{\"id\": 725, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}", "failure_selector": "\"-x\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"fasta\""}, "inputs": {"reference_source|ref_file": {"id": "f02ae98826973e9a", "src": "hda", "uuid": "1e3bd952-2293-4599-a03d-99a98647d358"}, "reference_source|input_vcf": {"id": "a1192c6119b3fa40", "src": "hda", "uuid": "df0853b0-2add-4f87-a688-493e3b0762f2"}}, "outputs": {"out_file1": {"id": "facd9f04aa62bdcc", "src": "hda", "uuid": "d6af15f0-b176-45ac-ae6a-ed90d0e95446"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "index file localref.fa.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "index file localref.fa.fai not found, generating...\n", "job_messages": [{"code_desc": null, "desc": "Warning: Matched on index file", "error_level": 2, "match": "index file", "stream": "stderr", "type": "regex"}], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/vcflib:1.0.0_rc3--py37hc088bd4_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/vcflib:1.0.0_rc3--py37hc088bd4_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:51:56", "plugin": "core", "name": "start_epoch", "raw_value": "1741596716.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:51:56", "plugin": "core", "name": "end_epoch", "raw_value": "1741596716.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "vcfdistance/1.0.0_rc3+galaxy0-0", "has_data": true, "data": {"tool_id": "vcfdistance", "tool_version": "1.0.0_rc3+galaxy0", "test_index": 0, "time_seconds": 34.89436078071594, "inputs": {"input1": {"src": "hda", "id": "9e5bed3eb98b04c5"}}, "job": {"model_class": "Job", "id": "08da1ab0e51c0e95", "history_id": "4b1a7d772b7e4a7a", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfdistance/vcfdistance/1.0.0_rc3+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2025-03-10T08:52:30.600478", "update_time": "2025-03-10T08:52:44.555298", "galaxy_version": "24.2", "external_id": "gxy-6wsz7", "handler": null, "job_runner_name": null, "command_line": "cat '/galaxy/server/database/objects/a/2/4/dataset_a2455651-5354-4c85-a5e5-f70878f36d97.dat' | vcfdistance > '/galaxy/server/database/jobs_directory/000/539/outputs/dataset_ba2565be-acb9-4bd0-addc-bbc700d0d550.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"vcf\""}, "inputs": {"input1": {"id": "9e5bed3eb98b04c5", "src": "hda", "uuid": "a2455651-5354-4c85-a5e5-f70878f36d97"}}, "outputs": {"out_file1": {"id": "3a45e670798a3004", "src": "hda", "uuid": "ba2565be-acb9-4bd0-addc-bbc700d0d550"}}, "copied_from_job_id": null, "output_collections": {}, "user_id": "4b1a7d772b7e4a7a", "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Container ID", "value": "quay.io/biocontainers/vcflib:1.0.0_rc3--py37hc088bd4_0", "plugin": "core", "name": "container_id", "raw_value": "quay.io/biocontainers/vcflib:1.0.0_rc3--py37hc088bd4_0"}, {"title": "Container Type", "value": "docker", "plugin": "core", "name": "container_type", "raw_value": "docker"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2025-03-10 08:52:32", "plugin": "core", "name": "start_epoch", "raw_value": "1741596752.0000000"}, {"title": "Job End Time", "value": "2025-03-10 08:52:32", "plugin": "core", "name": "end_epoch", "raw_value": "1741596752.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}], "galaxy_url": "http://35.196.46.61:8000/galaxy/"}