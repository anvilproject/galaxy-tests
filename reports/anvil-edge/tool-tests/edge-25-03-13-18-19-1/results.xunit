<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="83"
           errors="2"
           failures="24"
           skip="0">
    
    <testcase classname="anndata_import (Test #1)" name="0" time="61.72047781944275">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "0b9b4e5d486ded9b",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/101/configs/tmpe81t5e2j\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/101/configs/tmpe81t5e2j\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:03:22.295785",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-w7hzm",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "fd8ce01ba59393af",  "inputs": {   "hd5_format|in|input": {    "id": "0b9b4e5d486ded9b",    "src": "hda",    "uuid": "5b5104e5-7f8e-4626-89b4-a7bc7ef92312"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741892621.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:03:41"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741892623.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:03:43"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "2af89b6bf2736d71",    "src": "hda",    "uuid": "3a85dd55-9286-4cee-b5b7-403b8e3bc521"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 148, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/5/b/5/dataset_5b5104e5-7f8e-4626-89b4-a7bc7ef92312.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/5/b/5/dataset_5b5104e5-7f8e-4626-89b4-a7bc7ef92312.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-13T19:04:02.162101",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 61.72047781944275, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/5/b/5/dataset_5b5104e5-7f8e-4626-89b4-a7bc7ef92312.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #1)" name="0" time="40.75523662567139">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "0015cd7ec3876690",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/118/configs/tmpkfji7j_3\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/118/configs/tmpkfji7j_3\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:08:44.814236",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-x6ck6",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "d8c9d72b6397b2c0",  "inputs": {   "hd5_format|in|input": {    "id": "0015cd7ec3876690",    "src": "hda",    "uuid": "7290a861-0c29-4ca2-b78e-093f3c64f0df"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741892926.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:08:46"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741892928.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:08:48"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "8cef5c7a76b839c9",    "src": "hda",    "uuid": "ab2a1ffd-99ff-4731-bee2-fc646a8718ed"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 165, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/7/2/9/dataset_7290a861-0c29-4ca2-b78e-093f3c64f0df.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/7/2/9/dataset_7290a861-0c29-4ca2-b78e-093f3c64f0df.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-13T19:09:01.655208",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 40.75523662567139, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/7/2/9/dataset_7290a861-0c29-4ca2-b78e-093f3c64f0df.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="40.57417941093445">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "a9e569fa225e2f12",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/103/configs/tmpzialyb16\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/103/configs/tmpzialyb16\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:04:25.425059",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-wb92r",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "584635d481db022a",  "inputs": {   "hd5_format|in|input": {    "id": "a9e569fa225e2f12",    "src": "hda",    "uuid": "3662cefc-89b8-4f5c-b2e9-b0cee8c9e5f8"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741892667.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:04:27"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741892669.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:04:29"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "cd84994004de4306",    "src": "hda",    "uuid": "beed45af-2e1c-4236-97df-a91b8832b02c"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 150, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/3/6/6/dataset_3662cefc-89b8-4f5c-b2e9-b0cee8c9e5f8.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/3/6/6/dataset_3662cefc-89b8-4f5c-b2e9-b0cee8c9e5f8.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-13T19:04:42.676561",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmpo87vn0d6import.csv.h5ad v. /tmp/tmppjc33e5cimport.csv.h5ad )\nFiles /tmp/tmpo87vn0d6import.csv.h5ad=29512b but /tmp/tmppjc33e5cimport.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 40.57417941093445, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/3/6/6/dataset_3662cefc-89b8-4f5c-b2e9-b0cee8c9e5f8.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="39.89671468734741">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "127680e6e604561e",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/120/configs/tmpackl_w6f\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/120/configs/tmpackl_w6f\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:09:25.429363",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-k546c",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "3698579392b7dcf1",  "inputs": {   "hd5_format|in|input": {    "id": "127680e6e604561e",    "src": "hda",    "uuid": "81b386b6-e223-40ae-8156-0460a5407a5a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741892966.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:09:26"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741892968.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:09:28"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "3b9e21b9963d7032",    "src": "hda",    "uuid": "f6455ece-1bd5-4963-96ff-c5c9cc44284d"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 167, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/8/1/b/dataset_81b386b6-e223-40ae-8156-0460a5407a5a.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/8/1/b/dataset_81b386b6-e223-40ae-8156-0460a5407a5a.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-13T19:09:41.618901",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmp5n_d_8nlimport.csv.h5ad v. /tmp/tmpjapj06vfimport.csv.h5ad )\nFiles /tmp/tmp5n_d_8nlimport.csv.h5ad=29512b but /tmp/tmpjapj06vfimport.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 39.89671468734741, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/8/1/b/dataset_81b386b6-e223-40ae-8156-0460a5407a5a.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="37.36921048164368">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "7dd2bf9da090ebb7",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/105/configs/tmpeox_vuwn\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/105/configs/tmpeox_vuwn\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:05:05.279884",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-8b7t4",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "9634bff9a3346862",  "inputs": {   "hd5_format|in|input": {    "id": "7dd2bf9da090ebb7",    "src": "hda",    "uuid": "59b532ac-e453-4755-b99d-4d5eaa997f9a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741892706.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:05:06"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741892708.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:05:08"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "89206faae7cf9df8",    "src": "hda",    "uuid": "83f14223-887f-4ac9-b6de-3366c4b4b929"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 152, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/5/9/b/dataset_59b532ac-e453-4755-b99d-4d5eaa997f9a.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/5/9/b/dataset_59b532ac-e453-4755-b99d-4d5eaa997f9a.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-13T19:05:20.315929",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 37.36921048164368, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/5/9/b/dataset_59b532ac-e453-4755-b99d-4d5eaa997f9a.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="38.617189168930054">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "621b3eef9b090602",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/122/configs/tmpl3bfvkvf\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/122/configs/tmpl3bfvkvf\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:10:03.758408",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-w6ng7",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "71a7a0a6027e3a89",  "inputs": {   "hd5_format|in|input": {    "id": "621b3eef9b090602",    "src": "hda",    "uuid": "33d305c0-9d11-400a-b279-79a6c4de6e1e"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741893005.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:10:05"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741893007.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:10:07"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "8402162fd2f5dc8f",    "src": "hda",    "uuid": "00192213-b953-4529-8ce7-36a3d0d288f7"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 169, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/3/3/d/dataset_33d305c0-9d11-400a-b279-79a6c4de6e1e.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/3/3/d/dataset_33d305c0-9d11-400a-b279-79a6c4de6e1e.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-13T19:10:20.265988",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 38.617189168930054, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/3/3/d/dataset_33d305c0-9d11-400a-b279-79a6c4de6e1e.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="41.01406407356262">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "8c7603378e75aea6",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/107/configs/tmp53bd5tr_\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/107/configs/tmp53bd5tr_\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:05:43.408899",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-p4656",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "0726f6a8aa510a82",  "inputs": {   "hd5_format|in|matrix": {    "id": "8c7603378e75aea6",    "src": "hda",    "uuid": "2ebd8773-6746-4784-9d2e-5d6fb79968d2"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741892745.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:05:45"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741892747.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:05:47"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "68ee652fd21a696f",    "src": "hda",    "uuid": "3c0a3a72-4fd7-4704-8c99-650b3b9ca595"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 154, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/2/e/b/dataset_2ebd8773-6746-4784-9d2e-5d6fb79968d2.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/2/e/b/dataset_2ebd8773-6746-4784-9d2e-5d6fb79968d2.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-13T19:06:01.290917",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 41.01406407356262, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/2/e/b/dataset_2ebd8773-6746-4784-9d2e-5d6fb79968d2.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="41.23664927482605">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "4a69970ba7764bd9",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/124/configs/tmp7tszqi1g\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/124/configs/tmp7tszqi1g\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:10:44.182385",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-8zvk7",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "6066f1b4545409f1",  "inputs": {   "hd5_format|in|matrix": {    "id": "4a69970ba7764bd9",    "src": "hda",    "uuid": "80b64744-c30f-4183-9fbb-eeb65edd9840"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741893046.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:10:46"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741893047.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:10:47"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "cff471e408592e17",    "src": "hda",    "uuid": "a3bc463b-3ced-4abf-80dc-c899f4d93694"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 171, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/8/0/b/dataset_80b64744-c30f-4183-9fbb-eeb65edd9840.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/8/0/b/dataset_80b64744-c30f-4183-9fbb-eeb65edd9840.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-13T19:11:01.692903",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 41.23664927482605, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/8/0/b/dataset_80b64744-c30f-4183-9fbb-eeb65edd9840.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="40.640430212020874">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "a7bc43f9f0e79aea",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/3/7/7/dataset_3771e2eb-4ccf-4f48-a272-d941e52577e1.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/109/configs/tmpjmd0yyv6\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/109/configs/tmpjmd0yyv6\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:06:25.205033",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-f2cbm",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "9aaccddd66f283d8",  "inputs": {   "hd5_format|in|input": {    "id": "a7bc43f9f0e79aea",    "src": "hda",    "uuid": "3771e2eb-4ccf-4f48-a272-d941e52577e1"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741892786.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:06:26"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741892788.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:06:28"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "38c9a4797c258bf4",    "src": "hda",    "uuid": "136fb42b-6acb-4979-afd1-5cdbdc54b073"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 156, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-13T19:06:42.028939",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 40.640430212020874, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="38.58872985839844">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "7473f5bc1a84785a",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/7/0/6/dataset_706f572a-75ca-4f9c-b504-2396af759425.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/126/configs/tmp5uedq7io\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/126/configs/tmp5uedq7io\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:11:23.582152",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-bjvrb",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "f8c287d133dd5df9",  "inputs": {   "hd5_format|in|input": {    "id": "7473f5bc1a84785a",    "src": "hda",    "uuid": "706f572a-75ca-4f9c-b504-2396af759425"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741893085.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:11:25"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741893087.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:11:27"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "631f876f21820c1f",    "src": "hda",    "uuid": "e64b075f-1eb0-43d8-92a3-becb1077cc93"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 173, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-03-13T19:11:40.399601",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 38.58872985839844, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="54.330885887145996">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|coldata": {   "id": "118ecab0d5167fb8",   "src": "hda"  },  "hd5_format|filetype": "loom",  "hd5_format|mainmatrix": {   "id": "2e09c1197c114b9e",   "src": "hda"  },  "hd5_format|other_files": {   "id": "9994835ac7ad7fc8",   "src": "hda"  },  "hd5_format|rowdata": {   "id": "e197210edc71e3de",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/fb9e030ffae4/anndata_import/tsv_to_loompy.py\u0027 -c \u0027/galaxy/server/database/objects/f/0/7/dataset_f07b7762-a752-4a1f-aad3-153f9e58b5b7.dat\u0027 -r \u0027/galaxy/server/database/objects/7/0/1/dataset_7018b08e-24c1-4177-9268-ca782fe19993.dat\u0027 -f \u0027/galaxy/server/database/objects/7/7/6/dataset_7765217c-8a7f-436a-9404-f7da788bf5ad.dat\u0027 \u0027/galaxy/server/database/objects/a/4/5/dataset_a45eb9ce-fd84-4a8e-b9c1-a41c3d372f22.dat\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:07:18.873706",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-qdpl5",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "46de01d396a72206",  "inputs": {   "hd5_format|coldata": {    "id": "118ecab0d5167fb8",    "src": "hda",    "uuid": "f07b7762-a752-4a1f-aad3-153f9e58b5b7"   },   "hd5_format|mainmatrix": {    "id": "2e09c1197c114b9e",    "src": "hda",    "uuid": "7765217c-8a7f-436a-9404-f7da788bf5ad"   },   "hd5_format|other_files": {    "id": "9994835ac7ad7fc8",    "src": "hda",    "uuid": "a45eb9ce-fd84-4a8e-b9c1-a41c3d372f22"   },   "hd5_format|other_files1": {    "id": "9994835ac7ad7fc8",    "src": "hda",    "uuid": "a45eb9ce-fd84-4a8e-b9c1-a41c3d372f22"   },   "hd5_format|rowdata": {    "id": "e197210edc71e3de",    "src": "hda",    "uuid": "7018b08e-24c1-4177-9268-ca782fe19993"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741892841.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:07:21"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741892842.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:07:22"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "loomdata": {    "id": "860c414865a74327",    "src": "hda",    "uuid": "46cdff9f-40fc-41e1-89b9-1e34b1a014be"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 1, \"coldata\": {\"values\": [{\"id\": 160, \"src\": \"hda\"}]}, \"filetype\": \"loom\", \"mainmatrix\": {\"values\": [{\"id\": 158, \"src\": \"hda\"}]}, \"other_files\": {\"values\": [{\"id\": 159, \"src\": \"hda\"}]}, \"rowdata\": {\"values\": [{\"id\": 161, \"src\": \"hda\"}]}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-03-13T19:07:36.369371",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output loomdata:  different than expected, difference (using sim_size):\n( /tmp/tmpyavc07fuconverted.loom.test v. /tmp/tmpmcj_43cpconverted.loom.test )\nFiles /tmp/tmpyavc07fuconverted.loom.test=41883b but /tmp/tmpmcj_43cpconverted.loom.test=28145b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 54.330885887145996, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="53.85524225234985">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|coldata": {   "id": "0593aa10da4a3fe4",   "src": "hda"  },  "hd5_format|filetype": "loom",  "hd5_format|mainmatrix": {   "id": "8cb4b8fef40dcee2",   "src": "hda"  },  "hd5_format|other_files": {   "id": "1b1c1f96ebcd49b9",   "src": "hda"  },  "hd5_format|rowdata": {   "id": "f8947b8b2af5cb65",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/fb9e030ffae4/anndata_import/tsv_to_loompy.py\u0027 -c \u0027/galaxy/server/database/objects/f/1/7/dataset_f1707fa7-50e0-456b-9ff6-16d69580bb9d.dat\u0027 -r \u0027/galaxy/server/database/objects/f/0/7/dataset_f0769b6f-3f42-4e05-93da-162c81572731.dat\u0027 -f \u0027/galaxy/server/database/objects/6/0/f/dataset_60f724a3-74c5-4875-90c0-cfe0c072e3c3.dat\u0027 \u0027/galaxy/server/database/objects/f/a/0/dataset_fa0d00d5-da7c-4570-b53c-de944db857ac.dat\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:12:16.957109",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-m5mxz",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "9dbe4b0fa3c68a7a",  "inputs": {   "hd5_format|coldata": {    "id": "0593aa10da4a3fe4",    "src": "hda",    "uuid": "f1707fa7-50e0-456b-9ff6-16d69580bb9d"   },   "hd5_format|mainmatrix": {    "id": "8cb4b8fef40dcee2",    "src": "hda",    "uuid": "60f724a3-74c5-4875-90c0-cfe0c072e3c3"   },   "hd5_format|other_files": {    "id": "1b1c1f96ebcd49b9",    "src": "hda",    "uuid": "fa0d00d5-da7c-4570-b53c-de944db857ac"   },   "hd5_format|other_files1": {    "id": "1b1c1f96ebcd49b9",    "src": "hda",    "uuid": "fa0d00d5-da7c-4570-b53c-de944db857ac"   },   "hd5_format|rowdata": {    "id": "f8947b8b2af5cb65",    "src": "hda",    "uuid": "f0769b6f-3f42-4e05-93da-162c81572731"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-b3544c97ae88d85d8b9acc7193ca8242afb1d703:12dbe88e1cf665ab7b08338eaa48e522037bc693-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741893138.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:12:18"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741893140.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:12:20"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "loomdata": {    "id": "5b0d591332527e86",    "src": "hda",    "uuid": "080c73a3-6a6b-4d23-a73d-25401a7a9149"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 1, \"coldata\": {\"values\": [{\"id\": 177, \"src\": \"hda\"}]}, \"filetype\": \"loom\", \"mainmatrix\": {\"values\": [{\"id\": 175, \"src\": \"hda\"}]}, \"other_files\": {\"values\": [{\"id\": 176, \"src\": \"hda\"}]}, \"rowdata\": {\"values\": [{\"id\": 178, \"src\": \"hda\"}]}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-03-13T19:12:34.215078",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output loomdata:  different than expected, difference (using sim_size):\n( /tmp/tmpn0a3wrv8converted.loom.test v. /tmp/tmpu0t6uwgrconverted.loom.test )\nFiles /tmp/tmpn0a3wrv8converted.loom.test=41883b but /tmp/tmpu0t6uwgrconverted.loom.test=28145b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 53.85524225234985, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="43.01167702674866">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/b/a/b/dataset_bab8dfea-ea6f-4327-ab1b-dc7732f4afae.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="43.37296271324158">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/b/0/d/dataset_b0d806cb-12f0-45b1-8a45-358e713b5219.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_fixploidy (Test #1)" name="0" time="54.0216269493103">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #1)" name="0" time="72.12351679801941">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #3)" name="2" time="70.24464058876038">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Parsing bcftools stats output: /galaxy/server/database/jobs_directory/000/190/outputs/dataset_8b071c02-1b1d-40c3-8c95-40772fafa404.datPlotting graphs: python3 plot.pyCreating PDF: tectonic summary.tex >plot-vcfstats.log 2>&1Finished: plot_tmp//summary.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #4)" name="3" time="39.822295904159546">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #5)" name="4" time="37.814247131347656">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #1)" name="0" time="39.815086126327515">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #2)" name="1" time="39.96302771568298">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #1)" name="0" time="84.6808693408966">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #2)" name="1" time="41.071682929992676">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "corData": {   "id": "d41099d84304ab16",   "src": "hda"  },  "outFileFormat": "png",  "plotting_type|plotTitle": "Test Plot",  "plotting_type|whatToPlot": "scatterplot",  "removeOutliers": true }, "job": {  "command_line": "plotCorrelation --corData \u0027/galaxy/server/database/objects/d/3/4/dataset_d34fd170-1a88-4878-bb70-1bc7d440aaaa.dat\u0027 --plotFile \u0027/galaxy/server/database/jobs_directory/000/8/outputs/dataset_8a9e8828-13ca-4d16-80ec-431196e1ef0e.dat\u0027 --corMethod \u0027spearman\u0027 --whatToPlot \u0027scatterplot\u0027 --plotTitle \u0027Test Plot\u0027   --plotFileFormat \u0027png\u0027 --removeOutliers",  "command_version": "plotCorrelation 3.5.4",  "copied_from_job_id": null,  "create_time": "2025-03-13T18:39:04.037121",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-8489q",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "d41099d84304ab16",  "inputs": {   "corData": {    "id": "d41099d84304ab16",    "src": "hda",    "uuid": "d34fd170-1a88-4878-bb70-1bc7d440aaaa"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-eb9e7907c7a753917c1e4d7a64384c047429618a:bcea566aaf2a8cd09765df369b45c50e0b7e9f18-1",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-eb9e7907c7a753917c1e4d7a64384c047429618a:bcea566aaf2a8cd09765df369b45c50e0b7e9f18-1"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "21474.0000000",    "title": "Memory Allocated (MB)",    "value": "21474"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741891146.0000000",    "title": "Job Start Time",    "value": "2025-03-13 18:39:06"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741891149.0000000",    "title": "Job End Time",    "value": "2025-03-13 18:39:09"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outFileName": {    "id": "a6ac9e2b11faeedf",    "src": "hda",    "uuid": "8a9e8828-13ca-4d16-80ec-431196e1ef0e"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "corMethod": "\"spearman\"",   "dbkey": "\"?\"",   "outFileCorMatrix": "false",   "outFileFormat": "\"png\"",   "plotting_type": "{\"__current_case__\": 1, \"log1p\": false, \"plotTitle\": \"Test Plot\", \"whatToPlot\": \"scatterplot\", \"xrange_conditional\": {\"__current_case__\": 1, \"xrange_select\": \"no\"}, \"yrange_conditional\": {\"__current_case__\": 1, \"yrange_select\": \"no\"}}",   "removeOutliers": "true",   "skipZeros": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_correlation/deeptools_plot_correlation/3.5.4+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-03-13T18:39:22.860586",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output outFileName:  different than expected, difference (using sim_size):\n( /tmp/tmpi9r_0y14plotCorrelation_result2.png v. /tmp/tmpxlpegocoplotCorrelation_result2.png )\nFiles /tmp/tmpi9r_0y14plotCorrelation_result2.png=11943b but /tmp/tmpxlpegocoplotCorrelation_result2.png=12341b - compare by size (delta=300) failed" ], "status": "failure", "test_index": 1, "time_seconds": 41.071682929992676, "tool_id": "deeptools_plot_correlation", "tool_version": "3.5.4+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #1)" name="0" time="45.515538692474365">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #2)" name="1" time="44.429778814315796">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #3)" name="2" time="41.596989154815674">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/e/c/5/dataset_ec5a6db1-e581-476a-8bdd-52e23d00209d.dat[FLASH]     /galaxy/server/database/objects/7/1/7/dataset_71721e9c-0b5a-40f8-8bc3-a8657e8e1eb7.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=64[FLASH]     Output format:         FASTQ, phred_offset=64[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 200 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      200[FLASH]     Combined pairs:   5[FLASH]     Uncombined pairs: 195[FLASH]     Percent combined: 2.50%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.032 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #4)" name="3" time="41.73292517662048">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #5)" name="4" time="39.747671127319336">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/0/9/4/dataset_0943f0a8-25b4-4714-bd73-d16e00d81f23.dat[FLASH]     /galaxy/server/database/objects/5/f/6/dataset_5f655467-189c-4d3a-92d2-9e33016dca14.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=33[FLASH]     Output format:         FASTQ, phred_offset=33, gzip[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 500 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      500[FLASH]     Combined pairs:   18[FLASH]     Uncombined pairs: 482[FLASH]     Percent combined: 3.60%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.057 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #1)" name="0" time="50.875115156173706">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "ecd0e7e0e82341bf",   "src": "hda"  },  "reference_source|ref": {   "id": "2cee301bffee3a34",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/a/5/4/dataset_a54c4379-8e8b-4acd-8172-9bdd34e7ced7.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/1/b/3/dataset_1b32bd4d-511d-4382-b62b-2ee7e001c75e.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/e/1/d/metadata_e1d0f1c9-fb23-4d45-b72b-6ac5ca3544e3.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:26:57.245228",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-qw8kl",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "3b9e21b9963d7032",  "inputs": {   "reads": {    "id": "ecd0e7e0e82341bf",    "src": "hda",    "uuid": "1b32bd4d-511d-4382-b62b-2ee7e001c75e"   },   "reference_source|ref": {    "id": "2cee301bffee3a34",    "src": "hda",    "uuid": "a54c4379-8e8b-4acd-8172-9bdd34e7ced7"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15",    "title": "Container ID",    "value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741894025.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:27:05"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741894029.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:27:09"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "4d075c780ec0013e",    "src": "hda",    "uuid": "4017e852-cc36-4a9e-8330-9450cf66a780"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 235, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-03-13 19:27:05,796]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-03-13 19:27:05,991]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-13 19:27:09,485]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelc44en2xc/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-03-13 19:27:05,796]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-03-13 19:27:05,991]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-13 19:27:09,485]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelc44en2xc/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-03-13T19:27:24.062973",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmppvirf4m4call-out1.vcf v. /tmp/tmpeeuxcgbqcall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250313\n+##source=lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelc44en2xc/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelc44en2xc/concat.vcf.gz /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelc44en2xc/0.vcf.gz /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelc44en2xc/1.vcf.gz /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelc44en2xc/2.vcf.gz /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelc44en2xc/3.vcf.gz /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelc44en2xc/4.vcf.gz; Date=Thu Mar 13 19:27:09 2025\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 0, "time_seconds": 50.875115156173706, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-03-13 19:27:05,796]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bamINFO [2025-03-13 19:27:05,991]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-03-13 19:27:09,485]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/168/tmp/lofreq2_call_parallelc44en2xc/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #2)" name="1" time="43.30729842185974">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "reads": {   "id": "8b1b56020afdb2a7",   "src": "hda"  },  "reference_source|ref": {   "id": "3e94020aed8a34df",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/2/e/7/dataset_2e70d804-2a36-4621-82bf-6a5551fbb62b.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/c/6/3/dataset_c634e36a-503b-42cd-8953-f9951cada17d.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/e/f/a/metadata_efa13339-57d4-4e07-a7d9-2934d1964fb8.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:27:48.416416",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-f8drb",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "4a69970ba7764bd9",  "inputs": {   "reads": {    "id": "8b1b56020afdb2a7",    "src": "hda",    "uuid": "c634e36a-503b-42cd-8953-f9951cada17d"   },   "reference_source|ref": {    "id": "3e94020aed8a34df",    "src": "hda",    "uuid": "2e70d804-2a36-4621-82bf-6a5551fbb62b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15",    "title": "Container ID",    "value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741894070.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:27:50"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741894074.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:27:54"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "ffd9300843a813ae",    "src": "hda",    "uuid": "c05888e2-7d2e-42dd-a2f4-46ea1f55d044"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 0, \"src_qual\": \"\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 238, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-03-13 19:27:50,817]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-03-13 19:27:50,972]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-13 19:27:54,068]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallelq0cphv2t/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-03-13 19:27:50,817]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-03-13 19:27:50,972]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-13 19:27:54,068]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallelq0cphv2t/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-03-13T19:28:07.511687",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpm861go7_call-out1.vcf v. /tmp/tmppdh76ybmcall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250313\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallelq0cphv2t/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallelq0cphv2t/concat.vcf.gz /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallelq0cphv2t/0.vcf.gz /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallelq0cphv2t/1.vcf.gz /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallelq0cphv2t/2.vcf.gz /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallelq0cphv2t/3.vcf.gz /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallelq0cphv2t/4.vcf.gz; Date=Thu Mar 13 19:27:53 2025\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 1, "time_seconds": 43.30729842185974, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-03-13 19:27:50,817]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2025-03-13 19:27:50,972]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-03-13 19:27:54,068]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/171/tmp/lofreq2_call_parallelq0cphv2t/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #3)" name="2" time="48.10364055633545">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "call_control|source_qual|use_src_qual|def_nm_q": "40",  "call_control|source_qual|use_src_qual|ign_vcf": {   "id": "9cd5cdf0d0058380",   "src": "hda"  },  "call_control|source_qual|use_src_qual|src_qual": "--src-qual",  "reads": {   "id": "cde15c33434b18ad",   "src": "hda"  },  "reference_source|ref": {   "id": "0fa229c1b80a09c1",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/b/b/f/dataset_bbfdadc7-7614-46b4-88c3-f9ef306c1c98.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/7/b/4/dataset_7b4e4d0a-74d7-45e2-8481-80acc6a5caa7.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/2/f/6/metadata_2f6a2001-5493-4c17-9a5d-c3d9a04cfd2c.dat\u0027 reads.bam.bai \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/e/1/6/dataset_e1659f2e-d399-4a32-a3bb-7a8a73412dd6.dat\u0027 ign0.vcf \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --src-qual --ign-vcf \u0027ign0.vcf\u0027 --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:28:35.862905",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-2n5jx",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "8cb4b8fef40dcee2",  "inputs": {   "call_control|source_qual|use_src_qual|ign_vcf": {    "id": "9cd5cdf0d0058380",    "src": "hda",    "uuid": "e1659f2e-d399-4a32-a3bb-7a8a73412dd6"   },   "call_control|source_qual|use_src_qual|ign_vcf1": {    "id": "9cd5cdf0d0058380",    "src": "hda",    "uuid": "e1659f2e-d399-4a32-a3bb-7a8a73412dd6"   },   "reads": {    "id": "cde15c33434b18ad",    "src": "hda",    "uuid": "7b4e4d0a-74d7-45e2-8481-80acc6a5caa7"   },   "reference_source|ref": {    "id": "0fa229c1b80a09c1",    "src": "hda",    "uuid": "bbfdadc7-7614-46b4-88c3-f9ef306c1c98"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15",    "title": "Container ID",    "value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741894118.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:28:38"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741894122.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:28:42"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "f3ea5f8daf22aac2",    "src": "hda",    "uuid": "f13bbea4-4a2e-4916-b8f2-adc64fdf4386"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 1, \"def_nm_q\": \"40\", \"ign_vcf\": {\"values\": [{\"id\": 242, \"src\": \"hda\"}]}, \"src_qual\": \"--src-qual\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 241, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-03-13 19:28:38,820]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-03-13 19:28:39,007]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-13 19:28:42,709]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallel83egozr1/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-03-13 19:28:38,820]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-03-13 19:28:39,007]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-13 19:28:42,709]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallel83egozr1/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-03-13T19:28:55.496635",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmp3i9_u16mcall-out1.vcf v. /tmp/tmpg2mqf02kcall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250313\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallel83egozr1/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallel83egozr1/concat.vcf.gz /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallel83egozr1/0.vcf.gz /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallel83egozr1/1.vcf.gz /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallel83egozr1/2.vcf.gz /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallel83egozr1/3.vcf.gz /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallel83egozr1/4.vcf.gz; Date=Thu Mar 13 19:28:42 2025\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 2, "time_seconds": 48.10364055633545, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-03-13 19:28:38,820]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2025-03-13 19:28:39,007]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-03-13 19:28:42,709]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/175/tmp/lofreq2_call_parallel83egozr1/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #4)" name="3" time="40.71473956108093">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "2bf43356495ec638",   "src": "hda"  },  "reference_source|ref": {   "id": "8b13799c35c30dc3",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/8/2/d/dataset_82d3101f-3795-444b-8861-ba7d32d8993b.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/e/d/2/dataset_ed2c038b-3f41-4d63-9568-4983f7e95fab.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/6/e/9/metadata_6e9ab2b0-057e-4ea4-a0e1-8f1c8c3e8bac.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:29:19.577098",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-wt5z9",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "f8947b8b2af5cb65",  "inputs": {   "reads": {    "id": "2bf43356495ec638",    "src": "hda",    "uuid": "ed2c038b-3f41-4d63-9568-4983f7e95fab"   },   "reference_source|ref": {    "id": "8b13799c35c30dc3",    "src": "hda",    "uuid": "82d3101f-3795-444b-8861-ba7d32d8993b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15",    "title": "Container ID",    "value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741894161.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:29:21"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741894164.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:29:24"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "98f09003ab032f14",    "src": "hda",    "uuid": "7a39f9f7-7d0f-47d3-911d-f5fe8fae749c"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 245, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-03-13 19:29:21,558]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-03-13 19:29:21,587]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-13 19:29:24,149]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-03-13 19:29:21,558]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-03-13 19:29:21,587]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-03-13 19:29:24,149]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2025-03-13T19:29:36.450083",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpwrluq6jkcall-out2.vcf v. /tmp/tmp424b7bzmcall-out2.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallelg3dmyvln/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250313\n+##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/178/tmp/lofreq2_call_parallelzof9ck3_/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,6 +10,9 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/178/tmp/lofreq2_call_parallelzof9ck3_/concat.vcf.gz /galaxy/server/database/jobs_directory/000/178/tmp/lofreq2_call_parallelzof9ck3_/0.vcf.gz /galaxy/server/database/jobs_directory/000/178/tmp/lofreq2_call_parallelzof9ck3_/1.vcf.gz /galaxy/server/database/jobs_directory/000/178/tmp/lofreq2_call_parallelzof9ck3_/2.vcf.gz /galaxy/server/database/jobs_directory/000/178/tmp/lofreq2_call_parallelzof9ck3_/3.vcf.gz /galaxy/server/database/jobs_directory/000/178/tmp/lofreq2_call_parallelzof9ck3_/4.vcf.gz; Date=Thu Mar 13 19:29:24 2025\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t815\t.\tA\tG\t0\t.\tDP=665;AF=0.003008;SB=6;DP4=333,311,0,2\n pBR322\t861\t.\tA\tC\t0\t.\tDP=946;AF=0.002114;SB=3;DP4=447,497,0,2\n@@ -17,11 +21,11 @@\n pBR322\t1068\t.\tT\tG\t0\t.\tDP=1774;AF=0.000564;SB=3;DP4=853,920,1,0\n pBR322\t1084\t.\tG\tT\t0\t.\tDP=1789;AF=0.000559;SB=3;DP4=875,913,1,0\n pBR322\t1113\t.\tT\tA\t0\t.\tDP=1784;AF=0.000561;SB=0;DP4=885,898,0,1\n-pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n pBR322\t1193\t.\tG\tA\t0\t.\tDP=1698;AF=0.000589;SB=3;DP4=865,832,0,1\n pBR322\t1218\t.\tA\tC\t0\t.\tDP=1708;AF=0.000585;SB=3;DP4=875,831,0,1\n pBR322\t1230\t.\tT\tC\t0\t.\tDP=1759;AF=0.000569;SB=3;DP4=907,850,0,1\n pBR322\t1256\t.\tA\tG\t0\t.\tDP=1746;AF=0.000573;SB=0;DP4=902,842,1,0\n pBR322\t1498\t.\tC\tG\t0\t.\tDP=1195;AF=0.000837;SB=3;DP4=588,606,1,0\n pBR322\t1503\t.\tT\tG\t0\t.\tDP=1156;AF=0.000865;SB=3;DP4=563,592,1,0\n-pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.000880;SB=0;DP4=560,576,0,1\n+pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.00088;SB=0;DP4=560,576,0,1\n" ], "status": "failure", "test_index": 3, "time_seconds": 40.71473956108093, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-03-13 19:29:21,558]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2025-03-13 19:29:21,587]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-03-13 19:29:24,149]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #5)" name="4" time="43.208494424819946">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "6cb4d2c1f46ed537",   "src": "hda"  },  "reference_source|ref": {   "id": "90546bd65d2d48da",   "src": "hda"  },  "reference_source|ref_selector": "history",  "variant_types": "--call-indels --only-indels" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/9/d/6/dataset_9d64f7c6-3b42-47f4-8aa1-6331094cead0.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/c/e/2/dataset_ce229300-d63e-4e80-8ff2-cdd042ee2ef0.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/5/a/2/metadata_5a262473-7753-4a6f-8649-420bbf5ca34f.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf --call-indels --only-indels    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:29:59.957329",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-jrdnm",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "2527b15bf1c9c3ca",  "inputs": {   "reads": {    "id": "6cb4d2c1f46ed537",    "src": "hda",    "uuid": "ce229300-d63e-4e80-8ff2-cdd042ee2ef0"   },   "reference_source|ref": {    "id": "90546bd65d2d48da",    "src": "hda",    "uuid": "9d64f7c6-3b42-47f4-8aa1-6331094cead0"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15",    "title": "Container ID",    "value": "quay.io/biocontainers/lofreq:2.1.5--py312ha5e83ca_15"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741894202.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:30:02"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741894206.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:30:06"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "b05b8d268d5ddfec",    "src": "hda",    "uuid": "e4268161-7a5b-47d4-a2dc-03c2c5a7f323"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 248, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"--call-indels --only-indels\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-03-13 19:30:02,843]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-03-13 19:30:02,894]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2025-03-13 19:30:06,678]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-03-13 19:30:02,843]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-03-13 19:30:02,894]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2025-03-13 19:30:06,678]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2025-03-13T19:30:19.594949",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpa84zs68hindel-call-out.vcf v. /tmp/tmpum67gv0jindel-call-out.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/31/working/pp-tmp/lofreq2_call_parallel4gfado3q/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250313\n+##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/181/tmp/lofreq2_call_parallel6c2e6q53/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,13 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/181/tmp/lofreq2_call_parallel6c2e6q53/concat.vcf.gz /galaxy/server/database/jobs_directory/000/181/tmp/lofreq2_call_parallel6c2e6q53/0.vcf.gz /galaxy/server/database/jobs_directory/000/181/tmp/lofreq2_call_parallel6c2e6q53/1.vcf.gz /galaxy/server/database/jobs_directory/000/181/tmp/lofreq2_call_parallel6c2e6q53/2.vcf.gz /galaxy/server/database/jobs_directory/000/181/tmp/lofreq2_call_parallel6c2e6q53/3.vcf.gz /galaxy/server/database/jobs_directory/000/181/tmp/lofreq2_call_parallel6c2e6q53/4.vcf.gz; Date=Thu Mar 13 19:30:06 2025\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t725\t.\tG\tGN\t0\t.\tDP=46;AF=0.021739;SB=0;DP4=22,23,0,1;INDEL;HRUN=1\n pBR322\t746\t.\tA\tAN\t0\t.\tDP=225;AF=0.004444;SB=3;DP4=116,108,0,1;INDEL;HRUN=1\n pBR322\t747\t.\tT\tTN\t0\t.\tDP=230;AF=0.004348;SB=3;DP4=118,111,0,1;INDEL;HRUN=1\n pBR322\t751\t.\tG\tGN\t0\t.\tDP=255;AF=0.003922;SB=3;DP4=128,126,0,1;INDEL;HRUN=1\n-pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.001650;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n+pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.00165;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n pBR322\t943\t.\tC\tCCG\t0\t.\tDP=1465;AF=0.000683;SB=0;DP4=709,755,0,1;INDEL;HRUN=1\n-pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.000570;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n+pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.00057;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n pBR322\t1271\t.\tA\tAN\t0\t.\tDP=1743;AF=0.000574;SB=0;DP4=890,855,1,0;INDEL;HRUN=2\n pBR322\t1376\t.\tA\tANN\t0\t.\tDP=1691;AF=0.000591;SB=3;DP4=849,843,0,1;INDEL;HRUN=1\n" ], "status": "failure", "test_index": 4, "time_seconds": 43.208494424819946, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-03-13 19:30:02,843]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2025-03-13 19:30:02,894]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 0Number of indel tests performed: 9INFO [2025-03-13 19:30:06,678]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #1)" name="0" time="80.4194188117981">
        
            
            <system-out><![CDATA[
            [18:47:55 - DataStre] Loaded sample register.[18:47:55 - DataStre] Loaded sample register.[18:47:55 - DataIndx] Loaded 1/2 (50.00%) sample files.[18:47:55 - DataIndx] Loaded 2/2 (100.00%) sample files.[18:47:55 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:47:55 - Variants] Processing NC_045512.2:0-.[18:47:55 - TrimOlap] NC_045512.2:30.0-2939.0 is contained within NC_045512.2:30.0-2939.0, skipping.
            ]]></system-out>
            <system-err><![CDATA[
            [18:47:58 - Annotate] Getting chrom coordinates[18:47:58 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:47:58 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #2)" name="1" time="51.759846687316895">
        
            
            <system-out><![CDATA[
            [18:48:53 - DataStre] Loaded sample register.[18:48:53 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:48:53 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:48:53 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            [18:48:56 - Annotate] Getting chrom coordinates[18:48:56 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:48:56 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #3)" name="2" time="41.81333303451538">
        
            
            <system-out><![CDATA[
            [18:49:38 - DataStre] Loaded sample register.[18:49:38 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:49:39 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:49:39 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_times (Test #1)" name="0" time="72.41480684280396">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="68.44088101387024">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="42.56641674041748">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="42.795340061187744">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="43.44336795806885">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="42.96260738372803">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="44.92399287223816">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="44.15000104904175">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="44.743186712265015">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="56.72297668457031">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="50.4509973526001">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #1)" name="0" time="62.72727680206299">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00130249sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 5.083e-05sWriting sequence data to file . . . doneElapsed time: 9.539e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00011894sdoneElapsed time: 0.00324702sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00167957sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ threads ] => { 8 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-03-13 18:51:54.818] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-03-13 18:51:54.881] [jointLog] [info] Loading Quasi index[2025-03-13 18:51:54.885] [jointLog] [info] done[2025-03-13 18:51:54.883] [stderrLog] [info] Loading Suffix Array [2025-03-13 18:51:54.883] [stderrLog] [info] Loading Position Hash[2025-03-13 18:51:54.884] [stderrLog] [info] Loading Transcript Info [2025-03-13 18:51:54.884] [stderrLog] [info] Loading Rank-Select Bit Array[2025-03-13 18:51:54.885] [stderrLog] [info] There were 15 set bits in the bit array[2025-03-13 18:51:54.885] [stderrLog] [info] Computing transcript lengths[2025-03-13 18:51:54.885] [stderrLog] [info] Waiting to finish loading hash[2025-03-13 18:51:54.885] [stderrLog] [info] Done loading index[2025-03-13 18:51:54.906] [jointLog] [info] Gathered fragment lengths from all threads[2025-03-13 18:51:54.906] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-03-13 18:51:54.907] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-03-13 18:51:54.920] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-03-13 18:51:54.920] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-03-13 18:51:54.920] [jointLog] [info] Starting optimizer:[2025-03-13 18:51:54.921] [jointLog] [info] Optimizing over 21 equivalence classes[2025-03-13 18:51:54.921] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-03-13 18:51:54.921] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687[2025-03-13 18:51:54.921] [jointLog] [info] Finished optimizer[2025-03-13 18:51:54.921] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #2)" name="1" time="45.34649848937988">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00132104sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 3.141e-05sWriting sequence data to file . . . doneElapsed time: 5.192e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00019183sdoneElapsed time: 0.00912307sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00162329sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { /dev/fd/63 }# [ mates2 ] => { /dev/fd/62 }# [ libType ] => { IU }# [ output ] => { ./results }# [ threads ] => { 8 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-03-13 18:52:42.568] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-03-13 18:52:42.634] [jointLog] [info] Loading Quasi index[2025-03-13 18:52:42.639] [jointLog] [info] done[2025-03-13 18:52:42.636] [stderrLog] [info] Loading Suffix Array [2025-03-13 18:52:42.637] [stderrLog] [info] Loading Position Hash[2025-03-13 18:52:42.638] [stderrLog] [info] Loading Transcript Info [2025-03-13 18:52:42.639] [stderrLog] [info] Loading Rank-Select Bit Array[2025-03-13 18:52:42.639] [stderrLog] [info] There were 15 set bits in the bit array[2025-03-13 18:52:42.639] [stderrLog] [info] Computing transcript lengths[2025-03-13 18:52:42.639] [stderrLog] [info] Waiting to finish loading hash[2025-03-13 18:52:42.639] [stderrLog] [info] Done loading index[2025-03-13 18:52:42.658] [jointLog] [info] Gathered fragment lengths from all threads[2025-03-13 18:52:42.658] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-03-13 18:52:42.659] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-03-13 18:52:42.670] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-03-13 18:52:42.670] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-03-13 18:52:42.671] [jointLog] [info] Starting optimizer:[2025-03-13 18:52:42.671] [jointLog] [info] Optimizing over 21 equivalence classes[2025-03-13 18:52:42.671] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-03-13 18:52:42.672] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687[2025-03-13 18:52:42.672] [jointLog] [info] Finished optimizer[2025-03-13 18:52:42.672] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #3)" name="2" time="49.58774161338806">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00131881sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 2.6709e-05sWriting sequence data to file . . . doneElapsed time: 4.854e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 9.621e-05sdoneElapsed time: 0.00260268sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00101473sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 8 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-03-13 18:53:32.213] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-03-13 18:53:32.272] [jointLog] [info] Loading Quasi index[2025-03-13 18:53:32.275] [jointLog] [info] done[2025-03-13 18:53:32.297] [jointLog] [info] Gathered fragment lengths from all threads[2025-03-13 18:53:32.297] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-03-13 18:53:32.297] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-03-13 18:53:32.273] [stderrLog] [info] Loading Suffix Array [2025-03-13 18:53:32.273] [stderrLog] [info] Loading Position Hash[2025-03-13 18:53:32.274] [stderrLog] [info] Loading Transcript Info [2025-03-13 18:53:32.275] [stderrLog] [info] Loading Rank-Select Bit Array[2025-03-13 18:53:32.275] [stderrLog] [info] There were 15 set bits in the bit array[2025-03-13 18:53:32.275] [stderrLog] [info] Computing transcript lengths[2025-03-13 18:53:32.275] [stderrLog] [info] Waiting to finish loading hash[2025-03-13 18:53:32.275] [stderrLog] [info] Done loading index[2025-03-13 18:53:32.308] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-03-13 18:53:32.308] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-03-13 18:53:32.309] [jointLog] [info] Starting optimizer:[2025-03-13 18:53:32.309] [jointLog] [info] Optimizing over 21 equivalence classes[2025-03-13 18:53:32.309] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-03-13 18:53:32.309] [jointLog] [info] iteration 50, recomputing effective lengths[2025-03-13 18:53:32.311] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2025-03-13 18:53:32.311] [jointLog] [info] Finished optimizer[2025-03-13 18:53:32.311] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #4)" name="3" time="51.447394371032715">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00123831sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 7.122e-05sWriting sequence data to file . . . doneElapsed time: 8.509e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.00010217sdoneElapsed time: 0.00267009sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00101809sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 8 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ geneMap ] => { ./geneMap.tabular }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-03-13 18:54:23.047] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-03-13 18:54:23.107] [jointLog] [info] Loading Quasi index[2025-03-13 18:54:23.111] [jointLog] [info] done[2025-03-13 18:54:23.109] [stderrLog] [info] Loading Suffix Array [2025-03-13 18:54:23.109] [stderrLog] [info] Loading Position Hash[2025-03-13 18:54:23.110] [stderrLog] [info] Loading Transcript Info [2025-03-13 18:54:23.110] [stderrLog] [info] Loading Rank-Select Bit Array[2025-03-13 18:54:23.111] [stderrLog] [info] There were 15 set bits in the bit array[2025-03-13 18:54:23.111] [stderrLog] [info] Computing transcript lengths[2025-03-13 18:54:23.111] [stderrLog] [info] Waiting to finish loading hash[2025-03-13 18:54:23.111] [stderrLog] [info] Done loading index[2025-03-13 18:54:23.132] [jointLog] [info] Gathered fragment lengths from all threads[2025-03-13 18:54:23.132] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-03-13 18:54:23.133] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-03-13 18:54:23.144] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-03-13 18:54:23.144] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-03-13 18:54:23.144] [jointLog] [info] Starting optimizer:[2025-03-13 18:54:23.145] [jointLog] [info] Optimizing over 21 equivalence classes[2025-03-13 18:54:23.145] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-03-13 18:54:23.145] [jointLog] [info] iteration 50, recomputing effective lengths[2025-03-13 18:54:23.146] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2025-03-13 18:54:23.146] [jointLog] [info] Finished optimizer[2025-03-13 18:54:23.146] [jointLog] [info] writing output Computing gene-level abundance estimatesThere were 3 transcripts mapping to 3 genesWARNING: couldn't find transcript named [NR_031764]; returning transcript  as it's own genedoneAggregating expressions to gene level . . . done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #1)" name="0" time="54.86314868927002">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #2)" name="1" time="40.59094285964966">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #3)" name="2" time="39.02943277359009">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #4)" name="3" time="38.77955174446106">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #5)" name="4" time="40.6127712726593">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #6)" name="5" time="38.89526963233948">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="45.94734477996826">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="39.38885688781738">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="40.41399335861206">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="40.64782691001892">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="39.57803225517273">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="38.89663052558899">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #1)" name="0" time="82.24533796310425">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "9e09e9b2c795ff79",   "src": "hda"  },  "advanced_common|show_log": true,  "method|exclude_highly_expressed|exclude_highly_expressed": "False",  "method|key_added": "n_counts",  "method|layer_norm": "None",  "method|layers": "all",  "method|method": "pp.normalize_total" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/1/8/6/dataset_186a5d07-6c34-40a7-b201-e26e43bcd340.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/155/configs/tmpip1ax6rr\u0027 \u003e \u0027/galaxy/server/database/jobs_directory/000/155/outputs/dataset_7286053a-d239-43be-98e6-91733d15a24b.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/155/configs/tmpip1ax6rr\u0027 \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/155/outputs/dataset_7286053a-d239-43be-98e6-91733d15a24b.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/155/outputs/dataset_7286053a-d239-43be-98e6-91733d15a24b.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:21:48.453067",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-hvw79",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "68ee652fd21a696f",  "inputs": {   "adata": {    "id": "9e09e9b2c795ff79",    "src": "hda",    "uuid": "186a5d07-6c34-40a7-b201-e26e43bcd340"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741893737.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:22:17"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741893742.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:22:22"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "de4160d3e795c03f",    "src": "hda",    "uuid": "ac394259-bd11-4cbc-b8c9-00b433e48e7e"   },   "hidden_output": {    "id": "0950bf66534af82f",    "src": "hda",    "uuid": "7286053a-d239-43be-98e6-91733d15a24b"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 0, \"exclude_highly_expressed\": {\"__current_case__\": 1, \"exclude_highly_expressed\": \"False\"}, \"key_added\": \"n_counts\", \"layer_norm\": \"None\", \"layers\": \"all\", \"method\": \"pp.normalize_total\", \"target_sum\": \"\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2025-03-13T19:22:45.304525",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata_out: Test output file (pp.normalize_total.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 82.24533796310425, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #2)" name="1" time="45.490766763687134">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "e294b0a5cfb8a795",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_zheng17",  "method|n_top_genes": "1000" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/2/9/1/dataset_2913239f-1628-4927-a26a-727e95391fe8.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/157/configs/tmpkvplueym\u0027 \u003e \u0027/galaxy/server/database/jobs_directory/000/157/outputs/dataset_553018c0-b31a-4499-8a04-eec8df0cd079.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/157/configs/tmpkvplueym\u0027 \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/157/outputs/dataset_553018c0-b31a-4499-8a04-eec8df0cd079.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/157/outputs/dataset_553018c0-b31a-4499-8a04-eec8df0cd079.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:23:09.844996",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-vzz6g",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "38c9a4797c258bf4",  "inputs": {   "adata": {    "id": "e294b0a5cfb8a795",    "src": "hda",    "uuid": "2913239f-1628-4927-a26a-727e95391fe8"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741893792.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:23:12"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741893797.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:23:17"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "dad0a7480f85a7e0",    "src": "hda",    "uuid": "0512835b-86c5-4da8-b84c-91c89cb5ac98"   },   "hidden_output": {    "id": "0abc98c65cbc1710",    "src": "hda",    "uuid": "553018c0-b31a-4499-8a04-eec8df0cd079"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 1, \"log\": true, \"method\": \"pp.recipe_zheng17\", \"n_top_genes\": \"1000\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "update_time": "2025-03-13T19:23:30.647536",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata_out:  different than expected, difference (using sim_size):\n( /tmp/tmp7env73dcpp.recipe_zheng17.random-randint.h5ad v. /tmp/tmphgcfs3p0pp.recipe_zheng17.random-randint.h5ad )\nFiles /tmp/tmp7env73dcpp.recipe_zheng17.random-randint.h5ad=487656b but /tmp/tmphgcfs3p0pp.recipe_zheng17.random-randint.h5ad=4114792b - compare by size (delta=1000000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 45.490766763687134, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 998[obs]-    n_counts_all[var]-    n_counts-    mean-    std[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #3)" name="2" time="43.25659394264221">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "47ac4f18edf79453",   "src": "hda"  },  "advanced_common|show_log": true,  "method|cv_threshold": "2.0",  "method|log": true,  "method|mean_threshold": "0.01",  "method|method": "pp.recipe_weinreb17",  "method|n_pcs": "50",  "method|random_state": "0",  "method|svd_solver": "randomized" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/c/5/0/dataset_c5027216-0d61-4026-99a2-bc82b8a513b5.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/159/configs/tmpdryxll0a\u0027 \u003e \u0027/galaxy/server/database/jobs_directory/000/159/outputs/dataset_f069fbcc-8813-44b0-8be6-2886a1007d14.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/159/configs/tmpdryxll0a\u0027 \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/159/outputs/dataset_f069fbcc-8813-44b0-8be6-2886a1007d14.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/159/outputs/dataset_f069fbcc-8813-44b0-8be6-2886a1007d14.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:23:54.430190",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-mcf72",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "9994835ac7ad7fc8",  "inputs": {   "adata": {    "id": "47ac4f18edf79453",    "src": "hda",    "uuid": "c5027216-0d61-4026-99a2-bc82b8a513b5"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741893835.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:23:55"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741893841.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:24:01"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "6 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "bf341389d1cad0bc",    "src": "hda",    "uuid": "3dd9d194-2f16-494c-a52c-eba5de29be2b"   },   "hidden_output": {    "id": "6b7c1412add49943",    "src": "hda",    "uuid": "f069fbcc-8813-44b0-8be6-2886a1007d14"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 2, \"cv_threshold\": \"2.0\", \"log\": true, \"mean_threshold\": \"0.01\", \"method\": \"pp.recipe_weinreb17\", \"n_pcs\": \"50\", \"random_state\": \"0\", \"svd_solver\": \"randomized\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "update_time": "2025-03-13T19:24:14.477617",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_weinreb17.paul15_subsample.updated.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 43.25659394264221, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    log1p[obsm]-    X_pca
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #4)" name="3" time="44.6450777053833">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "8aafd77cdf84686f",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_seurat" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/6/b/8/dataset_6b8938f0-fdbd-486c-b56c-bebce14ac469.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/161/configs/tmpvvfwslw6\u0027 \u003e \u0027/galaxy/server/database/jobs_directory/000/161/outputs/dataset_2ed9505c-ea59-4f51-8728-fcc75a845be3.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/161/configs/tmpvvfwslw6\u0027 \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/161/outputs/dataset_2ed9505c-ea59-4f51-8728-fcc75a845be3.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/161/outputs/dataset_2ed9505c-ea59-4f51-8728-fcc75a845be3.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:24:39.130326",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-jv9gw",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "e197210edc71e3de",  "inputs": {   "adata": {    "id": "8aafd77cdf84686f",    "src": "hda",    "uuid": "6b8938f0-fdbd-486c-b56c-bebce14ac469"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741893880.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:24:40"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741893885.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:24:45"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "1787a18226643fa6",    "src": "hda",    "uuid": "c645b562-b164-420e-844b-626cc08eba62"   },   "hidden_output": {    "id": "1231bbb36cfbf541",    "src": "hda",    "uuid": "2ed9505c-ea59-4f51-8728-fcc75a845be3"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 3, \"log\": true, \"method\": \"pp.recipe_seurat\"}"  },  "state": "ok",  "stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "update_time": "2025-03-13T19:24:59.101011",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_seurat.recipe_zheng17.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 44.6450777053833, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1[obs]-    n_counts_all-    n_genes[var]-    n_counts-    mean-    std-    n_cells[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: adata.X seems to be already log-transformed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #5)" name="4" time="44.41477179527283">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "bd7133656b89cac5",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "all_genes",  "method|t": "-1" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/5/1/8/dataset_518183b5-fb32-4b35-859d-97b93c1cdcf8.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/163/configs/tmpya1q5fg1\u0027 \u003e \u0027/galaxy/server/database/jobs_directory/000/163/outputs/dataset_6d328fa0-b493-4998-b55a-1622d5f26d0f.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/163/configs/tmpya1q5fg1\u0027 \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/163/outputs/dataset_6d328fa0-b493-4998-b55a-1622d5f26d0f.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/163/outputs/dataset_6d328fa0-b493-4998-b55a-1622d5f26d0f.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:25:23.688580",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-hnv4q",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "a3c7f82bf4035e7b",  "inputs": {   "adata": {    "id": "bd7133656b89cac5",    "src": "hda",    "uuid": "518183b5-fb32-4b35-859d-97b93c1cdcf8"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741893925.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:25:25"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741893931.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:25:31"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "6 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "0dfbebdf86cfcad9",    "src": "hda",    "uuid": "024593aa-a8eb-43a6-9221-d224d80052fc"   },   "hidden_output": {    "id": "61453eb9925f7e70",    "src": "hda",    "uuid": "6d328fa0-b493-4998-b55a-1622d5f26d0f"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"all_genes\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"-1\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2025-03-13T19:25:43.692622",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.all_genes.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 44.41477179527283, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #6)" name="5" time="43.916244983673096">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "e0e01f4f29ea53b0",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "pca_only",  "method|t": "3" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/1/a/3/dataset_1a3b358a-9c07-4647-96eb-8f8d01111a1e.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/165/configs/tmpizuxdm_n\u0027 \u003e \u0027/galaxy/server/database/jobs_directory/000/165/outputs/dataset_d52ae789-0a05-49dc-909c-1cc911224a22.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/165/configs/tmpizuxdm_n\u0027 \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/165/outputs/dataset_d52ae789-0a05-49dc-909c-1cc911224a22.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/jobs_directory/000/165/outputs/dataset_d52ae789-0a05-49dc-909c-1cc911224a22.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-03-13T19:26:06.732239",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-lp89k",  "galaxy_version": "24.2",  "handler": null,  "history_id": "189dd6c9bdf96b47",  "id": "0015cd7ec3876690",  "inputs": {   "adata": {    "id": "e0e01f4f29ea53b0",    "src": "hda",    "uuid": "1a3b358a-9c07-4647-96eb-8f8d01111a1e"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "container_id",    "plugin": "core",    "raw_value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0",    "title": "Container ID",    "value": "quay.io/biocontainers/mulled-v2-784291a780593dcd9226bd4bde0c101805d870b1:a06f8b4d675e08b4697ef348fe4ca2eeb7fcaca5-0"   },   {    "name": "container_type",    "plugin": "core",    "raw_value": "docker",    "title": "Container Type",    "value": "docker"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1741893968.0000000",    "title": "Job Start Time",    "value": "2025-03-13 19:26:08"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1741893974.0000000",    "title": "Job End Time",    "value": "2025-03-13 19:26:14"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "6 seconds"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "baae463912a94cf4",    "src": "hda",    "uuid": "f6dfd74d-08c3-446a-b0b3-01c1684bc7ba"   },   "hidden_output": {    "id": "85dd9b66f3f01427",    "src": "hda",    "uuid": "d52ae789-0a05-49dc-909c-1cc911224a22"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"pca_only\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"3\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "update_time": "2025-03-13T19:26:27.608340",  "user_email": "tests@fake.org",  "user_id": "189dd6c9bdf96b47" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.pca_only.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 5, "time_seconds": 43.916244983673096, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot[obsm]-    X_magic
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.13872194290161133">
        
            <error type="error" message="Input staging problem: Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py", line 1434, in verify_tool
    stage_data_in_history(
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py", line 163, in stage_data_in_history
    test_dict = galaxy_interactor.remote_to_input(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py", line 582, in remote_to_input
    path_or_location = self._get_path_or_location(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py", line 619, in _get_path_or_location
    path = self.test_data_download(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py", line 525, in test_data_download
    raise AssertionError(f"Test input file ({filename}) cannot be found.")
AssertionError: Test input file (find_variable_genes.h5) cannot be found.
"><![CDATA[
                { "execution_problem": "Input staging problem: Traceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 1434, in verify_tool\n    stage_data_in_history(\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 163, in stage_data_in_history\n    test_dict = galaxy_interactor.remote_to_input(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 582, in remote_to_input\n    path_or_location = self._get_path_or_location(\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 619, in _get_path_or_location\n    path = self.test_data_download(\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 525, in test_data_download\n    raise AssertionError(f\"Test input file ({filename}) cannot be found.\")\nAssertionError: Test input file (find_variable_genes.h5) cannot be found.\n", "status": "error", "test_index": 0, "time_seconds": 0.13872194290161133, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.14088797569274902">
        
            <error type="error" message="Input staging problem: Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py", line 1434, in verify_tool
    stage_data_in_history(
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py", line 163, in stage_data_in_history
    test_dict = galaxy_interactor.remote_to_input(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py", line 582, in remote_to_input
    path_or_location = self._get_path_or_location(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py", line 619, in _get_path_or_location
    path = self.test_data_download(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py", line 525, in test_data_download
    raise AssertionError(f"Test input file ({filename}) cannot be found.")
AssertionError: Test input file (find_variable_genes.h5) cannot be found.
"><![CDATA[
                { "execution_problem": "Input staging problem: Traceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 1434, in verify_tool\n    stage_data_in_history(\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 163, in stage_data_in_history\n    test_dict = galaxy_interactor.remote_to_input(\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 582, in remote_to_input\n    path_or_location = self._get_path_or_location(\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 619, in _get_path_or_location\n    path = self.test_data_download(\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/galaxy/tool_util/verify/interactor.py\", line 525, in test_data_download\n    raise AssertionError(f\"Test input file ({filename}) cannot be found.\")\nAssertionError: Test input file (find_variable_genes.h5) cannot be found.\n", "status": "error", "test_index": 0, "time_seconds": 0.14088797569274902, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="snpeff_sars_cov_2 (Test #1)" name="0" time="82.09655618667603">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #1)" name="0" time="44.85456347465515">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #2)" name="1" time="36.5341272354126">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #1)" name="0" time="36.809962034225464">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #2)" name="1" time="37.41865849494934">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #3)" name="2" time="37.70421123504639">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #1)" name="0" time="65.55396866798401">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #2)" name="1" time="45.345032930374146">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #3)" name="2" time="43.96076250076294">
        
            
            <system-out><![CDATA[
            null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #4)" name="3" time="41.1288743019104">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #5)" name="4" time="42.33513379096985">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
</testsuite>